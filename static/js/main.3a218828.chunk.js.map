{"version":3,"sources":["models/types.ts","components/AppHeader.tsx","components/AppSideBar.tsx","components/AppPreloader.tsx","components/UploadFileForm.tsx","components/AppAlert.tsx","components/SelectParentCategory.tsx","components/AppMap.tsx","api/axios.tsx","models/Contractors.ts","components/ImagesList.tsx","components/AppSearchField.tsx","store/selectors/contractors.ts","models/Orders.ts","pages/HomePage/components/ContractorsStatistic.tsx","store/selectors/orders.ts","pages/HomePage/components/OrdersStatistic.tsx","services/contractorsApi.ts","services/attachmentsApi.ts","store/actions/contractors.ts","services/ordersApi.ts","store/actions/orders.ts","pages/HomePage/HomePage.tsx","utils/formatter.ts","pages/OrdersPage/OrdersPage.tsx","utils/validatorsSchemes.ts","store/selectors/categories.ts","services/categoriesApi.ts","store/actions/categories.ts","utils/getBase64.ts","pages/OrderCreatePage/components/OrderCreateForm.tsx","pages/OrderCreatePage/OrderCreatePage.tsx","pages/OrderPage/components/OrderEditableField.tsx","pages/OrderPage/components/OrderInfoBody.tsx","pages/OrderPage/components/OrderDescription.tsx","pages/OrderPage/OrderPage.tsx","pages/ContractorsPage/ContractorsPage.tsx","pages/ContractorPage/components/ContractorEditableField.tsx","pages/ContractorPage/components/ContractorInfoBody.tsx","pages/ContractorPage/components/ContractorDescription.tsx","pages/ContractorPage/ContractorPage.tsx","pages/ContractorCreatePage/components/ContractorField.tsx","pages/ContractorCreatePage/components/SupplierDescrForm.tsx","pages/ContractorCreatePage/components/CustomerDescrForm.tsx","pages/ContractorCreatePage/ContractorCreatePage.tsx","pages/CategoriesPage/components/CategoryEditableField.tsx","pages/CategoriesPage/components/MainCategoryActions.tsx","pages/CategoriesPage/CategoriesPage.tsx","pages/CategoryCreatePage/CategoryCreatePage.tsx","pages/DeletedCategoriesPage/DeletedCategoriesPage.tsx","layouts/MainLayout.tsx","App.tsx","reportWebVitals.ts","store/reducers/auth.ts","store/reducers/categories.ts","store/reducers/contractors.ts","store/reducers/orders.ts","store/store.ts","index.tsx"],"names":["ActionStatusEnum","Header","Layout","AppHeader","React","useState","currentLocation","setCurrentLocation","location","useLocation","useEffect","pathname","split","offsetTop","className","to","theme","mode","defaultSelectedKeys","selectedKeys","Item","SubMenu","Menu","Sider","AppSideBar","search","width","icon","GroupOutlined","title","UserOutlined","ClusterOutlined","memo","AppPreloader","size","UploadFileForm","onChange","isUploading","inputRef","useRef","input","current","addEventListener","removeEventListener","onClick","click","PlusOutlined","ref","type","hidden","accept","AppAlert","status","errorMessage","successMessage","onClose","NEVER","message","ERROR","closable","Option","Select","Text","Typography","SelectParentCategory","mainCategories","handleChangeParentId","item","error","classNames","defaultValue","parentId","id","name","map","mainCat","value","AppMap","withScriptjs","withGoogleMap","handleSelectCoords","marker","defaultZoom","coordinatesLatitude","length","defaultCenter","lat","Number","lng","coordinatesLongitude","e","latLng","position","baseURL","axios","interceptors","request","use","config","headers","timeout","ContractorTypesEnum","ContractorStatusEnum","ImagesList","images","editMode","removeImage","img","shape","DeleteOutlined","src","attachmentLink","String","AppSearchField","placeholder","OrderStatusEnum","getContractorsState","state","contractors","getContractorsListState","getCurrentContractorState","currentContractor","getFilteredContractorsListState","searchText","filter","createSelector","contractor","isDeleted","contractorType","CUSTOMER","SUPPLIER","toLowerCase","includes","getContractorsLoadingState","contractorsLoading","getContractorsActionStatusState","contractorsActionStatus","getContractorsErrorMessage","getContractorsCountState","getCustomersCountState","getSuppliersCountState","getDeletedContractorCountState","getContractorImagesState","contractorImages","getContractorImageUploadingState","contractorImageUploading","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","ContractorsStatistic","activeIndex","setActiveIndex","allContractorsCount","useSelector","customersCount","suppliersCount","deletedContractorsCount","data","useMemo","ResponsiveContainer","PieChart","height","Pie","activeShape","dataKey","onMouseEnter","_","index","getOrdersState","orders","getOrdersListState","getFilteredOrdersListState","order","orderStatus","NEW","DELETED","ARCHIVED","getOrdersLoadingState","ordersLoading","getOrdersErrorMessageState","getOrderActionStatusState","orderActionStatus","getCurrentOrderState","currentOrder","getAllOrdersCountState","getActiveOrdersCountState","getDeletedOrdersCountState","getHistoryOrdersCountState","getOrderImagesState","orderImages","getOrderImagesLoadingState","OrdersStatistic","allOrdersCount","activeOrdersCount","deletedOrdersCount","historyOrdersCount","contractorsApi","getContractors","a","get","createContractor","formData","post","updateContractor","patch","deleteContractor","contractorId","delete","getContractorById","removeContractorAttachment","attachmentId","attachmentsApi","addAttachment","attachment","removeAttachment","contractorActions","imageId","showError","text","dispatch","console","log","SUCCESS","addContractorImage","image","imageOut","ordersApi","getOrders","createOrder","getOrderById","orderId","deleteOrder","updateOrder","removeOrderAttachment","ordersActions","orderImageUploading","addOrderImage","Title","Content","HomePage","useDispatch","moment","locale","formatDate","date","format","columns","dataIndex","render","colors","color","sorter","compare","b","localeCompare","creationDate","defaultSortOrder","actualDate","categories","category","totalSum","OrdersPage","setSearchText","query","URLSearchParams","ordersError","history","useHistory","clearState","useCallback","currentTarget","dataSource","rowKey","expandable","expandedRowRender","description","push","handleViewOrder","window","confirm","danger","orderSchema","yup","max","required","typeError","comment","supplierSchema","phoneNumber","min","address","contactName","webSite","eMail","email","customerSchema","otp","matches","categorySchema","getCategoriesState","getAllCategoriesState","getCategoriesErrorMessageState","getCategoriesLoadingState","isLoadingCategories","getMainCategoriesState","getSubCategoriesState","getDeletedCategoriesState","getCategoryInProcessEditState","categoryInProcessEdit","getCategoriesActionStatusState","categoriesActionStatus","getCategoriesTreeDataState","subCategories","subCats","subCat","key","children","categoriesApi","getAllCategories","deleteAllCategories","addCategory","getCategoryById","deleteCategoryById","updateCategoryById","categoriesActions","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","OrderCreateForm","control","errors","rules","field","validateStatus","help","TextArea","SHOW_ALL","TreeSelect","OrderCreatePage","useForm","resolver","yupResolver","reset","handleSubmit","formState","selectedCategories","setSelectedCategories","orderError","orderLoadingState","orderUploading","categoriesTree","categoriesError","clearOrderState","clearCategoriesState","handleUploadImage","target","files","base64","ext","pop","content","onSubmit","categoryId","newOrder","attachments","customerId","level","treeData","treeCheckable","showCheckedStrategy","style","marginBottom","maxTagCount","removeNewOrderImage","disabled","Object","keys","OrderEditableField","fieldName","isTextArea","isNumberInput","OrderInfoBody","handleSelectCategories","handleRemoveImage","handleAddImage","imageUploading","OrderDescription","column","label","OrderPage","setEditMode","useParams","toggleEditMode","prev","updatedOrder","editActionsButtons","actionsButtons","alert","ghost","onBack","back","extra","removeOrderImage","UNKNOWN","rating","ContractorsPage","contractorsError","ContractorEditableField","str","n","maxLength","href","rel","substr","ContractorInfoBody","registeringType","ContractorDescription","handleSelectRegType","toggleShowMap","Group","contacts","ContractorPage","setLatLng","setRegisteringType","showMap","setShowMap","contractorActionStatus","contractorError","contractorLoadingState","coordinates","newContractor","slice","handleDeleteContractor","handleCancelEdit","checkDisabledBtn","actionButtons","containerElement","mapElement","googleMapURL","loadingElement","removeContractorImage","ContractorField","subtitle","textArea","InputField","Input","fields","SupplierDescrForm","CustomerDescrForm","ContractorCreatePage","contractorLoading","clearContractorsState","contractorsList","createContractorProfile","block","removeNewContractorImage","CategoryEditableField","currentValue","tooltip","stopPropagation","CategoryActions","disabledBtn","onSave","onEdit","onRemove","Panel","Collapse","CategoriesPage","editableCategory","setEditableCategory","categoriesLoading","categoryInEditProcess","onCategoryNameChange","accordion","header","MainCategoryActions","renderItem","actions","Meta","CategoryCreatePage","createdCategory","createCategory","DeletedCategoriesPage","deletedCategories","updateCategory","onRestore","MainLayout","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","currentCategory","categoriesReducer","newCategoriesList","contractorsReducer","ordersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","auth","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"mJAaYA,E,4GCTJC,EAAWC,IAAXD,OA6COE,EA3CG,WAChB,MAA8CC,IAAMC,SAAmB,CAAC,MAAxE,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAWC,cAMjB,OAJAL,IAAMM,WAAU,WACdH,EAAmB,CAACC,EAASG,SAASC,MAAM,KAAK,OAChD,CAACJ,IAGF,cAAC,IAAD,CAAOK,UAAW,EAAlB,SACE,eAACZ,EAAD,CAAQa,UAAU,SAAlB,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,IAAD,CAASC,GAAG,IAAZ,0DAEF,eAAC,IAAD,CACEC,MAAM,OACNC,KAAK,aACLC,oBAAqB,CAAC,SACtBC,aAAcb,EACdQ,UAAU,eALZ,UAOE,cAAC,IAAKM,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,QAAZ,yDADa,QAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,UAAZ,mDADa,UAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,eAAZ,iFADa,eAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,cAAZ,qEADa,iBAIjB,qBAAKD,UAAU,iBAAf,SACE,cAAC,IAAD,CAASC,GAAG,aAAZ,oD,2BChCFM,EAAYC,IAAZD,QACAE,EAAUrB,IAAVqB,MAEFC,EAAa,WACjB,MAA8CpB,IAAMC,SAAmB,CAAC,MAAxE,mBAAOC,EAAP,KAAwBC,EAAxB,KAEMC,EAAWC,cAMjB,OAJAL,IAAMM,WAAU,WACdH,EAAmB,CAAC,GAAD,OAAIC,EAASG,UAAb,OAAwBH,EAASiB,YACnD,CAACjB,IAGF,cAAC,IAAD,CAAOK,UAAW,GAAlB,SACE,cAACU,EAAD,CAAOG,MAAO,IAAKZ,UAAU,iCAA7B,SACE,eAAC,IAAD,CACEG,KAAK,SACLH,UAAU,gBACVK,aAAcb,EAHhB,UAKE,eAACe,EAAD,CAAoBM,KAAM,cAACC,EAAA,EAAD,IAAmBC,MAAM,uCAAnD,UACE,cAAC,IAAKT,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,UAAZ,sEADa,WAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,wBAAZ,oGADa,yBAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,0BAAZ,oGADa,2BAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,yBAAZ,0GADa,0BAIf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,iBAAZ,8FADa,oBAdJ,QAmBb,eAACM,EAAD,CAAoBM,KAAM,cAACG,EAAA,EAAD,IAAkBD,MAAM,qEAAlD,UACE,cAAC,IAAKT,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,eAAZ,oGADa,yBAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,gCAAZ,qEADa,iCAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,+BAAZ,2EADa,gCAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,8BAAZ,qEADa,+BAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,sBAAZ,4HADa,yBAbJ,QAkBb,eAACM,EAAD,CAAoBM,KAAM,cAACI,EAAA,EAAD,IAAqBF,MAAM,yDAArD,UACE,cAAC,IAAKT,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,cAAZ,wFADa,eAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,sBAAZ,4HADa,uBAGf,cAAC,IAAKK,KAAN,UACE,cAAC,IAAD,CAASL,GAAG,qBAAZ,gHADa,wBAPJ,gBAiBRX,MAAM4B,KAAKR,G,SCnEXS,EAVuC,SAAC,GAEhD,IAAD,IADJC,YACI,MADG,UACH,EACJ,OACE,qBAAKpB,UAAU,YAAf,SACE,cAAC,IAAD,CAAMoB,KAAMA,O,SCmCHC,EAtC2C,SAAC,GAGpD,IAFLC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEMC,EAAWlC,IAAMmC,OAAyB,MAgBhD,OAVAnC,IAAMM,WAAU,WACd,IAAM8B,EAAQF,EAASG,QAIvB,OAHIH,IACG,OAALE,QAAK,IAALA,KAAOE,iBAAiB,SAAUN,IAE7B,WACA,OAALI,QAAK,IAALA,KAAOG,oBAAoB,SAAUP,MAEtC,CAACA,IAGF,qBAAKtB,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAc8B,QAhBb,WAAO,IAAD,EACxB,UAAAN,EAASG,eAAT,SAAkBI,SAehB,UACE,qBAAK/B,UAAU,mBAAf,SACGuB,EACC,cAAC,IAAD,IAEA,qCACE,cAACS,EAAA,EAAD,IADF,IACmB,8FAIvB,uBAAOC,IAAKT,EAAUU,KAAK,OAAOC,QAAM,EAACC,OAAO,kB,mBJ5B5ClD,K,kBAAAA,E,cAAAA,E,eAAAA,M,KKFZ,IAuBemD,EAvB4B,SAAC,GAKrC,IAJLC,EAII,EAJJA,OACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,eACAC,EACI,EADJA,QAEA,OAAIH,IAAWpD,EAAiBwD,MACvB,KAIP,cAAC,IAAD,CACE1C,UAAU,QACV2C,QACEL,IAAWpD,EAAiB0D,MAAQL,EAAeC,EAErDN,KAAMI,IAAWpD,EAAiB0D,MAAQ,QAAU,UACpDC,UAAQ,EACRJ,QAASA,K,0CCxBPK,EAAWC,IAAXD,OACAE,EAASC,IAATD,KA2COE,EAlCuD,SAAC,GAKhE,IAJLC,EAII,EAJJA,eACAC,EAGI,EAHJA,qBACAC,EAEI,EAFJA,KACAC,EACI,EADJA,MAEA,OACE,sBACEtD,UAAWuD,IAAW,6BAA8B,CAClD,2BAA4BD,IAFhC,UAKE,cAACN,EAAD,CAAMhD,UAAU,WAAhB,8LACA,cAAC,IAAD,CACEwD,aAAcH,EAAOA,EAAKI,SAAW,EACrCnC,SAAU8B,EACVpD,UAAU,qBAHZ,SAKGmD,GACC,CAAC,CAAEO,GAAI,EAAGC,KAAM,4GAAhB,mBAA2CR,IAAgBS,KACzD,SAACC,GACC,OACE,cAACf,EAAD,CAAQgB,MAAOD,EAAQH,GAAvB,SACGG,EAAQF,MADqBE,EAAQH,SAOlD,cAACV,EAAD,CAAMhD,UAAU,aAAhB,SAA8BsD,Q,SCYrBS,EAtCXC,uBACFC,yBAAc,YAAqC,IAAlCC,EAAiC,EAAjCA,mBAAoBC,EAAa,EAAbA,OAOnC,OACE,cAAC,YAAD,CACEC,YACED,GAAUA,EAAOE,oBAAoBC,OAAS,EAAI,GAAU,EAE9DC,cACEJ,GACIA,EAAOE,oBAAoBC,OAAS,EAClC,CACEE,IAAKC,OAAON,EAAOE,qBACnBK,IAAKD,OAAON,EAAOQ,uBAGvB,CAAEH,IAAK,iBAAkBE,IAAK,mBAEpC5C,QArBe,SACjB8C,GAEAV,EAAmBU,EAAEC,SAIrB,SAgBGV,GACC,cAAC,SAAD,CACEW,SAAU,CACRN,IAAKC,OAAON,EAAOE,qBACnBK,IAAKD,OAAON,EAAOQ,+B,kBC7CpBI,EAAU,kCAEvBC,IAAMC,aAAaC,QAAQC,KAAI,SAACC,GAK9B,OAJAA,EAAOC,QAAQ,uCAAyC,sBACxDD,EAAOC,QAAP,cAAkC,yBAClCD,EAAOL,QAAUA,EACjBK,EAAOE,QAAU,IACVF,K,ICKGG,EAMAC,E,2BCsBGC,EA9BmC,SAAC,GAI5C,IAHLC,EAGI,EAHJA,OACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,OACE,qBAAK5F,UAAU,qBAAf,SACG0F,GACCA,EAAO9B,KAAI,SAACiC,GAAD,OACT,sBAA0B7F,UAAU,uBAApC,UACG2F,GACC,cAAC,IAAD,CACEzD,KAAK,UACL4D,MAAM,SACNjF,KAAM,cAACkF,EAAA,EAAD,IACN3E,KAAK,SACLpB,UAAU,sBACV8B,QAAS,kBAAM8D,EAAYC,EAAInC,OAGnC,cAAC,IAAD,CACE9C,MAAO,IACPoF,IAAG,UAAKjB,GAAL,OAAec,EAAII,gBACtBjG,UAAU,mBAdJkG,OAAOL,EAAInC,W,SCGhByC,EAf2C,SAAC,GAIpD,IAHLrC,EAGI,EAHJA,MACAxC,EAEI,EAFJA,SACA8E,EACI,EADJA,YAEA,OACE,sBAAKpG,UAAU,SAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAD,CAAOoG,YAAaA,EAAatC,MAAOA,EAAOxC,SAAUA,MAE3D,qBAAKtB,UAAU,wB,mEFLTuF,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,cAMAC,K,UAAAA,E,wBAAAA,E,iBAAAA,M,KGbZ,ICaYa,GDbNC,GAAsB,SAACC,GAAD,OAAyBA,EAAMC,aAErDC,GAA0B,SAACF,GAAD,OAC9BA,EAAMC,YAAYA,aAEPE,GAA4B,SAACH,GAAD,OACvCD,GAAoBC,GAAOI,mBAEhBC,GAAkC,SAC7CC,EACAC,GAF6C,OAI7CC,aAAe,CAACN,KAA0B,SAACD,GAAiB,IAAD,EACzD,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EACHM,QAAO,SAACE,GACR,MAAe,YAAXF,EACKE,EAAWC,UACE,cAAXH,EACFE,EAAWE,iBAAmB3B,EAAoB4B,SACrC,aAAXL,GACFE,EAAWE,iBAAmB3B,EAAoB6B,mBAP/D,aAAO,EAWHN,QAAO,SAACE,GAAD,OACPA,EAAWrD,KAAK0D,cAAcC,SAAST,EAAWQ,sBAI7CE,GAA6B,SAAChB,GAAD,OACxCD,GAAoBC,GAAOiB,oBAChBC,GAAkC,SAAClB,GAAD,OAC7CD,GAAoBC,GAAOmB,yBAChBC,GAA6B,SAACpB,GAAD,OACxCD,GAAoBC,GAAOhE,cAEhBqF,GAA2Bb,aACtC,CAACH,GAAgC,GAAI,QACrC,SAACJ,GAAD,cAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAalC,UAGnBuD,GAAyBd,aACpC,CAACH,GAAgC,GAAI,eACrC,SAACJ,GAAD,cAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAalC,UAGnBwD,GAAyBf,aACpC,CAACH,GAAgC,GAAI,cACrC,SAACJ,GAAD,cAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAalC,UAGnByD,GAAiChB,aAC5C,CAACH,GAAgC,GAAI,aACrC,SAACJ,GAAD,cAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAalC,UAGnB0D,GAA2B,SAACzB,GAAD,OACtCD,GAAoBC,GAAO0B,kBAChBC,GAAmC,SAAC3B,GAAD,OAC9CD,GAAoBC,GAAO4B,0BEvDrBnF,GAASC,IAATD,KAEFoF,GAAoB,SAACC,GACzB,IAAMC,EAASC,KAAKC,GAAK,IAEvBC,EAWEJ,EAXFI,GACAC,EAUEL,EAVFK,GACAC,EASEN,EATFM,SACAC,EAQEP,EARFO,YACAC,EAOER,EAPFQ,YACAC,EAMET,EANFS,WACAC,EAKEV,EALFU,SACAC,EAIEX,EAJFW,KACAC,EAGEZ,EAHFY,QACAC,EAEEb,EAFFa,QACApF,EACEuE,EADFvE,MAGIqF,EAAMZ,KAAKY,KAAKb,EAASK,GACzBS,EAAMb,KAAKa,KAAKd,EAASK,GACzBU,EAAKZ,GAAMI,EAAc,IAAMO,EAC/BE,EAAKZ,GAAMG,EAAc,IAAMM,EAC/BI,EAAKd,GAAMI,EAAc,IAAMO,EAC/BI,EAAKd,GAAMG,EAAc,IAAMM,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MACxC,OACE,8BACE,sBAAMQ,EAAGnB,EAAIoB,EAAGnB,EAAIoB,GAAI,EAAGH,WAAW,SAASX,KAAMA,EAArD,SACGC,EAAQtF,OAEX,cAACoG,EAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJE,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,SAAUA,EACVC,KAAMA,IAER,cAACe,EAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJI,WAAYA,EACZC,SAAUA,EACVH,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BG,KAAMA,IAER,sBACEgB,EAAC,WAAMX,EAAN,YAAYC,EAAZ,YAAkBC,EAAlB,YAAwBC,EAAxB,YAA8BC,EAA9B,YAAoCC,GACrCO,OAAQjB,EACRA,KAAK,SAEP,wBAAQP,GAAIgB,EAAIf,GAAIgB,EAAIQ,EAAG,EAAGlB,KAAMA,EAAMiB,OAAO,SACjD,sBACEL,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHC,WAAYA,EACZX,KAAK,OAJP,mBAKKC,EAAQtF,KALb,YAKqBG,EALrB,mBAMA,sBACE8F,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHI,GAAI,GACJH,WAAYA,EACZX,KAAK,OALP,gEAO0B,IAAVE,GAAeiB,QAAQ,GAPvC,YAkESC,GArDc,WAC3B,MAAsC9K,IAAMC,WAA5C,mBAAO8K,EAAP,KAAoBC,EAApB,KAQMC,EAAsBC,YAAY5C,IAClC6C,EAAiBD,YAAY3C,IAC7B6C,EAAiBF,YAAY1C,IAC7B6C,EAA0BH,YAAYzC,IAEtC6C,EAAOtL,IAAMuL,SAAQ,WACzB,MAAO,CACL,CAAElH,KAAM,+DAAcG,MAAO2G,GAAkC,GAC/D,CAAE9G,KAAM,qEAAeG,MAAO4G,GAAkC,GAChE,CACE/G,KAAM,yDACNG,MAAO6G,GAAoD,MAG9D,CAACF,EAAgBE,EAAyBD,IAE7C,OACE,sBAAK1K,UAAU,iBAAf,UACE,cAAC,GAAD,CAAMA,UAAU,uBAAhB,gFACA,eAAC,GAAD,CAAMA,UAAU,0BAAhB,sHACuBuK,KAEtBK,GACC,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUnK,MAAO,IAAKoK,OAAQ,IAA9B,SACE,cAACC,GAAA,EAAD,CACEZ,YAAaA,EACba,YAAa9C,GACbwC,KAAMA,EACNnC,GAAG,MACHC,GAAG,MACHE,YAAa,GACbC,YAAa,GACbG,KAAK,UACLmC,QAAQ,QACRC,aAvCO,SAACC,EAAQC,GAC1BhB,EAAegB,e,SDxEPjF,K,UAAAA,E,oBAAAA,E,mBAAAA,Q,KEfZ,IAAMkF,GAAiB,SAAChF,GAAD,OAAyBA,EAAMiF,QAChDC,GAAqB,SAAClF,GAAD,OAAyBA,EAAMiF,OAAOA,QAEpDE,GAA6B,SACxC7E,EACAC,GAFwC,OAIxCC,aAAe,CAAC0E,KAAqB,SAACD,GAAY,IAAD,EAC/C,cAAOA,QAAP,IAAOA,GAAP,UAAOA,EACH1E,QAAO,SAAC6E,GACR,MAAe,WAAX7E,EACK6E,EAAMC,cAAgBvF,GAAgBwF,IACzB,YAAX/E,EACF6E,EAAMC,cAAgBvF,GAAgByF,QACzB,aAAXhF,GACF6E,EAAMC,cAAgBvF,GAAgB0F,mBAPnD,aAAO,EAWHjF,QAAO,SAAC6E,GAAD,OACPA,EAAM5K,MAAMsG,cAAcC,SAAST,EAAWQ,sBAIzC2E,GAAwB,SAACzF,GAAD,OACnCgF,GAAehF,GAAO0F,eAEXC,GAA6B,SAAC3F,GAAD,OACxCgF,GAAehF,GAAOhE,cAEX4J,GAA4B,SAAC5F,GAAD,OACvCgF,GAAehF,GAAO6F,mBAEXC,GAAuB,SAAC9F,GAAD,OAClCgF,GAAehF,GAAO+F,cAEXC,GAAyBxF,aACpC,CAAC2E,GAA2B,GAAI,QAChC,SAACF,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQlH,UAGTkI,GAA4BzF,aACvC,CAAC2E,GAA2B,GAAI,YAChC,SAACF,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQlH,UAGTmI,GAA6B1F,aACxC,CAAC2E,GAA2B,GAAI,aAChC,SAACF,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQlH,UAGToI,GAA6B3F,aACxC,CAAC2E,GAA2B,GAAI,cAChC,SAACF,GAAD,cAAYA,QAAZ,IAAYA,OAAZ,EAAYA,EAAQlH,UAGTqI,GAAsB,SAACpG,GAAD,OACjCgF,GAAehF,GAAOqG,aAEXC,GAA6B,SAACtG,GAAD,OACxCgF,GAAehF,GAAO0F,eCtDhBjJ,GAASC,IAATD,KAEFoF,GAAoB,SAACC,GACzB,IAAMC,EAASC,KAAKC,GAAK,IAEvBC,EAWEJ,EAXFI,GACAC,EAUEL,EAVFK,GACAC,EASEN,EATFM,SACAC,EAQEP,EARFO,YACAC,EAOER,EAPFQ,YACAC,EAMET,EANFS,WACAC,EAKEV,EALFU,SACAC,EAIEX,EAJFW,KACAC,EAGEZ,EAHFY,QACAC,EAEEb,EAFFa,QACApF,EACEuE,EADFvE,MAGIqF,EAAMZ,KAAKY,KAAKb,EAASK,GACzBS,EAAMb,KAAKa,KAAKd,EAASK,GACzBU,EAAKZ,GAAMI,EAAc,IAAMO,EAC/BE,EAAKZ,GAAMG,EAAc,IAAMM,EAC/BI,EAAKd,GAAMI,EAAc,IAAMO,EAC/BI,EAAKd,GAAMG,EAAc,IAAMM,EAC/BM,EAAKF,EAA2B,IAArBH,GAAO,EAAI,GAAK,GAC3BM,EAAKF,EACLG,EAAaP,GAAO,EAAI,QAAU,MACxC,OACE,8BACE,sBAAMQ,EAAGnB,EAAIoB,EAAGnB,EAAIoB,GAAI,EAAGH,WAAW,SAASX,KAAMA,EAArD,SACGC,EAAQtF,OAEX,cAACoG,EAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJE,YAAaA,EACbC,YAAaA,EACbC,WAAYA,EACZC,SAAUA,EACVC,KAAMA,IAER,cAACe,EAAA,EAAD,CACEtB,GAAIA,EACJC,GAAIA,EACJI,WAAYA,EACZC,SAAUA,EACVH,YAAaC,EAAc,EAC3BA,YAAaA,EAAc,GAC3BG,KAAMA,IAER,sBACEgB,EAAC,WAAMX,EAAN,YAAYC,EAAZ,YAAkBC,EAAlB,YAAwBC,EAAxB,YAA8BC,EAA9B,YAAoCC,GACrCO,OAAQjB,EACRA,KAAK,SAEP,wBAAQP,GAAIgB,EAAIf,GAAIgB,EAAIQ,EAAG,EAAGlB,KAAMA,EAAMiB,OAAO,SACjD,sBACEL,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHC,WAAYA,EACZX,KAAK,OAJP,mBAKKC,EAAQtF,KALb,YAKqBG,EALrB,mBAMA,sBACE8F,EAAGH,EAA2B,IAArBL,GAAO,EAAI,GAAK,GACzBS,EAAGH,EACHI,GAAI,GACJH,WAAYA,EACZX,KAAK,OALP,gEAO0B,IAAVE,GAAeiB,QAAQ,GAPvC,YAkES2C,GArDS,WACtB,MAAsCxN,IAAMC,WAA5C,mBAAO8K,EAAP,KAAoBC,EAApB,KAQMyC,EAAiBvC,YAAY+B,IAC7BS,EAAoBxC,YAAYgC,IAChCS,EAAqBzC,YAAYiC,IACjCS,EAAqB1C,YAAYkC,IAEjC9B,EAAOtL,IAAMuL,SAAQ,WACzB,MAAO,CACL,CAAElH,KAAM,mDAAYG,MAAOkJ,GAAwC,GACnE,CAAErJ,KAAM,mDAAYG,MAAOoJ,GAA0C,GACrE,CACEvJ,KAAM,yDACNG,MAAOmJ,GAA0C,MAGpD,CAACD,EAAmBC,EAAoBC,IAE3C,OACE,sBAAKlN,UAAU,iBAAf,UACE,cAAC,GAAD,CAAMA,UAAU,uBAAhB,kDACA,eAAC,GAAD,CAAMA,UAAU,0BAAhB,kFACiB+M,KAEhBnC,GACC,cAACE,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAUnK,MAAO,IAAKoK,OAAQ,IAA9B,SACE,cAACC,GAAA,EAAD,CACEZ,YAAaA,EACba,YAAa9C,GACbwC,KAAMA,EACNnC,GAAG,MACHC,GAAG,MACHE,YAAa,GACbC,YAAa,GACbG,KAAK,UACLmC,QAAQ,QACRC,aAvCO,SAACC,EAAQC,GAC1BhB,EAAegB,c,4BCtFN6B,GAAiB,CAE5BC,eAAe,WAAD,8BAAE,+BAAAC,EAAA,sEACSrI,IAAMsI,IAAsB,eADrC,uBACN1C,EADM,EACNA,KADM,kBAEPA,GAFO,2CAAF,kDAAC,GAIf2C,iBAAiB,WAAD,8BAAE,WAChBC,GADgB,kBAAAH,EAAA,sEAGOrI,IAAMyI,KAC3B,cACAD,GALc,uBAGR5C,EAHQ,EAGRA,KAHQ,kBAOTA,GAPS,2CAAF,mDAAC,GAYjB8C,iBAAiB,WAAD,8BAAE,WAChBF,EACA9J,GAFgB,kBAAA2J,EAAA,sEAIOrI,IAAM2I,MAAN,uBAA4BjK,GAAM8J,GAJzC,uBAIR5C,EAJQ,EAIRA,KAJQ,kBAKTA,GALS,2CAAF,qDAAC,GAOjBgD,iBAAiB,WAAD,8BAAE,WAAOC,GAAP,kBAAAR,EAAA,sEACOrI,IAAM8I,OAAN,uBACLD,IAFF,uBACRjD,EADQ,EACRA,KADQ,kBAITA,GAJS,2CAAF,mDAAC,GASjBmD,kBAAkB,WAAD,8BAAE,WACjBF,GADiB,kBAAAR,EAAA,sEAGMrI,IAAMsI,IAAN,uBACLO,IAJD,uBAGTjD,EAHS,EAGTA,KAHS,kBAMVA,GANU,2CAAF,mDAAC,GAWlBoD,2BAA2B,WAAD,8BAAE,WAC1BH,EACAI,GAF0B,kBAAAZ,EAAA,sEAIHrI,IAAM8I,OAAN,uBACLD,EADK,wBACuBI,IALpB,uBAIlBrD,EAJkB,EAIlBA,KAJkB,kBAOnBA,GAPmB,2CAAF,qDAAC,IChDhBsD,GAAiB,CAC5BC,cAAc,WAAD,8BAAE,WACbC,GADa,kBAAAf,EAAA,sEAGUrI,IAAMyI,KAC3B,cACAW,GALW,uBAGLxD,EAHK,EAGLA,KAHK,kBAONA,GAPM,2CAAF,mDAAC,GASdyD,iBAAiB,WAAD,8BAAE,WAAO3K,GAAP,kBAAA2J,EAAA,sEACOrI,IAAM8I,OAAN,sBAAqCpK,IAD5C,uBACRkH,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAF,mDAAC,ICCN0D,GACW,SAAC3H,GACrB,MAAO,CACLzE,KAAM,yBACN+G,QAAS,CAAEtC,uBAJJ2H,GAOY,SAAC9G,GACtB,MAAO,CACLtF,KAAM,0BACN+G,QAAS,CAAEzB,wBAVJ8G,GAaiB,SAAC5G,GAC3B,MAAO,CACLxF,KAAM,gCACN+G,QAAS,CAAEvB,6BAhBJ4G,GAmBiB,SAAC/L,GAC3B,MAAO,CACLL,KAAM,gCACN+G,QAAS,CAAE1G,kBAtBJ+L,GAyBK,SAAC9H,GACf,MAAO,CACLtE,KAAM,kBACN+G,QAAS,CAAEzC,iBA5BJ8H,GA+BO,SAACT,GACjB,MAAO,CACL3L,KAAM,oBACN+G,QAAS,CAAE4E,kBAlCJS,GAqCkB,SAACnG,GAC5B,MAAO,CACLjG,KAAM,iCACN+G,QAAS,CAAEd,8BAxCJmG,GA2CU,SAAC5I,GACpB,MAAO,CACLxD,KAAM,wBACN+G,QAAS,CAAEvD,YA9CJ4I,GAiDS,SAAC5I,GACnB,MAAO,CACLxD,KAAM,uBACN+G,QAAS,CAAEvD,YApDJ4I,GAuDY,SAACC,GACtB,MAAO,CACLrM,KAAM,0BACN+G,QAAS,CAAEsF,aA1DJD,GA6DY,WACrB,MAAO,CACLpM,KAAM,4BAKNsM,GAAY,SAACC,EAAcC,GAC/BA,EACEJ,GAA6CpP,EAAiB0D,QAEhE8L,EAASJ,GAA6CG,KAyB3CrB,GAAiB,2DAAsB,WAAOsB,GAAP,gBAAArB,EAAA,sEAEhDqB,EAASJ,IAAwC,IAFD,SAGtBnB,GAAeC,iBAHO,OAG1C5G,EAH0C,OAIhDkI,EAASJ,GAAiC9H,IAJM,gDAMhDmI,QAAQC,IAAI,sBAAZ,MACAJ,GAAU,oKAAmCE,GAPG,yBAShDA,EAASJ,IAAwC,IATD,4EAAtB,uDAajBV,GACX,SAACC,GAAD,gDACA,WAAOa,GAAP,UAAArB,EAAA,sEAEIqB,EAASJ,IAAwC,IAFrD,SAG2BnB,GAAeS,iBAAiBC,GAH3D,eAKMa,EACEJ,GAA6CpP,EAAiB2P,UAEhEH,EAASJ,GAAmCT,IAC5Ca,EAASJ,GAAuC,QAEhDE,GAAU,8OAAiDE,GAXjE,gDAcIC,QAAQC,IAAI,yBAAZ,MACAJ,GAAU,oKAAmCE,GAfjD,yBAiBIA,EAASJ,IAAwC,IAjBrD,4EADA,uDAmEWQ,GACX,SAACC,GAAD,gDACA,WAAOL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASJ,IAA8C,IAF3D,SAG2BJ,GAAeC,cAAcY,GAHxD,QAGUC,EAHV,QAKiB1K,OAAS,EACpBoK,EAASJ,GAAqCU,IAE9CR,GACE,sQACAE,GAVR,gDAcIC,QAAQC,IAAI,2BAAZ,MACAJ,GAAU,oKAAmCE,GAfjD,yBAiBIA,EAASJ,IAA8C,IAjB3D,4EADA,uDC9LWW,GAAY,CAGvBC,UAAU,WAAD,8BAAE,+BAAA7B,EAAA,sEACcrI,IAAMsI,IAAiB,UADrC,uBACD1C,EADC,EACDA,KADC,kBAEFA,GAFE,2CAAF,kDAAC,GAIVuE,YAAY,WAAD,8BAAE,WAAO3B,GAAP,kBAAAH,EAAA,sEACYrI,IAAMyI,KAAkB,SAAUD,GAD9C,uBACH5C,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,GAOZwE,aAAa,WAAD,8BAAE,WAAOC,GAAP,kBAAAhC,EAAA,sEACWrI,IAAMsI,IAAN,kBAAkC+B,IAD7C,uBACJzE,EADI,EACJA,KADI,kBAELA,GAFK,2CAAF,mDAAC,GAIb0E,YAAY,WAAD,8BAAE,WAAOD,GAAP,kBAAAhC,EAAA,sEACYrI,IAAM8I,OAAN,kBAAiCuB,IAD7C,uBACHzE,EADG,EACHA,KADG,kBAEJA,GAFI,2CAAF,mDAAC,GAIZ2E,YAAY,WAAD,8BAAE,WACX5D,EACAjI,GAFW,kBAAA2J,EAAA,sEAIYrI,IAAM2I,MAAN,kBAAoCjK,GAAMiI,GAJtD,uBAIHf,EAJG,EAIHA,KAJG,kBAKJA,GALI,2CAAF,qDAAC,GAUZ4E,sBAAsB,WAAD,8BAAE,WACrBH,EACApB,GAFqB,kBAAAZ,EAAA,sEAIErI,IAAM8I,OAAN,kBACVuB,EADU,wBACapB,IALf,uBAIbrD,EAJa,EAIbA,KAJa,kBAOdA,GAPc,2CAAF,qDAAC,ICvBX6E,GACA,SAACjE,GACV,MAAO,CACLtJ,KAAM,aACN+G,QAAS,CAAEuC,YAJJiE,GAOO,SAACxD,GACjB,MAAO,CACL/J,KAAM,qBACN+G,QAAS,CAAEgD,mBAVJwD,GAaY,SAAClN,GACtB,MAAO,CACLL,KAAM,mBACN+G,QAAS,CAAE1G,kBAhBJkN,GAmBW,SAACrD,GACrB,MAAO,CACLlK,KAAM,0BACN+G,QAAS,CAAEmD,uBAtBJqD,GAyBM,SAACnD,GAChB,MAAO,CACLpK,KAAM,oBACN+G,QAAS,CAAEqD,kBA5BJmD,GAqCE,SAAC/L,GACZ,MAAO,CACLxB,KAAM,eACN+G,QAAS,CAAEvF,QAxCJ+L,GA2CE,SAAC9D,GACZ,MAAO,CACLzJ,KAAM,gBACN+G,QAAS,CAAE0C,WA9CJ8D,GAuDa,SAACC,GACvB,MAAO,CACLxN,KAAM,4BACN+G,QAAS,CAAEyG,yBA1DJD,GA6DI,SAAC/J,GACd,MAAO,CACLxD,KAAM,kBACN+G,QAAS,CAAEvD,YAhEJ+J,GAmEK,SAAC/J,GACf,MAAO,CACLxD,KAAM,mBACN+G,QAAS,CAAEvD,YAtEJ+J,GAyEO,SAAClB,GACjB,MAAO,CACLrM,KAAM,qBACN+G,QAAS,CAAEsF,aA5EJkB,GA+EO,WAChB,MAAO,CACLvN,KAAM,uBAKNsM,GAAY,SAACC,EAAcC,GAC/BA,EAASe,GAAmCvQ,EAAiB0D,QAC7D8L,EAASe,GAAoChB,KAGlCS,GAAY,2DAAsB,WAAOR,GAAP,gBAAArB,EAAA,sEAE3CqB,EAASe,IAA+B,IAFG,SAGtBR,GAAUC,YAHY,OAGrC1D,EAHqC,OAI3CkD,EAASe,GAAwBjE,IAJU,gDAM3CmD,QAAQC,IAAI,kBAAZ,MACAJ,GAAU,oKAAmCE,GAPF,yBAS3CA,EAASe,IAA+B,IATG,4EAAtB,uDAuDZH,GACX,SAAC5L,GAAD,gDACA,WAAOgL,GAAP,UAAArB,EAAA,sEAEIqB,EAASe,IAA+B,IAF5C,SAG2BR,GAAUK,YAAY5L,GAHjD,eAKMgL,EAASe,GAAmCvQ,EAAiB2P,UAC7DH,EAASe,GAA0B/L,IACnCgL,EAASe,GAA8B,QAEvCjB,GAAU,8OAAiDE,GATjE,gDAYIC,QAAQC,IAAI,oBAAZ,MACAJ,GAAU,oKAAmCE,GAbjD,yBAeIA,EAASe,IAA+B,IAf5C,4EADA,uDAuCWE,GACX,SAACZ,GAAD,gDACA,WAAOL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASe,IAAqC,IAFlD,SAG2BvB,GAAeC,cAAcY,GAHxD,QAGUC,EAHV,QAKiB1K,OAAS,EACpBoK,EAASe,GAA4BT,IAErCR,GACE,sQACAE,GAVR,gDAcIC,QAAQC,IAAI,sBAAZ,MACAJ,GAAU,oKAAmCE,GAfjD,yBAiBIA,EAASe,IAAqC,IAjBlD,4EADA,uDC9LMG,GAAU3M,IAAV2M,MAEAC,GAAYzQ,IAAZyQ,QA6BOC,GA3BE,WACf,IAAMtI,EAAqBgD,YAAYjD,IAEjCmH,EAAWqB,cAOjB,OALAzQ,IAAMM,WAAU,WACd8O,EAAStB,MACTsB,EAASQ,QACR,CAACR,IAEAlH,EACK,cAAC,EAAD,IAIP,cAACqI,GAAD,CAAS7P,UAAU,UAAnB,SACE,eAAC,IAAD,WACE,cAAC4P,GAAD,CAAO5P,UAAU,QAAjB,0EACA,sBAAKA,UAAU,YAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,a,mEC/BVgQ,KAAOC,OAAO,MAEP,IAAMC,GAAa,SAACC,GACzB,OAAOH,KAAOG,GAAMC,OAAO,eCsBrBP,GAAYzQ,IAAZyQ,QAEFQ,GAAkC,CACtC,CACEtP,MAAO,uCACPuP,UAAW,cACXC,OAAQ,SAACjO,GAA6B,IAAD,EAC7BkO,GAAM,oBACTnK,GAAgBwF,IAAM,SADb,eAETxF,GAAgB0F,SAAW,YAFlB,eAGT1F,GAAgByF,QAAU,WAHjB,GAMZ,OACE,cAAC,KAAD,CAAK2E,MAAOD,EAAOlO,GAAnB,SACGA,GAD8BA,KAMvC,CACEvB,MAAO,yDACPuP,UAAW,QACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEtM,MAAM8P,cAAcD,EAAE7P,UAG/C,CACEA,MAAO,4EACPuP,UAAW,eACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEyD,aAAeF,EAAEE,eAExCP,OAAQ,SAAC3F,GAAD,OAAkBsF,GAAWtF,IACrCmG,iBAAkB,WAEpB,CACEhQ,MAAO,4EACPuP,UAAW,aACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAE2D,WAAaJ,EAAEI,aAEtCT,OAAQ,SAAC3F,GAAD,OAAkBsF,GAAWtF,KAEvC,CACE7J,MAAO,yDACPuP,UAAW,aACXC,OAAQ,SAACU,GACP,OACE,mCACGA,EACEnK,QAAO,SAACoK,GAAD,OAAoC,IAAtBA,EAASzN,YAC9BG,KAAI,SAACsN,GAAD,OACH,cAAC,KAAD,CAAKT,MAAM,OAAyBzQ,UAAU,aAA9C,SACGkR,EAASvN,MADWuN,EAASxN,WAQ5C,CACE3C,MAAO,0CACPuP,UAAW,WACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAE8D,SAAWP,EAAEO,YAGtC,CACEpQ,MAAO,iCACPuP,UAAW,YA0GAc,GAtGI,WACjB,MAAoC9R,IAAMC,SAAiB,IAA3D,mBAAOsH,EAAP,KAAmBwK,EAAnB,KAKMC,EAFG,IAAIC,gBAAgB5R,cAAcgB,QAIrC6K,EAAShB,YACbkB,GACE7E,EACAyK,EAAMhE,IAAI,YAGRrB,EAAgBzB,YAAYwB,IAC5BwF,EAAchH,YAAY0B,IAC1BE,EAAoB5B,YAAY2B,IAEhCuC,EAAWqB,cACX0B,EAAUC,cAEVC,EAAarS,IAAMsS,aAAY,WACnClD,EAASe,GAAmCvQ,EAAiBwD,QAC7DgM,EAASe,GAAoC,SAC5C,CAACf,IAOJpP,IAAMM,WAAU,WAEd,OADA8O,EAASQ,MACF,WACLyC,OAED,CAACjD,EAAUiD,IAiBd,OAAI1F,EACK,cAAC,EAAD,CAAc7K,KAAK,UAI1B,eAAC,GAAD,CAASpB,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASkP,EACTpP,aAAciP,EACdhP,eAAe,6HACfF,OAAQ8J,IAEV,cAAC,EAAD,CACEtI,MAAO+C,EACPvF,SAlByB,SAACsD,GAC9ByM,EAAczM,EAAEiN,cAAc/N,QAkB1BsC,YAAY,uGAEd,cAAC,KAAD,CACEiK,QAASA,GACTyB,WAAYtG,EACZuG,OAAQ,KACRC,WAAY,CACVC,kBAAmB,SAACtG,GAAD,OACjB,sBAAK3L,UAAU,kBAAf,UACE,mBAAGA,UAAU,mBAAb,SAAiC2L,EAAMuG,cACvC,sBAAKlS,UAAU,yBAAf,UACE,cAAC,IAAD,CACEA,UAAU,sBACV8B,QAAS,kBApCD,SAAC6J,GACvB8F,EAAQU,KAAR,iBAAuBxG,EAAMjI,KAmCA0O,CAAgBzG,IAFjC,0EAMA,cAAC,IAAD,CACE3L,UAAU,sBACV8B,QAAS,kBAjDE4B,EAiDsBiI,EAAMjI,QAhDtC2O,OAAOC,QAAQ,qMAE5B5D,EAASY,GAAY5L,KAHC,IAACA,GAkDX6O,QAAM,EAHR,kEAYV,cAAC,KAAD,Q,gDCpMOC,GAAcC,OAAa3M,MAAM,CAC5C/E,MAAO0R,OAEJC,IAAI,IAAK,gKACTC,SAAS,qGACZxB,SAAUsB,OAEPG,UAAU,oIACVD,SAAS,qGACZE,QAASJ,OAAaE,SAAS,qGAC/BT,YAAaO,OAEVG,UAAU,sLACVF,IAAI,IAAM,mKAGFI,GAAiBL,OAAa3M,MAAM,CAC/CnC,KAAM8O,OAEHC,IAAI,IAAK,gKACTC,SAAS,qGACZjT,SAAU+S,OAEPC,IAAI,GAAI,+JACRC,SAAS,qGACZI,YAAaN,OAEVG,UAAU,2LACVI,IAAI,GAAI,2LACRL,SAAS,qGACZT,YAAaO,OAEVG,UAAU,sLACVF,IAAI,IAAM,iKACbO,QAASR,OAENC,IAAI,IAAK,gKACTC,SAAS,qGACZO,YAAaT,OAEVC,IAAI,IAAK,gKACTC,SAAS,qGACZQ,QAASV,OAAaC,IAAI,GAAI,+JAE9BU,MAAOX,OAEJC,IAAI,GAAI,+JACRW,MAAM,oHAiBEC,IAdYb,OAAa3M,MAAM,CAC1CiN,YAAaN,OAEVG,UAAU,2LACVI,IAAI,GAAI,2LACRL,SAAS,qGACZY,IAAKd,OAEFE,SAAS,qGACTa,QAAQ,WAAY,iJACpBR,IAAI,EAAG,iJACPN,IAAI,EAAG,mJAGkBD,OAAa3M,MAAM,CAC/CnC,KAAM8O,OAEHC,IAAI,IAAK,gKACTC,SAAS,qGACZjT,SAAU+S,OAEPC,IAAI,GAAI,+JACRC,SAAS,qGACZO,YAAaT,OAEVC,IAAI,IAAK,gKACTC,SAAS,qGACZI,YAAaN,OAEVG,UAAU,2LACVI,IAAI,GAAI,2LACRL,SAAS,wGAGDc,GAAiBhB,OAAa3M,MAAM,CAC/CnC,KAAM8O,OAEHC,IAAI,IAAK,gKACTC,SAAS,qGACZlP,SAAUgP,OAEPG,UAAU,0LACVD,SAAS,uGC3FRe,GAAqB,SAACnN,GAAD,OAAyBA,EAAM0K,YAEpD0C,GAAwB,SAACpN,GAAD,OAC5BmN,GAAmBnN,GAAO0K,YAEf2C,GAAiC,SAACrN,GAAD,OAC5CmN,GAAmBnN,GAAOhE,cAEfsR,GAA4B,SAACtN,GAAD,OACvCmN,GAAmBnN,GAAOuN,qBAEfC,GAAyBhN,aACpC,CAAC4M,KACD,SAAC1C,GACC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAYnK,QACjB,SAACoK,GAAD,OAAoC,IAAtBA,EAASzN,WAAmByN,EAASjK,gBAK5C+M,GAAwBjN,aACnC,CAAC4M,KACD,SAAC1C,GACC,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAYnK,QACjB,SAACoK,GAAD,OAAoC,IAAtBA,EAASzN,WAAmByN,EAASjK,gBAK5CgN,GAA4B,SAAC1N,GAAD,uBACvCoN,GAAsBpN,UADiB,aACvC,EAA8BO,QAAO,SAACoK,GAAD,OAAcA,EAASjK,cAKjDiN,GAAgC,SAAC3N,GAAD,OAC3CmN,GAAmBnN,GAAO4N,uBAEfC,GAAiC,SAAC7N,GAAD,OAC5CmN,GAAmBnN,GAAO8N,wBAEfC,GAA6BvN,aACxC,CAACgN,GAAwBC,KACzB,SAAC7Q,EAAgBoR,GACf,OAAIpR,GAAkBoR,EACPpR,EAAeS,KAAI,SAACC,GAC/B,IAAM2Q,EAAUD,EACbzN,QAAO,SAAC2N,GAAD,OAAYA,EAAOhR,WAAaI,EAAQH,MAC/CE,KAAI,SAAC6Q,GACJ,MAAO,CACL1T,MAAO0T,EAAO9Q,KACdG,MAAO2Q,EAAO/Q,GACdgR,IAAKD,EAAO/Q,OAGlB,MAAO,CACL3C,MAAO8C,EAAQF,KACfG,MAAOD,EAAQH,GACfgR,IAAK7Q,EAAQH,GACbiR,SAAUH,MAMT,MCjEEI,GAAgB,CAE3BC,iBAAiB,WAAD,8BAAE,+BAAAxH,EAAA,sEACOrI,IAAMsI,IAAoB,cADjC,uBACR1C,EADQ,EACRA,KADQ,kBAETA,GAFS,2CAAF,kDAAC,GAIjBkK,oBAAoB,WAAD,8BAAE,+BAAAzH,EAAA,sEACIrI,IAAM8I,OAAgB,cAD1B,uBACXlD,EADW,EACXA,KADW,kBAEZA,GAFY,2CAAF,kDAAC,GAIpBmK,YAAY,WAAD,8BAAE,WACXvH,GADW,kBAAAH,EAAA,sEAGYrI,IAAMyI,KAAqB,aAAcD,GAHrD,uBAGH5C,EAHG,EAGHA,KAHG,kBAIJA,GAJI,2CAAF,mDAAC,GASZoK,gBAAgB,WAAD,8BAAE,WAAOtR,GAAP,kBAAA2J,EAAA,sEACQrI,IAAMsI,IAAN,qBAAwC5J,IADhD,uBACPkH,EADO,EACPA,KADO,kBAERA,GAFQ,2CAAF,mDAAC,GAIhBqK,mBAAmB,WAAD,8BAAE,WAAOvR,GAAP,kBAAA2J,EAAA,sEACKrI,IAAM8I,OAAN,qBAAoCpK,IADzC,uBACVkH,EADU,EACVA,KADU,kBAEXA,GAFW,2CAAF,mDAAC,GAInBsK,mBAAmB,WAAD,8BAAE,WAAOhE,GAAP,kBAAA7D,EAAA,sEACKrI,IAAM2I,MAAN,qBACPuD,EAASxN,IACvBwN,GAHgB,uBACVtG,EADU,EACVA,KADU,kBAKXA,GALW,2CAAF,mDAAC,ICtBRuK,GACO,SAAClE,GACjB,MAAO,CACL/O,KAAM,iBACN+G,QAAS,CAAEgI,gBAJJkE,GAOa,SAACrB,GACvB,MAAO,CACL5R,KAAM,4BACN+G,QAAS,CACP6K,yBAXKqB,GAegB,SAAC5S,GAC1B,MAAO,CACLL,KAAM,+BACN+G,QAAS,CAAE1G,kBAlBJ4S,GAqBgB,SAACd,GAC1B,MAAO,CACLnS,KAAM,+BACN+G,QAAS,CAAEoL,4BAxBJc,GAiCe,SAAChB,GACzB,MAAO,CACLjS,KAAM,+BACN+G,QAAS,CAAEkL,2BApCJgB,GAuCM,SAACjE,GAChB,MAAO,CACLhP,KAAM,mBACN+G,QAAS,CAAEiI,cA1CJiE,GA6CK,SAACzR,GACf,MAAO,CACLxB,KAAM,kBACN+G,QAAS,CAAEvF,QAhDJyR,GAwDK,SAACjE,GACf,MAAO,CACLhP,KAAM,mBACN+G,QAAS,CAAEiI,cASX1C,GAAY,SAACC,EAAcC,GAC/BA,EAASyG,GAA4CjW,EAAiB0D,QACtE8L,EAASyG,GAA4C1G,KAuH1CyG,GACX,SAAChE,GAAD,gDACA,WAAOxC,GAAP,UAAArB,EAAA,sEAEIqB,EAASyG,GAA2CjE,EAASxN,KAFjE,SAG2BkR,GAAcM,mBAAmBhE,GAH5D,eAKMxC,EACEyG,GAA4CjW,EAAiB2P,UAE/DH,EAASyG,GAAkCjE,KAE3C1C,GACE,wRACAE,GAZR,gDAgBIC,QAAQC,IAAI,wBAAZ,MACAJ,GAAU,oKAAmCE,GAjBjD,yBAmBIA,EAASyG,GAA2C,OAnBxD,4EADA,uDC7LaC,GATG,SAACC,GACjB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOG,OAAS,kBAAML,EAAQE,EAAOI,SACrCJ,EAAOK,QAAU,SAACxS,GAAD,OAAWkS,EAAOlS,Q,oBCA/BN,GAASC,IAATD,KAYF+S,GAAsD,SAAC,GAGtD,IAFLC,EAEI,EAFJA,QACAC,EACI,EADJA,OAEA,OACE,qCACE,cAAC,KAAD,CACED,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,eAAC,KAAKxD,KAAN,CACE8V,eAAgBH,EAAOlV,MAAQ,QAAU,UACzCsV,KAAI,UAAEJ,EAAOlV,aAAT,aAAE,EAAc4B,QACpB3C,UAAU,2BACV2S,UAAQ,EAJV,UAME,cAAC,GAAD,CAAM3S,UAAU,WAAhB,oEACA,cAAC,IAAD,CACEoG,YAAY,8FACZtC,MAAOA,EACPxC,SAAUA,QAIhBqC,KAAK,QACLH,aAAa,KAEf,sBAAKxD,UAAU,wBAAf,UACE,cAAC,KAAD,CACEgW,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,eAAC,KAAKxD,KAAN,CACE8V,eAAgBH,EAAOpD,QAAU,QAAU,UAC3CwD,KAAI,UAAEJ,EAAOpD,eAAT,aAAE,EAAgBlQ,QACtB3C,UAAU,6BACV2S,UAAQ,EAJV,UAME,cAAC,GAAD,CAAM3S,UAAU,WAAhB,4CACA,cAAC,IAAD,CAAOoG,YAAY,iCAAQtC,MAAOA,EAAOxC,SAAUA,QAGvDqC,KAAK,UACLH,aAAa,KAGf,cAAC,KAAD,CACEwS,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,cAAC,KAAKxD,KAAN,CACE8V,eAAgBH,EAAO9E,SAAW,QAAU,UAC5CkF,KAAI,UAAEJ,EAAO9E,gBAAT,aAAE,EAAiBxO,QACvB3C,UAAU,8BACV2S,UAAQ,EAJV,SAME,sBAAK3S,UAAU,wBAAf,UACE,cAAC,GAAD,CAAMA,UAAU,WAAhB,qDACA,cAAC,KAAD,CAAa8D,MAAOA,EAAOxC,SAAUA,UAI3CqC,KAAK,WACLH,aAAc,OAIlB,cAAC,KAAD,CACEwS,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,eAAC,KAAKxD,KAAN,CACE8V,eAAgBH,EAAO/D,YAAc,QAAU,UAC/CmE,KAAI,UAAEJ,EAAO/D,mBAAT,aAAE,EAAoBvP,QAC1B3C,UAAU,2BACV2S,UAAQ,EAJV,UAME,cAAC,GAAD,CAAM3S,UAAU,WAAhB,8DACA,cAAC,IAAMsW,SAAP,CACElQ,YAAY,mDACZtC,MAAOA,EACPxC,SAAUA,QAIhBqC,KAAK,cACLH,aAAa,SAMNlE,OAAM4B,KAAK6U,IC1ElBlG,GAAYzQ,IAAZyQ,QACAD,GAAU3M,IAAV2M,MACA2G,GAAaC,KAAbD,SAyKOE,GAvKS,WACtB,MAKIC,aAAkC,CACpCC,SAAUC,aAAYpE,MALtBwD,EADF,EACEA,QACAa,EAFF,EAEEA,MACAC,EAHF,EAGEA,aACab,EAJf,EAIEc,UAAad,OAKf,EAAoD3W,IAAMC,SACxD,IADF,mBAAOyX,EAAP,KAA2BC,EAA3B,KAIM7K,EAAoB5B,YAAY2B,IAChC+K,EAAa1M,YAAY0B,IACzBiL,EAAoB3M,YAAYwB,IAChCM,EAAe9B,YAAY6B,IAC3BO,EAAcpC,YAAYmC,IAC1ByK,EAAiB5M,YAAYqC,IAE7BwK,EAAiB7M,YAAY8J,IAC7BgD,EAAkB9M,YAAYoJ,IAC9BS,EAAyB7J,YAAY4J,IAErC1F,EAAWqB,cACX0B,EAAUC,cAEV6F,EAAkBjY,IAAMsS,aAAY,WACxClD,EAASe,GAAmCvQ,EAAiBwD,QAC7DgM,EAASe,GAAoC,OAC7Cf,EAASe,QACR,CAACf,IAEE8I,EAAuBlY,IAAMsS,aAAY,WAC7ClD,EACEyG,GAA4CjW,EAAiBwD,QAE/DgM,EAASyG,GAA4C,SACpD,CAACzG,IAEJpP,IAAMM,WAAU,WACd,OAAO,WACL2X,IACAC,OAED,CAACA,EAAsBD,IAE1BjY,IAAMM,WAAU,WACV0M,GAAgBF,IAAsBlN,EAAiB2P,SACzD4C,EAAQU,KAAR,kBAAwB7F,EAAa5I,OAEtC,CAAC4I,EAAcmF,EAASrF,IAE3B,IAQMqL,EAAiB,yCAAG,WAAO7S,GAAP,4BAAAyI,EAAA,yDAClBqK,EAAS9S,EAAEiN,gBACXwD,EAFkB,UAEXqC,EAAOC,aAFI,aAEX,EAAe,IAFJ,oBAMN,cAAdtC,EAAKnT,MACS,eAAdmT,EAAKnT,MACS,cAAdmT,EAAKnT,KARe,yCAUbS,KAAQW,MAAR,UAAiB+R,EAAK1R,KAAtB,2HAVa,uBAYCyR,GAAUC,GAZX,OAYduC,EAZc,OAadC,EAAMxC,EAAK1R,KAAK7D,MAAM,KAAKgY,MAC3BnU,EAAO0R,EAAK1R,KAEdiU,GAAUC,GAAOlU,IACboL,EAAwB,CAC5BpL,KAAMA,EACNkU,IAAKA,EACLE,QAASH,EAAO9X,MAAM,KAAK,IAE7B4O,EAASiB,GAAcZ,KAtBL,4CAAH,sDA4BjBiJ,EAAWlB,GAAa,SAACtJ,GAC7B,IAAMyD,EAAa+F,EAAmBpT,KAAI,SAACqU,GAAD,MAAiB,CACzDA,iBAGIC,EAA6B,CACjCnX,MAAOyM,EAASzM,MAChBmR,YAAa1E,EAAS0E,YACtBW,QAASrF,EAASqF,QAClB1B,SAAU3D,EAAS2D,SACnB3K,YAAa,GACb2R,YAAavL,EAAYhJ,KAAI,SAACmL,GAAD,MAAY,CACvCd,aAAcc,EAAMrL,OAEtB0U,WAAY,EACZnH,cAGFvC,EVtCF,SAAClB,GAAD,gDACA,WAAOkB,GAAP,gBAAArB,EAAA,+EAEyB4B,GAAUE,YAAY3B,GAF/C,QAEUhC,EAFV,QAGelH,OAAS,GAClBoK,EAASe,GAAmCvQ,EAAiB2P,UAC7DH,EAASe,GAA8BjE,EAAO,KAC9CkD,EAASe,GAA0BjE,EAAO,MAE1CgD,GAAU,8OAAiDE,GARjE,gDAWIC,QAAQC,IAAI,oBAAZ,MACAJ,GAAU,oKAAmCE,GAZjD,yDADA,sDUsCWS,CAAY+I,IACrBrB,OAGF,OAAIM,EACK,cAAC,EAAD,IAIP,eAAC,GAAD,CAASnX,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAAS8U,EACThV,aAAc2U,EACd1U,eAAgB,8FAChBF,OAAQ8J,IAEV,cAAC,EAAD,CACE3J,QAAS+U,EACTjV,aAAc+U,EACdhV,OAAQ+R,IAEV,eAAC,IAAD,CAAMrU,UAAU,OAAhB,UACE,cAAC,GAAD,CAAOqY,MAAO,EAAGrY,UAAU,QAA3B,mGAGA,cAAC,GAAD,CAAiBgW,QAASA,EAASC,OAAQA,IAC3C,cAAC,KAAD,CACEqC,SAAUjB,EACVvT,MAAOkT,EACP1V,SAnFuB,SAACwC,GAC9BmT,EAAsBnT,IAmFhByU,eAAe,EACfC,oBAAqBjC,GACrBnQ,YAAa,+IACbqS,MAAO,CAAE7X,MAAO,OAAQ8X,aAAc,IACtCC,YAAa,IAEf,cAAC,EAAD,CACE/S,YAvFkB,SAAC2I,GACzBG,EVyIF,SAACH,GAAD,gDACA,WAAOG,GAAP,UAAArB,EAAA,sEAEIqB,EAASe,IAAqC,IAFlD,SAI2BvB,GAAeG,iBAAiBE,GAJ3D,cAOMG,EAASe,GAA+BlB,IAExCC,GAAU,0PAAmDE,GATnE,gDAYIC,QAAQC,IAAI,yBAAZ,MACAJ,GAAU,oKAAmCE,GAbjD,yBAeIA,EAASe,IAAqC,IAflD,4EADA,sDUzIWmJ,CAAoBrK,KAuFvB7I,OAAQkH,EACRjH,UAAU,IAEZ,cAAC,EAAD,CACErE,SAAUmW,EACVlW,YAAa6V,IAEf,cAAC,IAAD,CACEpX,UAAU,kBACV8B,QAASkW,EACTa,SACEC,OAAOC,KAAK9C,GAAQ3R,OAAS,GAAmC,IAA9B0S,EAAmB1S,OAJzD,2E,mBC/LAtB,GAASC,IAATD,KAwDOgW,GApDX,SAAC,GASE,IARL5S,EAQI,EARJA,YACAT,EAOI,EAPJA,SACAsT,EAMI,EANJA,UACAjD,EAKI,EALJA,QACA1S,EAII,EAJJA,MACAE,EAGI,EAHJA,aAGI,IAFJ0V,kBAEI,aADJC,qBACI,SACJ,OAAIxT,EAEA,cAAC,KAAD,CACEqQ,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,oBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,cAAC,KAAKxD,KAAN,CACE8V,eAAgB9S,EAAQ,QAAU,UAClC+S,KAAI,OAAE/S,QAAF,IAAEA,OAAF,EAAEA,EAAOX,QACb3C,UAAU,QAHZ,SAKGkZ,EACC,cAAC,IAAM5C,SAAP,CACElQ,YAAaA,EACbtC,MAAOA,EACPxC,SAAUA,IAEV6X,EACF,cAAC,KAAD,CACE/S,YAAaA,EACbtC,MAAOA,EACPxC,SAAUA,IAGZ,cAAC,IAAD,CACE8E,YAAaA,EACbtC,MAAOA,EACPxC,SAAUA,OAKlBqC,KAAMsV,EACNzV,aAAcA,IAIb,cAAC,GAAD,UAAOA,K,UCpDR+S,GAAaC,KAAbD,SAgBF6C,GAAkD,SAAC,GAYlD,IAXL/B,EAWI,EAXJA,eACAL,EAUI,EAVJA,mBACAqC,EASI,EATJA,uBACAC,EAQI,EARJA,kBACAC,EAOI,EAPJA,eACA5T,EAMI,EANJA,SACAnC,EAKI,EALJA,aACAF,EAII,EAJJA,MACAoC,EAGI,EAHJA,OACAsQ,EAEI,EAFJA,QACAwD,EACI,EADJA,eAEA,OACE,qBAAKxZ,UAAU,cAAf,SACE,eAAC,IAAD,WACE,cAAC,KAAD,+DACA,cAAC,GAAD,CACEwD,aAAcA,EACdmC,SAAUA,EACVqQ,QAASA,EACT1S,MAAOA,EACP2V,UAAU,cACV7S,YAAY,mDACZ8S,YAAU,IAEZ,cAAC,KAAD,qEACC7B,GACC,cAAC,KAAD,CACEiB,SAAUjB,EACVvT,MAAOkT,EACP1V,SAAU+X,EACVd,eAAe,EACfC,oBAAqBjC,GACrBnQ,YAAaT,EAAW,+IAA8B,yDACtD8S,MAAO,CAAE7X,MAAO,OAAQ8X,aAAc,IACtCG,UAAWlT,IAGf,cAAC,KAAD,uCACA,sBAAK3F,UAAU,gBAAf,UACE,cAAC,EAAD,CACE4F,YAAa0T,EACb5T,OAAQA,EACRC,SAAUA,IAEXA,GACC,cAAC,EAAD,CACErE,SAAUiY,EACVhY,YAAaiY,aASZla,OAAM4B,KAAKkY,I,UCnBXK,GA/C+C,SAAC,GAKxD,IAJL9N,EAII,EAJJA,MACAhG,EAGI,EAHJA,SACAsQ,EAEI,EAFJA,OACAD,EACI,EADJA,QAEA,OACE,eAAC,KAAD,CAAc5U,KAAK,QAAQsY,OAAQ,EAAnC,UACE,cAAC,KAAapZ,KAAd,CAAmBqZ,MAAM,6CAAzB,SACGzJ,GAAWvE,EAAMmF,gBAEpB,cAAC,KAAaxQ,KAAd,CAAmBqZ,MAAM,iCAAzB,SACE,cAAC,IAAD,CAAS1Z,GAAE,uBAAkB0L,EAAMyM,YAAnC,gEAEF,cAAC,KAAa9X,KAAd,CAAmBqZ,MAAM,iCAAzB,SACE,cAAC,GAAD,CACEnW,aAAcmI,EAAMkH,QACpBlN,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAOlV,MACdkY,UAAU,UACV7S,YAAY,qCAIhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,yDAAzB,SACGzJ,GAAWvE,EAAMqF,cAEpB,cAAC,KAAa1Q,KAAd,CAAmBqZ,MAAM,2BAAzB,SACE,cAAC,IAAD,CAAS1Z,GAAG,IAAZ,wCAEF,cAAC,KAAaK,KAAd,CAAmBqZ,MAAM,2BAAzB,SACE,cAAC,GAAD,CACER,eAAa,EACb3V,aAAcmI,EAAMwF,SACpBxL,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAO9E,SACd8H,UAAU,WACV7S,YAAY,+BAGhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,sEAAzB,SAAyChO,EAAMjI,SCnB7CmM,GAAYzQ,IAAZyQ,QA4OO+J,GA1OG,WAChB,MAAgCta,IAAMC,UAAS,GAA/C,mBAAOoG,EAAP,KAAiBkU,EAAjB,KACA,EAIInD,aAAkC,CACpCC,SAAUC,aAAYpE,MAJtBwD,EADF,EACEA,QACAc,EAFF,EAEEA,aACab,EAHf,EAGEc,UAAad,OAKf,EAAoD3W,IAAMC,SACxD,IADF,mBAAOyX,EAAP,KAA2BC,EAA3B,KAIMtL,EAAQnB,YAAY6B,IACpBD,EAAoB5B,YAAY2B,IAChC+K,EAAa1M,YAAY0B,IACzBiL,EAAoB3M,YAAYwB,IAEhCY,EAAcpC,YAAYmC,IAC1B+C,EAAsBlF,YAAYqC,IAElCwK,EAAiB7M,YAAY8J,IAE3B5Q,EAAwBoW,cAAxBpW,GAEFgL,EAAWqB,cACX0B,EAAUC,cAEVC,EAAarS,IAAMsS,aAAY,WACnClD,EAASe,GAAmCvQ,EAAiBwD,QAC7DgM,EAASe,GAA8B,OACvCf,EAASe,QACR,CAACf,IAEEqL,EAAiB,WACrBF,GAAY,SAACG,GAEX,OADAtL,EAASe,GAAmCvQ,EAAiBwD,SACrDsX,MAIZ1a,IAAMM,WAAU,WAEd,OADA8O,Ed8FF,SAAChL,GAAD,gDACA,WAAOgL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASe,IAA+B,IAF5C,SAGyBR,GAAUG,aAAa1L,GAHhD,OAI0B,KADhB8H,EAHV,QAIelH,OACTkK,GAAU,+FAAqBE,GAE/BA,EAASe,GAA8BjE,EAAO,KAPpD,gDAUImD,QAAQC,IAAI,yBAAZ,MACAJ,GAAU,oKAAmCE,GAXjD,yBAaIA,EAASe,IAA+B,IAb5C,4EADA,sDc9FWL,CAAa3K,OAAOf,KACtB,WACLiO,OAED,CAACA,EAAYjD,EAAUhL,IAE1BpE,IAAMM,WAAU,WACF,IAAD,EAAP+L,IACFsL,EAAqB,UAACtL,EAAMsF,kBAAP,aAAC,EAAkBrN,KAAI,SAACsN,GAAD,OAAcA,EAASxN,OACnEgL,EAASe,GAA6B9D,EAAMwM,iBAE7C,CAACxM,EAAO+C,IAEXpP,IAAMM,WAAU,WAET+L,GAASS,IAAsBlN,EAAiB2P,SACnD4C,EAAQU,KAAK,aAEd,CAACV,EAAS9F,EAAOS,IAEpB,IAAM4L,EAAWlB,GAAa,SAACtJ,GAC7B,GAAI7B,EAAO,CACT,IAAMsF,EAAa+F,EAAmBpT,KAAI,SAACqU,GAAD,MAAiB,CACzDA,iBAEIgC,EAA8B,6BAC/BtO,GAD+B,IAElC5K,MAAOyM,EAASzM,MAChBmR,YAAa1E,EAAS0E,YACtBf,SAAU3D,EAAS2D,SACnB0B,QAASrF,EAASqF,QAClBrM,YAAamF,EAAMnF,YACnB2R,YAAavL,EAAYhJ,KAAI,SAACmL,GAAD,MAAY,CAAEd,aAAcc,EAAMrL,OAC/D0U,WAAY,EACZnH,eAEF4I,GAAY,GACZnL,EdYJ,SAAC/C,EAAyBjI,GAA1B,gDACA,WAAOgL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASe,IAA+B,IAF5C,SAGyBR,GAAUM,YAAY5D,EAAOjI,GAHtD,QAGU8H,EAHV,QAIelH,OAAS,GAClBoK,EAASe,GAAmCvQ,EAAiB2P,UAC7DH,EAASe,MACTf,EAASe,GAA8BjE,EAAO,MAE9CgD,GACE,4QACAE,GAXR,gDAeIC,QAAQC,IAAI,oBAAZ,MACAJ,GAAU,oKAAmCE,GAhBjD,yBAkBIA,EAASe,IAA+B,IAlB5C,4EADA,sDcZaF,CAAY0K,EAActO,EAAMjI,SAMvC2V,EAAyB/Z,IAAMsS,aAAY,SAAC9N,GAChDmT,EAAsBnT,KACrB,IAkBG2T,EAAiB,yCAAG,WAAO7S,GAAP,4BAAAyI,EAAA,yDAClBqK,EAAS9S,EAAEiN,gBACXwD,EAFkB,UAEXqC,EAAOC,aAFI,aAEX,EAAe,IAFJ,oBAMN,cAAdtC,EAAKnT,MACS,eAAdmT,EAAKnT,MACS,cAAdmT,EAAKnT,KARe,yCAUbS,KAAQW,MAAR,UAAiB+R,EAAK1R,KAAtB,2HAVa,uBAYCyR,GAAUC,GAZX,OAYduC,EAZc,OAadC,EAAMxC,EAAK1R,KAAK7D,MAAM,KAAKgY,MAC3BnU,EAAO0R,EAAK1R,KAEdiU,GAAUC,GAAOlU,IACboL,EAAwB,CAC5BpL,KAAMA,EACNkU,IAAKA,EACLE,QAASH,EAAO9X,MAAM,KAAK,IAE7B4O,EAASiB,GAAcZ,KAtBL,4CAAH,sDAkCjBmL,EAAqB,CACzB,cAAC,IAAD,CAEEpY,QAASkW,EACTa,SACiC,IAA/BC,OAAOC,KAAK9C,GAAQ3R,QAA8C,IAA9B0S,EAAmB1S,OAJ3D,mEACM,KAQN,cAAC,IAAD,CAAgBxC,QArDO,WAEX,IAAD,GADXiY,IACIpO,KACFsL,EAAqB,UAACtL,EAAMsF,kBAAP,aAAC,EAAkBrN,KAAI,SAACsN,GAAD,OAAcA,EAASxN,OACnEgL,EAASe,MACTf,EAASe,GAA6B9D,EAAMwM,gBAgDH5F,QAAM,EAAjD,6DAAY,MAKR4H,EAAiB,CACrB,cAAC,IAAD,CAAgBrY,QAASiY,EAAzB,2FAAY,MAIY,cAAlB,OAALpO,QAAK,IAALA,OAAA,EAAAA,EAAOC,cAAqD,aAAlB,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOC,eAC3C,cAAC,IAAD,CAEE9J,QAAS,WACPsY,MAAM,wEAHV,qFACM,KAQR,cAAC,IAAD,CAAgBtY,QAhFQ,WACTuQ,OAAOC,QAAQ,qMAChB3G,GACZ+C,EAASY,GAAY3D,EAAMjI,MA6Ee6O,QAAM,EAAlD,uDAAY,MAKd,OAAI4E,EACK,cAAC,EAAD,IAIP,eAAC,GAAD,CAASnX,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAAS,kBACPiM,EAASe,GAAmCvQ,EAAiBwD,SAE/DH,aAAc2U,EACd5U,OAAQ8J,EACR5J,eAAe,6JAEhBmJ,GACC,qCACE,qBAAK3L,UAAU,cAAf,SACE,cAAC,KAAD,CACEqa,OAAO,EACPC,OA9GG,kBAAMjI,OAAOZ,QAAQ8I,QA+GxBxZ,MACE,cAAC,GAAD,CACEyC,aAAcmI,EAAM5K,MACpB4E,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAOlV,MACdkY,UAAU,QACV7S,YAAY,2DAGhBoU,MAAO7U,EAAWuU,EAAqBC,EAbzC,SAeE,cAAC,GAAD,CACExO,MAAOA,EACPhG,SAAUA,EACVsQ,OAAQA,EACRD,QAASA,QAIf,cAAC,GAAD,CACEqB,eAAgBA,EAChBL,mBAAoBA,EACpBqC,uBAAwBA,EACxBC,kBArFgB,SAAC/K,GACrB5C,GACF+C,Ed2CJ,SAACW,EAAiBd,GAAlB,gDACA,WAAOG,GAAP,UAAArB,EAAA,sEAEIqB,EAASe,IAAqC,IAFlD,SAI2BR,GAAUO,sBAAsBH,EAASd,GAJpE,cAOMG,EAASe,GAA+BlB,IAExCC,GAAU,0PAAmDE,GATnE,gDAYIC,QAAQC,IAAI,yBAAZ,MACAJ,GAAU,oKAAmCE,GAbjD,yBAeIA,EAASe,IAAqC,IAflD,4EADA,sDc3CagL,CAAiB9O,EAAMjI,GAAI6K,KAoF9BgL,eAAgB9B,EAChB9R,SAAUA,EACVnC,aAAcmI,EAAMuG,YACpB5O,MAAO2S,EAAO/D,YACdxM,OAAQkH,EACRoJ,QAASA,EACTwD,eAAgB9J,WCpPpBG,GAAYzQ,IAAZyQ,QAEFQ,GAAuC,CAC3C,CACEtP,MAAO,wFACPuP,UAAW,iBACXC,OAAQ,SAACjO,GAAiC,IAAD,EACjCkO,GAAM,oBACTjL,EAAoB4B,SAAW,SADtB,eAET5B,EAAoB6B,SAAW,YAFtB,eAGT7B,EAAoBmV,QAAU,QAHrB,GAMZ,OACE,cAAC,KAAD,CAAKjK,MAAOD,EAAOlO,GAAnB,SACGA,IAAWiD,EAAoB4B,SAAW,mDAAa,0DADzB7E,IAKrCoO,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAE1J,KAAKkN,cAAcD,EAAEjN,SAG9C,CACE5C,MAAO,sHACPuP,UAAW,OACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAE1J,KAAKkN,cAAcD,EAAEjN,SAG9C,CACE5C,MAAO,kFACPuP,UAAW,eAEb,CACEvP,MAAO,iCACPuP,UAAW,WACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAE3N,SAASmR,cAAcD,EAAElR,aAGlD,CACEqB,MAAO,yDACPuP,UAAW,aACXC,OAAQ,SAACU,GACP,OACE,mCACGA,EACEnK,QAAO,SAACoK,GAAD,OAAoC,IAAtBA,EAASzN,YAC9BG,KAAI,SAACsN,GAAD,OACH,cAAC,KAAD,CAAKT,MAAM,OAAyBzQ,UAAU,aAA9C,SACGkR,EAASvN,MADWuN,EAASxN,WAS5C,CACE3C,MAAO,wFACPuP,UAAW,eAEb,CACEvP,MAAO,6CACPuP,UAAW,SACXI,OAAQ,CACNC,QAAS,SAACtD,EAAGuD,GAAJ,OAAUvD,EAAEsN,OAAS/J,EAAE+J,WAwGvBC,GAnGS,WACtB,MAAoCtb,IAAMC,SAAiB,IAA3D,mBAAOsH,EAAP,KAAmBwK,EAAnB,KAKMC,EAFG,IAAIC,gBAAgB5R,cAAcgB,QAIrCka,EAAmBrQ,YAAY7C,IAC/BD,EAA0B8C,YAAY/C,IACtCD,EAAqBgD,YAAYjD,IACjCf,EAAcgE,YAClB5D,GACEC,EACAyK,EAAMhE,IAAI,YAIRoB,EAAWqB,cACX0B,EAAUC,cAEVC,EAAarS,IAAMsS,aAAY,WACnClD,EACEJ,GAA6CpP,EAAiBwD,QAEhEgM,EAASJ,GAA6C,SACrD,CAACI,IAwBJ,OAPApP,IAAMM,WAAU,WAEd,OADA8O,EAAStB,MACF,WACLuE,OAED,CAACjD,EAAUiD,IAEVnK,EACK,cAAC,EAAD,CAAcpG,KAAK,UAI1B,eAAC,GAAD,CAASpB,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASkP,EACTpP,aAAcsY,EACdrY,eAAe,+IACfF,OAAQoF,IAEV,cAAC,EAAD,CACE5D,MAAO+C,EACPvF,SAzByB,SAACsD,GAC9ByM,EAAczM,EAAEiN,cAAc/N,QAyB1BsC,YAAY,oKAEd,cAAC,KAAD,CACEiK,QAASA,GACTyB,WAAYtL,EACZuL,OAAQ,KACRC,WAAY,CACVC,kBAAmB,SAACtG,GAAD,OACjB,sBAAK3L,UAAU,uBAAf,UACE,mBAAGA,UAAU,wBAAb,SAAsC2L,EAAMuG,cAC5C,sBAAKlS,UAAU,8BAAf,UACE,cAAC,IAAD,CACEA,UAAU,2BACV8B,QAAS,kBA3CKkF,EA2CsB2E,OA1ClD8F,EAAQU,KAAR,sBAA4BnL,EAAWtD,KADZ,IAACsD,GAyChB,0EAMA,cAAC,IAAD,CACEhH,UAAU,2BACV8B,QAAS,kBAxDO4B,EAwDsBiI,EAAMjI,QAvD3C2O,OAAOC,QAAQ,mOAE5B5D,EAASd,GAAiBlK,KAHC,IAACA,GAyDhB6O,QAAM,EAHR,kEAYV,cAAC,KAAD,QCnLEvP,GAASC,IAATD,KAEF8X,GAKF,SAAC,GASE,IdhBwBC,EAAaC,EcQ1C5U,EAQI,EARJA,YACAT,EAOI,EAPJA,SACAsT,EAMI,EANJA,UACAjD,EAKI,EALJA,QACA1S,EAII,EAJJA,MACAE,EAGI,EAHJA,aAGI,IAFJ0V,kBAEI,SADJ+B,EACI,EADJA,UAEA,OAAItV,EAEA,cAAC,KAAD,CACEqQ,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,oBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,cAAC,KAAKxD,KAAN,CACE8V,eAAgB9S,EAAQ,QAAU,UAClC+S,KAAI,OAAE/S,QAAF,IAAEA,OAAF,EAAEA,EAAOX,QACb3C,UAAU,QAHZ,SAKGkZ,EACC,cAAC,IAAM5C,SAAP,CACElQ,YAAaA,EACbtC,MAAOA,EACPxC,SAAUA,IAGZ,cAAC,IAAD,CACE8E,YAAaA,EACbtC,MAAOA,EACPxC,SAAUA,EACV2Z,UAAWA,OAKnBtX,KAAMsV,EACNzV,aAAcA,IAIF,UAAdyV,EACK,mBAAGiC,KAAI,iBAAY1X,GAAnB,SAAoCA,IAE3B,YAAdyV,GAA2BzV,EAE3B,mBAAG0X,KAAM1X,EAAwBkU,OAAO,SAASyD,IAAI,aAArD,UdxDyBJ,EcyDPvX,EdzDoBwX,EcyDI,GdxDvCD,EAAIzW,OAAS0W,EAAID,EAAIK,OAAO,EAAGJ,EAAI,GAAK,MAAQD,Kc4DhD,cAAC,GAAD,UAAOvX,KAGDlE,OAAM4B,KAAK4Z,IC5ClBvE,GAAaC,KAAbD,SAEF8E,GAA4D,SAAC,GAa5D,IAZL7X,EAYI,EAZJA,aACAmC,EAWI,EAXJA,SACAqQ,EAUI,EAVJA,QACA1S,EASI,EATJA,MACA+T,EAQI,EARJA,eACAL,EAOI,EAPJA,mBACAqC,EAMI,EANJA,uBACAC,EAKI,EALJA,kBACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,eACA9T,EAEI,EAFJA,OACA4V,EACI,EADJA,gBAEA,OACE,qBAAKtb,UAAU,mBAAf,SACE,eAAC,IAAD,WACGsb,IAAoB/V,EAAoB6B,UACvC,qCACE,cAAC,KAAD,+DACA,cAAC,GAAD,CACE5D,aAAcA,EACdmC,SAAUA,EACVqQ,QAASA,EACT1S,MAAOA,EACP2V,UAAU,cACV7S,YAAY,mDACZ8S,YAAU,IAEZ,cAAC,KAAD,qEACC7B,GACC,cAAC,KAAD,CACEiB,SAAUjB,EACVvT,MAAOkT,EACP1V,SAAU+X,EACVd,eAAe,EACfC,oBAAqBjC,GACrBnQ,YACET,EAAW,6KAAmC,yDAEhD8S,MAAO,CAAE7X,MAAO,OAAQ8X,aAAc,IAEtCG,UAAWlT,OAKnB,cAAC,KAAD,uCACA,sBAAK3F,UAAU,qBAAf,UACE,cAAC,EAAD,CACE4F,YAAa0T,EACb5T,OAAQA,EACRC,SAAUA,IAEXA,GACC,cAAC,EAAD,CACErE,SAAUiY,EACVhY,YAAaiY,aASZla,OAAM4B,KAAKma,I,UC1DpBE,GAAkE,SAAC,GAQlE,IAPL5V,EAOI,EAPJA,SACA6V,EAMI,EANJA,oBACAF,EAKI,EALJA,gBACAtU,EAII,EAJJA,WACAgP,EAGI,EAHJA,QACAC,EAEI,EAFJA,OACAwF,EACI,EADJA,cAEA,OACE,mCACE,eAAC,KAAD,CAAcra,KAAK,QAAQsY,OAAQ,EAAnC,UACE,cAAC,KAAapZ,KAAd,CAAmBqZ,MAAM,wFAAzB,SACGhU,EACC,eAAC,KAAM+V,MAAP,CAAapa,SAAUka,EAAqB1X,MAAOwX,EAAnD,UACE,cAAC,KAAD,CAAOxX,MAAOyB,EAAoB6B,SAAlC,oEACA,cAAC,KAAD,CAAOtD,MAAOyB,EAAoB4B,SAAlC,iEAEAH,EAAWE,iBAAmB3B,EAAoB4B,SACpD,mDAEA,2DAGJ,cAAC,KAAa7G,KAAd,CAAmBqZ,MAAM,0GAAzB,SACE,cAAC,IAAD,CAAS1Z,GAAG,UAAZ,4EAEF,cAAC,KAAaK,KAAd,CAAmBqZ,MAAM,wFAAzB,SACE,cAAC,GAAD,CACEnW,aAAcwD,EAAWkM,YACzBvN,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAO/C,YACd+F,UAAU,cACV7S,YAAY,4FAIhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,iCAAzB,SACE,cAAC,GAAD,CACEnW,aAAcwD,EAAWtH,SACzBiG,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAOvW,SACduZ,UAAU,WACV7S,YAAY,qCAGhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,+DAAzB,SACE,cAAC,IAAD,CAAQvY,KAAK,QAAQc,KAAK,OAAOJ,QAAS2Z,EAA1C,wHAKF,cAAC,KAAanb,KAAd,CAAmBqZ,MAAM,2BAAzB,SACE,cAAC,GAAD,CACEnW,aAAcwD,EAAW2U,SAASxI,QAClCxN,SAAUA,EACVqQ,QAASA,EAET1S,MAAO2S,EAAO9C,QACd8F,UAAU,UACV7S,YAAY,+BAGhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,iCAAzB,SACE,cAAC,GAAD,CACEnW,aAAcwD,EAAW2U,SAASvI,MAClCzN,SAAUA,EACVqQ,QAASA,EAET1S,MAAO2S,EAAO7C,MACd6F,UAAU,QACV7S,YAAY,qCAGhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,iCAAzB,SACE,cAAC,GAAD,CACEnW,aAAcwD,EAAW2U,SAAS1I,QAClCtN,SAAUA,EACVqQ,QAASA,EAET1S,MAAO2S,EAAOhD,QACdgG,UAAU,UACV7S,YAAY,qCAIhB,cAAC,KAAa9F,KAAd,CAAmBqZ,MAAM,6CAAzB,SACE,cAAC,GAAD,CACEnW,aAAY,WAAMwD,EAAW+L,aAC7BpN,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAOlD,YACdkG,UAAU,cACV7S,YAAY,6CACZ6U,UAAW,OAGf,cAAC,KAAa3a,KAAd,CAAmBqZ,MAAM,oJAAzB,SACG3S,EAAWtD,WAOPpE,OAAM4B,KAAKqa,ICnGlB1L,GAAYzQ,IAAZyQ,QA4UO+L,GA1UQ,WACrB,MAAgCtc,IAAMC,UAAS,GAA/C,mBAAOoG,EAAP,KAAiBkU,EAAjB,KACA,EAAoDva,IAAMC,SACxD,IADF,mBAAOyX,EAAP,KAA2BC,EAA3B,KAGA,EAA4B3X,IAAMC,SAAiC,MAAnE,mBAAOsF,EAAP,KAAegX,EAAf,KACA,EACEvc,IAAMC,SAA8BgG,EAAoB6B,UAD1D,mBAAOkU,EAAP,KAAwBQ,EAAxB,KAEA,EAA8Bxc,IAAMC,UAAS,GAA7C,mBAAOwc,EAAP,KAAgBC,EAAhB,KACA,EAIItF,aAA+D,CACjEC,SAAUC,aACR0E,IAAoB/V,EAAoB6B,SACpC0L,GACAQ,MAPN0C,EADF,EACEA,QACAc,EAFF,EAEEA,aACab,EAHf,EAGEc,UAAad,OASTjP,EAAawD,YAAY9D,IACzBuV,EAAyBzR,YAAY/C,IACrCyU,EAAkB1R,YAAY7C,IAC9BwU,EAAyB3R,YAAYjD,IAErCU,EAAmBuC,YAAYxC,IAC/BG,EAA2BqC,YAC/BtC,IAGImP,EAAiB7M,YAAY8J,IAE3B5Q,EAAwBoW,cAAxBpW,GAEFgL,EAAWqB,cACX0B,EAAUC,cAEVC,EAAarS,IAAMsS,aAAY,WACnClD,EACEJ,GAA6CpP,EAAiBwD,QAEhEgM,EAASJ,GAAuC,OAChDI,EAASJ,QACR,CAACI,IAEEqL,EAAiBza,IAAMsS,aAAY,WACvCiI,GAAY,SAACG,GAIX,OAHAtL,EACEJ,GAA6CpP,EAAiBwD,SAExDsX,OAET,CAACtL,IAEJpP,IAAMM,WAAU,WrBmEhB,IAACiO,EqBjEC,OADAa,GrBkEDb,EqBlE4BpJ,OAAOf,GrBkEpC,yCACA,WAAOgL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASJ,IAAwC,IAFrD,SAG8BnB,GAAeY,kBAAkBF,GAH/D,OAI+B,KADrBrH,EAHV,QAIoBlC,OACdkK,GAAU,iHAAwBE,GAElCA,EAASJ,GAAuC9H,EAAY,KAPlE,gDAUImI,QAAQC,IAAI,8BAAZ,MACAJ,GAAU,oKAAmCE,GAXjD,yBAaIA,EAASJ,IAAwC,IAbrD,4EADA,wDqBjES,WACLqD,OAED,CAACA,EAAYjD,EAAUhL,IAE1BpE,IAAMM,WAAU,WACG,IAAD,EAAZoH,IACFiQ,EAAqB,UACnBjQ,EAAWiK,kBADQ,aACnB,EAAuBrN,KAAI,SAACsN,GAAD,OAAcA,EAASxN,OAEpDoY,EAAmB9U,EAAWE,gBAC9B2U,EAAU,CACRxX,oBAAqB2C,EAAWoV,YAAY/X,oBAC5CM,qBAAsBqC,EAAWoV,YAAYzX,uBAE/C+J,EAASJ,GAAsCtH,EAAWmR,iBAE3D,CAACnR,EAAY0H,IAEhBpP,IAAMM,WAAU,WAEToH,GAAciV,IAA2B/c,EAAiB2P,SAC7D4C,EAAQU,KAAK,kBAEd,CAACV,EAASzK,EAAYiV,IAEzB,IAAMjE,EAAWlB,GAAa,SAACtJ,GAC7B,GAAIxG,EAAY,CACd,IAAMiK,EAAa+F,EAAmBpT,KAAI,SAACqU,GAAD,MAAiB,CACzDA,iBAGIoE,EAA2C,CAC/C1Y,KAAM6J,EAAS7J,KACfuP,YAAa1F,EAAS0F,YACtBH,YAAY,IAAD,OAAM7M,OAAOsH,EAASuF,aAAauJ,OAAO,KAErDpK,YAAa1E,EAAS0E,YAAc1E,EAAS0E,YAAc,GAC3DxS,SAAU8N,EAAS9N,SACnB0c,YAAavX,GAET,CACER,oBAAqB,GACrBM,qBAAsB,IAE5BgX,SAAU,CAER1I,QAASzF,EAASyF,QAAUzF,EAASyF,QAAU,GAE/CE,QAAS3F,EAAS2F,QAAU3F,EAAS2F,QAAU,GAE/CC,MAAO5F,EAAS4F,MAAQ5F,EAAS4F,MAAQ,IAE3ClM,eAAgBoU,EAChBrK,aACAkH,YAAalQ,EAAiBrE,KAAI,SAACmL,GAAD,MAAY,CAC5Cd,aAAcc,EAAMrL,QAGxBmW,GAAY,GACZnL,ErBrBJ,SAAC1H,EAAuCtD,GAAxC,gDACA,WAAOgL,GAAP,gBAAArB,EAAA,sEAEIqB,EAASJ,IAAwC,IAFrD,SAG8BnB,GAAeO,iBAAiB1G,EAAYtD,GAH1E,QAGU8C,EAHV,QAIoBlC,OAAS,GACvBoK,EACEJ,GAA6CpP,EAAiB2P,UAEhEH,EAASJ,MACTI,EAASJ,GAAuC9H,EAAY,MAE5DgI,GACE,4QACAE,GAbR,gDAiBIC,QAAQC,IAAI,sBAAZ,MACAJ,GAAU,oKAAmCE,GAlBjD,yBAoBIA,EAASJ,IAAwC,IApBrD,4EADA,sDqBqBaZ,CAAiB2O,EAAerV,EAAWtD,SAMlD2V,EAAyB/Z,IAAMsS,aAAY,SAAC9N,GAChDmT,EAAsBnT,KACrB,IAEGyY,EAAyBjd,IAAMsS,aAAY,WAChCS,OAAOC,QAAQ,mOAChBtL,GACZ0H,EAASd,GAAiB5G,EAAWtD,OAEtC,CAACsD,EAAY0H,IAEV8M,EAAsBlc,IAAMsS,aAAY,SAAChN,GAC7CkX,EAAmBlX,EAAE8S,OAAO5T,SAC3B,IAEG0Y,EAAmBld,IAAMsS,aAAY,WAExB,IAAD,GADhBmI,IACI/S,KACFiQ,EAAqB,UACnBjQ,EAAWiK,kBADQ,aACnB,EAAuBrN,KAAI,SAACsN,GAAD,OAAcA,EAASxN,OAEpDgL,EAASJ,MACTI,EAASJ,GAAsCtH,EAAWmR,iBAE3D,CAACnR,EAAY0H,EAAUqL,IAEpB0B,EAAgBnc,IAAMsS,aAAY,WACtCoK,GAAYD,KACX,CAACA,IAEE7X,GAAqB5E,IAAMsS,aAC/B,SAAC/M,GACKc,GACFkW,EAAU,CACRxX,oBAAqB6B,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAQL,OACpCG,qBAAsBuB,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAQH,WAI3C,CAACiB,IAGG8R,GAAiB,yCAAG,WAAO7S,GAAP,4BAAAyI,EAAA,yDAClBqK,EAAS9S,EAAEiN,gBACXwD,EAFkB,UAEXqC,EAAOC,aAFI,aAEX,EAAe,IAFJ,oBAMN,cAAdtC,EAAKnT,MACS,eAAdmT,EAAKnT,MACS,cAAdmT,EAAKnT,KARe,yCAUbS,KAAQW,MAAR,UAAiB+R,EAAK1R,KAAtB,2HAVa,uBAYCyR,GAAUC,GAZX,OAYduC,EAZc,OAadC,EAAMxC,EAAK1R,KAAK7D,MAAM,KAAKgY,MAC3BnU,EAAO0R,EAAK1R,KAEdiU,GAAUC,GAAOlU,IACboL,EAAwB,CAC5BpL,KAAMA,EACNkU,IAAKA,EACLE,QAASH,EAAO9X,MAAM,KAAK,IAE7B4O,EAASI,GAAmBC,KAtBV,4CAAH,sDAkCjB0N,GAAmBnd,IAAMsS,aAAY,WACzC,OAAI0J,IAAoB/V,EAAoB6B,SAET,IAA/B0R,OAAOC,KAAK9C,GAAQ3R,QAA8C,IAA9B0S,EAAmB1S,OAGrB,IAA/BwU,OAAOC,KAAK9C,GAAQ3R,SAC1B,CAAC2R,EAAQqF,EAAiBtE,EAAmB1S,SAwB1C4V,GAAqB5a,IAAMuL,SAtBH,WAC5B,MAAO,CACL,cAAC,IAAD,CAAgB/I,QAASkW,EAAUa,SAAU4D,KAA7C,mEAAY,KAGZ,cAAC,IAAD,CAAgB3a,QAAS0a,EAAkBjK,QAAM,EAAjD,6DAAY,QAiBgD,CAC9DkK,GACAD,EACAxE,IAEI0E,GAAgBpd,IAAMuL,SAhBF,WACxB,MAAO,CACL,cAAC,IAAD,CAAgB/I,QAASiY,EAAzB,2FAAY,KAGZ,cAAC,IAAD,CAAgBjY,QAASya,EAAwBhK,QAAM,EAAvD,uDAAY,QAWuC,CACrDgK,EACAxC,IAGF,OAAIgC,EAEA,eAAC,GAAD,CAAS/b,UAAU,UAAnB,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAQA,UAAU,UAAUkC,KAAK,UAAUJ,QAAS2Z,EAApD,4CAGC5W,GAAUc,GACT,cAAC,IAAD,CAAQ7D,QAAS2Z,EAAjB,uEAIJ,cAAC,EAAD,CACEkB,iBAAkB,cAAC,IAAD,CAAM3c,UAAU,QAClC4c,WAAY,qBAAK5c,UAAU,gBAC3B6c,aAAa,gIACbC,eAAgB,cAAC,EAAD,IAChB5Y,mBAAoBA,GACpBC,OAAQU,OAMZsX,EACK,cAAC,EAAD,IAIP,eAAC,GAAD,CAASnc,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAAS,kBACPiM,EACEJ,GAA6CpP,EAAiBwD,SAGlEH,aAAc2Z,EACd5Z,OAAQ2Z,EACRzZ,eAAe,6JAEhBwE,GACC,qCACE,qBAAKhH,UAAU,cAAf,SACE,cAAC,KAAD,CACEqa,OAAO,EACPC,OApKG,kBAAMjI,OAAOZ,QAAQ8I,QAqKxBxZ,MACE,cAAC,GAAD,CACEyC,aAAcwD,EAAWrD,KACzBgC,SAAUA,EACVqQ,QAASA,EACT1S,MAAO2S,EAAOtS,KACdsV,UAAU,OACV7S,YAAY,qDAGhBoU,MAAO7U,EAAWuU,GAAqBwC,GAbzC,SAeE,cAAC,GAAD,CACE/W,SAAUA,EACV6V,oBAAqBA,EACrBF,gBAAiBA,EACjBtU,WAAYA,EACZgP,QAASA,EACTC,OAAQA,EACRwF,cAAeA,QAIrB,cAAC,GAAD,CACEjY,aAAcwD,EAAWkL,YACzBvM,SAAUA,EACVqQ,QAASA,EAET1S,MAAO2S,EAAO/D,YACdmF,eAAgBA,EAChBL,mBAAoBA,EACpBqC,uBAAwBA,EACxB3T,OAAQuC,EACRqT,gBAAiBA,EACjBhC,kBA/HgB,SAAC/K,GACrBvH,GACF0H,ErB/BJ,SAACb,EAAsBU,GAAvB,gDACA,WAAOG,GAAP,UAAArB,EAAA,sEAEIqB,EAASJ,IAA8C,IAF3D,SAI2BnB,GAAea,2BACpCH,EACAU,GANN,cAUMG,EAASJ,GAAwCC,IAEjDC,GAAU,0PAAmDE,GAZnE,gDAeIC,QAAQC,IAAI,8BAAZ,MACAJ,GAAU,oKAAmCE,GAhBjD,yBAkBIA,EAASJ,IAA8C,IAlB3D,4EADA,sDqB+BayO,CAAsB/V,EAAWtD,GAAI6K,KA8HxCgL,eAAgB9B,GAChB+B,eAAgBrR,WC/VpBnF,GAASC,IAATD,KAwCOga,GAtC6C,SAAC,GAStD,IARLhH,EAQI,EARJA,QACA1S,EAOI,EAPJA,MACA2Z,EAMI,EANJA,SACAhE,EAKI,EALJA,UAKI,IAJJtG,gBAII,SAHJsI,EAGI,EAHJA,UACAiC,EAEI,EAFJA,SACA1Z,EACI,EADJA,aAEM2Z,EAAaD,EAAWE,IAAM9G,SAAW8G,IAE/C,OACE,cAAC,KAAD,CACEpH,QAASA,EACTE,MAAO,CAAEvD,YACTpC,OAAQ,oBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,eAAC,KAAKxD,KAAN,CACE8V,eAAgB9S,EAAQ,QAAU,UAClC+S,KAAI,OAAE/S,QAAF,IAAEA,OAAF,EAAEA,EAAOX,QACb3C,UAAU,oBACV2S,SAAUA,EAJZ,UAME,cAAC,GAAD,CAAM3S,UAAU,WAAhB,SAA4Bid,IAC5B,cAACE,EAAD,CACE/W,YAAa6W,EACbnZ,MAAOA,EACPxC,SAAUA,EACV2Z,UAAWA,QAIjBtX,KAAMsV,EACNzV,aAAcA,KCjDd6Z,GAAS,CACb,CACE3Z,GAAI,IACJuV,UAAW,OACXgE,SAAU,sHACVtK,UAAU,GAEZ,CACEjP,GAAI,IACJuV,UAAW,cACXgE,SAAU,wFACVtK,UAAU,GAEZ,CAAEjP,GAAI,IAAKuV,UAAW,WAAYgE,SAAU,iCAAStK,UAAU,GAC/D,CAAEjP,GAAI,IAAKuV,UAAW,UAAWgE,SAAU,iCAAStK,UAAU,GAC9D,CAAEjP,GAAI,IAAKuV,UAAW,QAASgE,SAAU,iCAAStK,UAAU,GAC5D,CAAEjP,GAAI,IAAKuV,UAAW,UAAWgE,SAAU,4EAAiBtK,UAAU,GACtE,CACEjP,GAAI,IACJuV,UAAW,cACXgE,SAAU,kFACVhC,UAAW,GACXtI,UAAU,EACVnP,aAAc,MAEhB,CACEE,GAAI,IACJuV,UAAW,cACXgE,SAAU,mDACVtK,UAAU,EACVuK,UAAU,IA8CCI,GAzBiD,SAAC,GAG1D,IAFLtH,EAEI,EAFJA,QACAC,EACI,EADJA,OAEA,OACE,mCACGoH,GAAOzZ,KAAI,SAACuS,GACX,OACE,cAAC,GAAD,CAEEH,QAASA,EACT1S,MAAO2S,EAAOE,EAAM8C,WACpBgE,SAAU9G,EAAM8G,SAChBhE,UAAW9C,EAAM8C,UACjBtG,SAAUwD,EAAMxD,SAChBsI,UAAW9E,EAAM8E,UACjBiC,SAAU/G,EAAM+G,SAChB1Z,aAAc2S,EAAM3S,cARf2S,EAAMzS,UC7DjB2Z,GAAS,CACb,CACE3Z,GAAI,IACJuV,UAAW,OACXgE,SAAU,sHACVtK,UAAU,GAEZ,CACEjP,GAAI,IACJuV,UAAW,cACXgE,SAAU,wFACVtK,UAAU,GAEZ,CAAEjP,GAAI,IAAKuV,UAAW,WAAYgE,SAAU,iCAAStK,UAAU,GAC/D,CACEjP,GAAI,IACJuV,UAAW,cACXgE,SAAU,kFACVhC,UAAW,GACXtI,UAAU,EACVnP,aAAc,OAsCH+Z,GAxBiD,SAAC,GAG1D,IAFLvH,EAEI,EAFJA,QACAC,EACI,EADJA,OAEA,OACE,mCACGoH,GAAOzZ,KAAI,SAACuS,GACX,OACE,cAAC,GAAD,CAEEH,QAASA,EACT1S,MAAO2S,EAAOE,EAAM8C,WACpBgE,SAAU9G,EAAM8G,SAChBhE,UAAW9C,EAAM8C,UACjBtG,SAAUwD,EAAMxD,SAChBsI,UAAW9E,EAAM8E,UACjBzX,aAAc2S,EAAM3S,cAPf2S,EAAMzS,UCMfmM,GAAYzQ,IAAZyQ,QACAD,GAAU3M,IAAV2M,MACA2G,GAAaC,KAAbD,SAwQOiH,GAtQc,WAC3B,MAAoDle,IAAMC,SACxD,IADF,mBAAOyX,EAAP,KAA2BC,EAA3B,KAGA,EACE3X,IAAMC,SAA8BgG,EAAoB6B,UAD1D,mBAAOkU,EAAP,KAAwBQ,EAAxB,KAGA,EAKIpF,aAA+D,CACjEC,SAAUC,aACR0E,IAAoB/V,EAAoB6B,SACpC0L,GACAQ,MARN0C,EADF,EACEA,QACAc,EAFF,EAEEA,aACAD,EAHF,EAGEA,MACaZ,EAJf,EAIEc,UAAad,OASf,EAA8B3W,IAAMC,UAAS,GAA7C,mBAAOwc,EAAP,KAAgBC,EAAhB,KACA,EAA4B1c,IAAMC,SAAiC,MAAnE,mBAAOsF,EAAP,KAAegX,EAAf,KAEMI,EAAyBzR,YAAY/C,IACrCyU,EAAkB1R,YAAY7C,IAC9B8V,EAAoBjT,YAAYjD,IAChCZ,EAAoB6D,YAAY9D,IAEhCuB,EAAmBuC,YAAYxC,IAC/BG,EAA2BqC,YAC/BtC,IAGImP,EAAiB7M,YAAY8J,IAC7BgD,EAAkB9M,YAAYoJ,IAC9BS,EAAyB7J,YAAY4J,IAErC1F,EAAWqB,cACX0B,EAAUC,cAEVgM,EAAwBpe,IAAMsS,aAAY,WAC9ClD,EACEJ,GAA6CpP,EAAiBwD,QAEhEgM,EAASJ,GAA6C,OACtDI,EAASJ,QACR,CAACI,IAEE8I,EAAuBlY,IAAMsS,aAAY,WAC7ClD,EACEyG,GAA4CjW,EAAiBwD,QAE/DgM,EAASyG,GAA4C,SACpD,CAACzG,IAEJpP,IAAMM,WAAU,WACd,OAAO,WACL8d,IACAlG,OAED,CAACA,EAAsBkG,IAE1Bpe,IAAMM,WAAU,WAEZ+G,GACAsV,IAA2B/c,EAAiB2P,SAE5C4C,EAAQU,KAAR,uBAA6BxL,EAAkBjD,OAEhD,CAACiD,EAAmB8K,EAASwK,IAEhC,IAIMjE,EAAWlB,GAAa,SAACtJ,GAC7B,IAAMyD,EAAa+F,EAAmBpT,KAAI,SAACqU,GAAD,MAAiB,CACzDA,iBAGIoE,EAA2C,CAC/C1Y,KAAM6J,EAAS7J,KACfuP,YAAa1F,EAAS0F,YACtBH,YAAY,IAAD,OAAM7M,OAAOsH,EAASuF,aAAauJ,OAAO,KAErDpK,YAAa1E,EAAS0E,YAAc1E,EAAS0E,YAAc,GAC3DxS,SAAU8N,EAAS9N,SACnB0c,YAAavX,GAET,CACER,oBAAqB,GACrBM,qBAAsB,IAE5BgX,SAAU,CAER1I,QAASzF,EAASyF,QAAUzF,EAASyF,QAAU,GAE/CE,QAAS3F,EAAS2F,QAAU3F,EAAS2F,QAAU,GAE/CC,MAAO5F,EAAS4F,MAAQ5F,EAAS4F,MAAQ,IAE3ClM,eAAgBoU,EAChBrK,aACAkH,YAAalQ,EAAiBrE,KAAI,SAACmL,GAAD,MAAY,CAC5Cd,aAAcc,EAAMrL,QAGxBgL,EzB9EF,SAAClB,GAAD,gDACA,WAAOkB,GAAP,gBAAArB,EAAA,sEAEIqB,EAASJ,IAAwC,IAFrD,SAGkCnB,GAAeI,iBAAiBC,GAHlE,QAGUmQ,EAHV,QAIwBrZ,OAAS,GAC3BoK,EACEJ,GAA6CpP,EAAiB2P,UAEhEH,EAASJ,GAAuCqP,EAAgB,MAEhEnP,GAAU,oPAAkDE,GAVlE,gDAaIC,QAAQC,IAAI,qCAAZ,MACAJ,GAAU,oKAAmCE,GAdjD,yBAgBIA,EAASJ,IAAwC,IAhBrD,4EADA,sDyB8EWsP,CAAwBvB,OAQ7BZ,EAAgB,WACpBO,GAAYD,IAcRtE,EAAiB,yCAAG,WAAO7S,GAAP,4BAAAyI,EAAA,yDAClBqK,EAAS9S,EAAEiN,gBACXwD,EAFkB,UAEXqC,EAAOC,aAFI,aAEX,EAAe,IAFJ,oBAMN,cAAdtC,EAAKnT,MACS,eAAdmT,EAAKnT,MACS,cAAdmT,EAAKnT,KARe,yCAUbS,KAAQW,MAAR,UAAiB+R,EAAK1R,KAAtB,2HAVa,uBAYCyR,GAAUC,GAZX,OAYduC,EAZc,OAadC,EAAMxC,EAAK1R,KAAK7D,MAAM,KAAKgY,MAC3BnU,EAAO0R,EAAK1R,KAEdiU,GAAUC,GAAOlU,IACboL,EAAwB,CAC5BpL,KAAMA,EACNkU,IAAKA,EACLE,QAASH,EAAO9X,MAAM,KAAK,IAE7B4O,EAASI,GAAmBC,KAtBV,4CAAH,sDA4BvB,OAAI0O,EACK,cAAC,EAAD,IAGL1B,EAEA,eAAC,GAAD,CAAS/b,UAAU,UAAnB,UACE,sBAAKA,UAAU,cAAf,UACE,cAAC,IAAD,CAAQA,UAAU,UAAUkC,KAAK,UAAUJ,QAAS2Z,EAApD,4CAGC5W,GAAU,cAAC,IAAD,CAAQ/C,QAAS2Z,EAAjB,uEAGb,cAAC,EAAD,CACEkB,iBAAkB,cAAC,IAAD,CAAM3c,UAAU,QAClC4c,WAAY,qBAAK5c,UAAU,gBAC3B6c,aAAa,gIACbC,eAAgB,cAAC,EAAD,IAChB5Y,mBA1DmB,SAACW,GAC1BgX,EAAU,CACRxX,oBAAqB6B,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAQL,OACpCG,qBAAsBuB,OAAM,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAQH,UAwDjCP,OAAQU,OAOd,eAAC,GAAD,CAAS7E,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASib,EACTnb,aAAc2Z,EACd1Z,eAAgB,gHAChBF,OAAQ2Z,IAEV,cAAC,EAAD,CACExZ,QAAS+U,EACTjV,aAAc+U,EACdhV,OAAQ+R,IAEV,eAAC,IAAD,CAAMrU,UAAU,OAAhB,UACE,cAAC,GAAD,CAAOqY,MAAO,EAAGrY,UAAU,QAA3B,iIAGCsb,IAAoB/V,EAAoB6B,SACvC,cAAC,GAAD,CAAmB4O,QAASA,EAASC,OAAQA,IAE7C,cAAC,GAAD,CAAmBD,QAASA,EAASC,OAAQA,IAE9CqF,IAAoB/V,EAAoB6B,UACvC,cAAC,KAAD,CACEkR,SAAUjB,EACVvT,MAAOkT,EACP1V,SA3IqB,SAACwC,GAC9BmT,EAAsBnT,IA2IdyU,eAAe,EACfC,oBAAqBjC,GACrBnQ,YAAa,6KACbqS,MAAO,CAAE7X,MAAO,OAAQ8X,aAAc,IACtCC,YAAa,IAIjB,eAAC,KAAM+C,MAAP,CACEpa,SA9GoB,SAACsD,GAC3BiS,IACAiF,EAAmBlX,EAAE8S,OAAO5T,QA6GtBA,MAAOwX,EACPtb,UAAU,cAHZ,UAKE,cAAC,KAAD,CAAO8D,MAAOyB,EAAoB6B,SAAlC,oEACA,cAAC,KAAD,CAAOtD,MAAOyB,EAAoB4B,SAAlC,iEAEDmU,IAAoB/V,EAAoB6B,UACvC,cAAC,IAAD,CACEpH,UAAU,UACVkC,KAAK,UACLJ,QAAS2Z,EACToC,OAAK,EAJP,SAMGhZ,EAAS,gHAAwB,iGAGtC,cAAC,EAAD,CACEe,YAhHkB,SAAC2I,GACzBG,EzBoDF,SAACH,GAAD,gDACA,WAAOG,GAAP,UAAArB,EAAA,sEAEIqB,EAASJ,IAA8C,IAF3D,SAI2BJ,GAAeG,iBAAiBE,GAJ3D,cAOMG,EAASJ,GAAwCC,IAEjDC,GAAU,0PAAmDE,GATnE,gDAYIC,QAAQC,IAAI,iCAAZ,MACAJ,GAAU,oKAAmCE,GAbjD,yBAeIA,EAASJ,IAA8C,IAf3D,4EADA,sDyBpDWwP,CAAyBvP,KAgH5B7I,OAAQuC,EACRtC,UAAU,IAEZ,cAAC,EAAD,CACErE,SAAUmW,EACVlW,YAAa4G,IAEf,cAAC,IAAD,CACEnI,UAAU,kBACV8B,QAASkW,EACTa,SACEC,OAAOC,KAAK9C,GAAQ3R,OAAS,GAC5BgX,IAAoB/V,EAAoB6B,UACT,IAA9B4P,EAAmB1S,OANzB,2E,8BChTAtB,GAASC,IAATD,KA8CO+a,GAnCoD,SAAC,GAO7D,IANL3X,EAMI,EANJA,YACAT,EAKI,EALJA,SACA7B,EAII,EAJJA,MACAka,EAGI,EAHJA,aACA1a,EAEI,EAFJA,MACAhC,EACI,EADJA,SAQA,OAAIqE,EAEA,cAAC,KAAKrF,KAAN,CACE8V,eAAgB9S,EAAQ,QAAU,UAClC+S,KAAM/S,EACNtD,UAAU,QACV2S,UAAQ,EACRsL,QAAQ,oGALV,SAOE,cAAC,IAAD,CACE7X,YAAaA,EACbtE,QAjBiB,SACvB8C,GAEAA,EAAEsZ,mBAeIpa,MAAOka,EACP1c,SAAUA,MAKX,cAAC,GAAD,UAAOwC,KCQDqa,GAzC6C,SAAC,GAOtD,IANLxY,EAMI,EANJA,SACAyY,EAKI,EALJA,YACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACApN,EAEI,EAFJA,SACAqN,EACI,EADJA,SAEA,OACE,qBAAKve,UAAU,sBAAf,SACG2F,EACC,cAAC,IAAD,CAAQ7D,QAASuc,EAAQxF,SAAUuF,EAAnC,oEAIA,qCACE,cAAC,IAAD,CACEpe,UAAU,kBACV8B,QAAS,SAAC8C,GACRA,EAAEsZ,kBACFI,EAAOpN,IAJX,4FASA,cAAC,IAAD,CACElR,UAAU,kBACV8B,QAAS,SAAC8C,GACRA,EAAEsZ,kBACFK,EAASrN,EAASxN,KAEpB6O,QAAM,EANR,8DChBF1C,GAAYzQ,IAAZyQ,QACA7M,GAASC,IAATD,KACAwb,GAAUC,KAAVD,MAgMOE,GA9LQ,WACrB,MACEpf,IAAMC,SAA8B,MADtC,mBAAOof,EAAP,KAAyBC,EAAzB,KAGMlQ,EAAWqB,cAEX5M,EAAiBqH,YAAYuJ,IAC7BQ,EAAgB/J,YAAYwJ,IAC5B6K,EAAoBrU,YAAYqJ,IAChCyD,EAAkB9M,YAAYoJ,IAC9BkL,EAAwBtU,YAAY0J,IACpCG,EAAyB7J,YAAY4J,IAErCzC,EAAarS,IAAMsS,aAAY,WACnClD,EACEyG,GAA4CjW,EAAiBwD,QAE/DgM,EAASyG,GAA4C,SACpD,CAACzG,IAEJpP,IAAMM,WAAU,WACd,OAAO,kBAAM+R,OACZ,CAACA,IAEJ,IAAM4M,EAAW,SAAC7a,GACD2O,OAAOC,QAAQ,wOAE5B5D,EnBwHJ,SAAChL,GAAD,gDACA,WAAOgL,GAAP,UAAArB,EAAA,sEAEIqB,EAASyG,IAAyC,IAFtD,SAG2BP,GAAcK,mBAAmBvR,GAH5D,eAKMgL,EACEyG,GAA4CjW,EAAiB2P,UAE/DH,EAASyG,GAAiCzR,KAE1C8K,GACE,kRACAE,GAZR,gDAgBIC,QAAQC,IAAI,wBAAZ,MACAJ,GAAU,oKAAmCE,GAjBjD,yBAmBIA,EAASyG,IAAyC,IAnBtD,4EADA,sDmBxHaF,CAAmBvR,KAI1B4a,EAAS,SAACpN,GACd0N,EAAoB1N,IAGhBmN,EAAS,SAACzZ,GACdA,EAAEsZ,kBACES,GACFjQ,EAASwG,GAAmByJ,IAE9BC,EAAoB,OAGhBG,EAAuB,SAACna,GAC5Bga,GAAoB,SAAC5E,GACnB,OAAIA,EACK,6BAAKA,GAAZ,IAAkBrW,KAAMiB,EAAE8S,OAAO5T,QAE5BkW,MAIL5W,EAAuB,SAACM,GAC5Bkb,GAAoB,SAAC5E,GACnB,OAAIA,EACK,6BAAKA,GAAZ,IAAkBvW,SAAUC,IAEvBsW,MAIX,OAAI6E,EACK,cAAC,EAAD,CAAczd,KAAK,UAI1B,eAAC,GAAD,CAASpB,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASkP,EACTpP,aAAc+U,EACd9U,eAAgB,gHAChBF,OAAQ+R,IAETlR,GAAkBA,EAAemB,OAAS,EACzC,cAAC,KAAD,CAAU0a,WAAS,EAAnB,SACG7b,EAAeS,KAAI,SAACC,GACnB,OACE,cAAC2a,GAAD,CACES,OACE,qBAAKjf,UAAU,qBAAf,SACG8e,IAA0Bjb,EAAQH,GACjC,cAAC,GAAD,8EAEA,cAAC,GAAD,CACEiC,UAA0B,OAAhBgZ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBjb,MAAOG,EAAQH,GAC3CI,MAAOD,EAAQF,KACfqa,aAAY,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAkBhb,KAChCrC,SAAUyd,MAMlBvE,MACE,cAAC0E,GAAD,CACEvZ,UAA0B,OAAhBgZ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBjb,MAAOG,EAAQH,GAC3C0a,YAA+C,KAAlB,OAAhBO,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBhb,KAAKW,QACpC+Z,OAAQA,EACRC,OAAQA,EACRpN,SAAUrN,EACV0a,SAAUA,IAvBhB,SA2BGhK,GACC,cAAC,KAAD,CACEzC,WAAYyC,EAAczN,QACxB,SAAC2N,GAAD,OAAYA,EAAOhR,WAAaI,EAAQH,MAE1Cyb,WAAY,SAAC9b,GAAD,OACV,cAAC,KAAK/C,KAAN,CACE8e,SACkB,OAAhBT,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBjb,MAAOL,EAAKK,GAC1B,CACE,cAAC,IAAD,CACE5B,QAASuc,EACTxF,SAA4C,KAAlB,OAAhB8F,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBhb,KAAKW,QAFnC,qEAOF,CACE,cAAC,IAAD,CACElD,KAAK,QACLU,QAAS,SACP8C,GAEAA,EAAEsZ,kBACFI,EAAOjb,IANX,4FAWA,cAAC,IAAD,CACEjC,KAAK,QACLU,QAAS,SACP8C,GAEAA,EAAEsZ,kBACFK,EAASlb,EAAKK,KAEhB6O,QAAM,EARR,yDAvBV,SAsCE,cAAC,KAAKjS,KAAK+e,KAAX,CACEnN,YACE,mCACG4M,IAA0Bzb,EAAKK,GAC9B,cAAC,GAAD,8EAEA,qCACE,cAAC,GAAD,CACEiC,UAA0B,OAAhBgZ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBjb,MAAOL,EAAKK,GACxCI,MAAOT,EAAKM,KACZqa,aAAY,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAkBhb,KAChCrC,SAAUyd,KAEK,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBjb,MAAOL,EAAKK,IAC7B,cAAC,EAAD,CACEP,eAAgBA,EAChBC,qBACEA,EAEFC,KAAMA,iBA3EvBQ,EAAQH,SA4FrB,cAAC,KAAD,CAAOwO,YAAY,gEC5LnBrC,GAAYzQ,IAAZyQ,QACA7M,GAAgBC,IAAhBD,KAAM4M,GAAU3M,IAAV2M,MAqGC0P,GAnGY,WACzB,MAII5I,aAA6B,CAC/BC,SAAUC,aAAYnD,MAJtBuC,EADF,EACEA,QACAc,EAFF,EAEEA,aACab,EAHf,EAGEc,UAAad,OAKTqB,EAAkB9M,YAAYoJ,IAC9BS,EAAyB7J,YAAY4J,IACrCjR,EAAiBqH,YAAYuJ,IAC7B8K,EAAoBrU,YAAYqJ,IAEhCnF,EAAWqB,cAEX4B,EAAarS,IAAMsS,aAAY,WACnClD,EACEyG,GAA4CjW,EAAiBwD,QAE/DgM,EAASyG,GAA4C,SACpD,CAACzG,IAEEsJ,EAAWlB,GAAa,SAACtJ,GAC7BkB,EpB0EF,SAAClB,GAAD,gDACA,WAAOkB,GAAP,gBAAArB,EAAA,sEAEIqB,EAASyG,IAAyC,IAFtD,SAGkCP,GAAcG,YAAY,CACtDpR,KAAM6J,EAAS7J,KACfF,SAAUgB,OAAO+I,EAAS/J,UAC1BwD,WAAW,IANjB,QAGUsY,EAHV,QASwBjb,OAAS,GAC3BoK,EACEyG,GAA4CjW,EAAiB2P,UAE/DH,EAASyG,GAAiCoK,EAAgB,MAE1D/Q,GACE,wRACAE,GAjBR,gDAqBIC,QAAQC,IAAI,iBAAZ,MACAJ,GAAU,oKAAmCE,GAtBjD,yBAwBIA,EAASyG,IAAyC,IAxBtD,4EADA,sDoB1EWqK,CAAehS,OAO1B,OAJAlO,IAAMM,WAAU,WACd,OAAO,kBAAM+R,OACZ,CAACA,IAEAkN,EACK,cAAC,EAAD,IAIP,eAAC,GAAD,CAAS7e,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASkP,EACTpP,aAAc+U,EACd9U,eAAgB,gHAChBF,OAAQ+R,IAEV,eAAC,IAAD,CAAMrU,UAAU,OAAhB,UACE,cAAC,GAAD,CAAOqY,MAAO,EAAGrY,UAAU,QAA3B,qHAGA,cAAC,KAAD,CACEgW,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAUwC,EAAtB,EAAsBA,MAAtB,OACN,eAAC,KAAKxD,KAAN,CACE8V,eAAgBH,EAAOtS,KAAO,QAAU,UACxC0S,KAAI,UAAEJ,EAAOtS,YAAT,aAAE,EAAahB,QACnB3C,UAAU,QACV2S,UAAQ,EAJV,UAME,cAAC,GAAD,CAAM3S,UAAU,WAAhB,qHACA,cAAC,IAAD,CACEoG,YAAY,0GACZtC,MAAOA,EACPxC,SAAUA,QAIhBqC,KAAK,OACLH,aAAa,KAEdL,GACC,cAAC,KAAD,CACE6S,QAASA,EACTE,MAAO,CACLvD,UAAU,GAEZpC,OAAQ,sBAAG4F,MAAS7U,EAAZ,EAAYA,SAAZ,EAAsBwC,MAAtB,OACN,cAAC,EAAD,CACEX,eAAgBA,EAChBC,qBAAsB9B,EACtBgC,MAAK,UAAE2S,EAAOxS,gBAAT,aAAE,EAAiBd,WAG5BgB,KAAK,WACLH,aAAc,IAGlB,cAAC,IAAD,CACExD,UAAU,uBACV8B,QAASkW,EACTa,SAAUgG,GAAqB/F,OAAOC,KAAK9C,GAAQ3R,OAAS,EAH9D,2E,UC9FAtB,GAASC,IAATD,KA+DOyc,GA7De,WAC5B,IAAMC,EAAoBlV,YAAYyJ,IAChCqD,EAAkB9M,YAAYoJ,IAC9BS,EAAyB7J,YAAY4J,IACrC0K,EAAwBtU,YAAY0J,IAEpCxF,EAAWqB,cAEX4B,EAAarS,IAAMsS,aAAY,WACnClD,EACEyG,GAA4CjW,EAAiBwD,QAE/DgM,EAASyG,GAA4C,SACpD,CAACzG,IAUJ,OACE,eAAC,WAAD,CAAS1O,UAAU,UAAnB,UACE,cAAC,EAAD,CACEyC,QAASkP,EACTpP,aAAc+U,EACd9U,eAAgB,gHAChBF,OAAQ+R,IAETqL,GAAkD,IAA7BA,EAAkBpb,OACtC,cAAC,KAAD,IAEA,cAAC,IAAD,UACE,cAAC,KAAD,CACEwN,WAAY4N,EACZP,WAAY,SAAC9b,GAAD,OACV,cAAC,KAAK/C,KAAN,CACE8e,QAAS,CACP,cAAC,IAAD,CAAQtd,QAAS,kBAzBf,SAACoP,GAEjB,GADemB,OAAOC,QAAQ,2LAClB,CACV,IAAMqN,EAAc,6BAAQzO,GAAR,IAAkBjK,WAAW,IACjDyH,EAASwG,GAAmByK,KAqBOC,CAAUvc,IAAjC,uFAFJ,SAKE,cAAC,KAAK/C,KAAK+e,KAAX,CACEnN,YACE4M,IAA0Bzb,EAAKK,GAC7B,cAAC,GAAD,8EAEA,cAAC,GAAD,UAAOL,EAAKM,oBCMnBkc,GAvDI,WACjB,OACE,eAAC,IAAD,CAAQ7f,UAAU,UAAlB,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8f,OAAK,EAACC,KAAK,IAAIxP,OAAQ,kBAAM,cAAC,IAAD,CAAUtQ,GAAG,aACjD,cAAC,IAAD,CAAO6f,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,eAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,sBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,sBAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,qBAAlB,SACE,cAAC,GAAD,MAGF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,IAAIxP,OAAQ,kBAAM,cAAC,IAAD,CAAUtQ,GAAG,WAAjD,SACE,cAAC,GAAD,kBC3CC+f,OAdf,WACE,IAAMtR,EAAWqB,cAMjB,OAJAzQ,IAAMM,WAAU,WACd8O,EvBuE4B,yCAAsB,WAAOA,GAAP,gBAAArB,EAAA,sEAElDqB,EAASyG,IAAyC,IAFA,SAGzBP,GAAcC,mBAHW,OAG5C5D,EAH4C,OAIlDvC,EAASyG,GAAmClE,IAJM,gDAMlDtC,QAAQC,IAAI,sBAAZ,MACAJ,GAAU,oKAAmCE,GAPK,yBASlDA,EAASyG,IAAyC,IATA,4EAAtB,yDuBtE3B,CAACzG,IAGF,qBAAK1O,UAAU,MAAf,SACE,cAAC,GAAD,OCHSigB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,oBCPRQ,GAAe,GAcNC,GAVK,WAGC,IAFnBpa,EAEkB,uDAFVma,GACRE,EACkB,uCAGd,OAFIA,EAAO1e,KAEJqE,GCRPma,GAAe,CACnBzP,WAAY,KACZ6C,qBAAqB,EACrBvR,aAAc,KACd8R,uBAAwBnV,EAAiBwD,MACzCme,gBAAiB,KACjB1M,sBAAuB,MAgEV2M,GA3DW,WAGL,IAFnBva,EAEkB,uDAFVma,GACRE,EACkB,uCAClB,OAAQA,EAAO1e,MACb,IAAK,iBACL,IAAK,4BACL,IAAK,+BACL,IAAK,+BACL,IAAK,uBACL,IAAK,+BACH,OAAO,6BACFqE,GACAqa,EAAO3X,SAGd,IAAK,mBAAqB,IAAD,EACjB8X,EAAiB,UAAGxa,EAAM0K,kBAAT,aAAG,EAAkBrN,KAAI,SAACsN,GAC/C,OAAIA,EAASxN,KAAOkd,EAAO3X,QAAQiI,SAASxN,GACnCkd,EAAO3X,QAAQiI,SAEjBA,KAET,OAAO,6BACF3K,GADL,IAEE0K,WAAY8P,IAIhB,IAAK,kBAAoB,IAAD,EAChBA,EAAiB,UAAGxa,EAAM0K,kBAAT,aAAG,EAAkBnK,QAC1C,SAACoK,GAAD,OAAcA,EAASxN,KAAOkd,EAAO3X,QAAQvF,MAE/C,OAAO,6BACF6C,GADL,IAEE0K,WAAY8P,IAIhB,IAAK,mBACH,OAAO,6BACFxa,GADL,IAEE0K,WAAY,OAIhB,IAAK,mBACH,OAAO,6BACF1K,GADL,IAEE0K,WAAY1K,EAAM0K,WAAN,sBACJ1K,EAAM0K,YADF,CACc2P,EAAO3X,QAAQiI,WACrC,CAAC0P,EAAO3X,QAAQiI,YAGxB,QACE,OAAO3K,ICjEPma,GAAe,CACnBla,YAAa,KACbG,kBAAmB,KACnBa,oBAAoB,EACpBE,wBAAyBxI,EAAiBwD,MAC1CH,aAAc,KACd0F,iBAAkB,GAClBE,0BAA0B,GAiEb6Y,GA5DY,WAGN,IAFnBza,EAEkB,uDAFVma,GACRE,EACkB,uCAClB,OAAQA,EAAO1e,MACb,IAAK,yBACL,IAAK,0BACL,IAAK,gCACL,IAAK,gCACL,IAAK,kBACL,IAAK,iCACH,OAAO,6BACFqE,GACAqa,EAAO3X,SAId,IAAK,oBAAsB,IAAD,EACxB,OAAO,6BACF1C,GADL,IAEEC,YAAW,UAAED,EAAMC,mBAAR,aAAE,EAAmBM,QAC9B,SAACE,GAAD,OAAgBA,EAAWtD,KAAOkd,EAAO3X,QAAQ4E,kBAKvD,IAAK,wBACH,OAAO,6BACFtH,GADL,IAEE0B,iBAAkB2Y,EAAO3X,QAAQvD,SAIrC,IAAK,uBACH,OAAO,6BACFa,GADL,IAEE0B,iBAAiB,GAAD,mBAAM1B,EAAM0B,kBAAZ,YAAiC2Y,EAAO3X,QAAQvD,WAIpE,IAAK,0BACH,OAAO,6BACFa,GADL,IAEE0B,iBAAkB1B,EAAM0B,iBAAiBnB,QACvC,SAACiI,GAAD,OAAWA,EAAMrL,KAAOkd,EAAO3X,QAAQsF,aAK7C,IAAK,0BACH,OAAO,6BACFhI,GADL,IAEE0B,iBAAkB,KAGtB,QACE,OAAO1B,ICpEPma,GAAe,CACnBlV,OAAQ,KACRS,eAAe,EACf1J,aAAc,KACd6J,kBAAmBlN,EAAiBwD,MACpC4J,aAAc,KACdM,YAAa,GACb8C,qBAAqB,GAiFRuR,GA5EO,WAGD,IAFnB1a,EAEkB,uDAFVma,GACRE,EACkB,uCAClB,OAAQA,EAAO1e,MACb,IAAK,aACL,IAAK,qBACL,IAAK,mBACL,IAAK,0BACL,IAAK,oBACL,IAAK,4BACH,OAAO,6BACFqE,GACAqa,EAAO3X,SAId,IAAK,gBACH,OAAO,6BACF1C,GADL,IAEEiF,OAAQjF,EAAMiF,OAAN,sBACAjF,EAAMiF,QADN,CACcoV,EAAO3X,QAAQ0C,QACjC,CAACiV,EAAO3X,QAAQ0C,SAGxB,IAAK,eAAiB,IAAD,EACnB,OAAO,6BACFpF,GADL,IAEEiF,OAAM,UAAEjF,EAAMiF,cAAR,aAAE,EAAc5H,KAAI,SAAC+H,GACzB,OAAIA,EAAMjI,KAAOkd,EAAO3X,QAAQ0C,MAAMjI,GAC7Bkd,EAAO3X,QAAQ0C,MAEjBA,OAIb,IAAK,eAAiB,IAAD,EACnB,OAAO,6BACFpF,GADL,IAEEiF,OAAM,UAAEjF,EAAMiF,cAAR,aAAE,EAAc1E,QAAO,SAAC6E,GAAD,OAAWA,EAAMjI,KAAOkd,EAAO3X,QAAQvF,QAGxE,IAAK,mBACH,OAAO,6BACF6C,GADL,IAEEqG,YAAagU,EAAO3X,QAAQvD,SAIhC,IAAK,kBACH,OAAO,6BACFa,GADL,IAEEqG,YAAY,GAAD,mBAAMrG,EAAMqG,aAAZ,YAA4BgU,EAAO3X,QAAQvD,WAI1D,IAAK,qBACH,OAAO,6BACFa,GADL,IAEEqG,YAAarG,EAAMqG,YAAY9F,QAC7B,SAACiI,GAAD,OAAWA,EAAMrL,KAAOkd,EAAO3X,QAAQsF,aAK7C,IAAK,qBACH,OAAO,6BACFhI,GADL,IAEEqG,YAAa,KAGjB,QACE,OAAOrG,IC1EP2a,GAAmB7O,OAAO8O,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClCC,KAAMZ,GACN1P,WAAY6P,GACZta,YAAawa,GACbxV,OAAQyV,KAKKO,gBACbH,GACAH,GAAiBO,aAAgBC,QClBnCC,IAASpR,OACP,cAAC,IAAD,UACE,cAAC,IAAD,CAAUqR,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1B7B,O","file":"static/js/main.3a218828.chunk.js","sourcesContent":["import { Control, FieldError } from \"react-hook-form\";\r\n\r\nexport type StateSpecializationType = {\r\n  [key: string]: {\r\n    IDs: string[];\r\n    names: string[] | [];\r\n  };\r\n};\r\n\r\nexport type ActionsCreatorsTypes<T> = T extends { [key: string]: infer U }\r\n  ? U\r\n  : never;\r\n\r\nexport enum ActionStatusEnum {\r\n  SUCCESS = \"SUCCESS\",\r\n  ERROR = \"ERROR\",\r\n  NEVER = \"NEVER\",\r\n}\r\n\r\nexport type OtpFormDataType = {\r\n  phoneNumber: string;\r\n  otp: string;\r\n};\r\n\r\nexport type DirectionType = \"asc\" | \"desc\";\r\n\r\nexport type GetComparatorType<T, D, S> = {\r\n  (direction: D, sortBy: S): ComparatorType<T>;\r\n};\r\n\r\nexport type ComparatorType<T> = {\r\n  (a: T, b: T): number;\r\n};\r\n\r\nexport type StableSortType<T> = {\r\n  (array: T[], comparator: ComparatorType<T>): T[];\r\n};\r\n\r\nexport type DescendingComparatorType<T, S> = {\r\n  (a: T, b: T, sortBy: S): number;\r\n};\r\n\r\nexport type EditableFieldPropsType<T, F> = {\r\n  editMode: boolean;\r\n  fieldName: F;\r\n  control: Control<T, object>;\r\n  error?: FieldError;\r\n  defaultValue?: string | number;\r\n  isTextArea?: boolean;\r\n  isNumberInput?: boolean;\r\n  placeholder?: string;\r\n  currentValue?: string;\r\n  maxLength?: number;\r\n};\r\n\r\nexport type Result = {\r\n  id: number;\r\n  error: string;\r\n};\r\n","import React from \"react\";\r\nimport { Affix, Layout, Menu } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst AppHeader = () => {\r\n  const [currentLocation, setCurrentLocation] = React.useState<string[]>([\"/\"]);\r\n\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    setCurrentLocation([location.pathname.split(\"/\")[1]]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Affix offsetTop={0}>\r\n      <Header className=\"header\">\r\n        <div className=\"header__logo\">\r\n          <NavLink to=\"/\">Логотип</NavLink>\r\n        </div>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={[\"/home\"]}\r\n          selectedKeys={currentLocation}\r\n          className=\"header__menu\"\r\n        >\r\n          <Menu.Item key=\"home\">\r\n            <NavLink to=\"/home\">Главная</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"orders\">\r\n            <NavLink to=\"/orders\">Заявки</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"contractors\">\r\n            <NavLink to=\"/contractors\">Контрагенты</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"categories\">\r\n            <NavLink to=\"/categories\">Категории</NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <div className=\"header__logout\">\r\n          <NavLink to=\"/suppliers\">Выйти</NavLink>\r\n        </div>\r\n      </Header>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\n\r\nimport { Layout, Menu, Affix } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  ClusterOutlined,\r\n  GroupOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nconst AppSideBar = () => {\r\n  const [currentLocation, setCurrentLocation] = React.useState<string[]>([\"/\"]);\r\n\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    setCurrentLocation([`${location.pathname}${location.search}`]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Affix offsetTop={64}>\r\n      <Sider width={200} className=\"site-layout-background sidebar\">\r\n        <Menu\r\n          mode=\"inline\"\r\n          className=\"sidebar__menu\"\r\n          selectedKeys={currentLocation}\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<GroupOutlined />} title=\"Заявки\">\r\n            <Menu.Item key=\"/orders\">\r\n              <NavLink to=\"/orders\">Все заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=active\">\r\n              <NavLink to=\"/orders?filter=active\">Активные заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=archived\">\r\n              <NavLink to=\"/orders?filter=archived\">Архивные заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=deleted\">\r\n              <NavLink to=\"/orders?filter=deleted\">Удаленные заявки</NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"/orders/create\">\r\n              <NavLink to=\"/orders/create\">Создать заявку</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub3\" icon={<UserOutlined />} title=\"Контрагенты\">\r\n            <Menu.Item key=\"/customcontractorsers\">\r\n              <NavLink to=\"/contractors\">Все контрагенты</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=customers\">\r\n              <NavLink to=\"/contractors?filter=customers\">Заказчики</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=supplier\">\r\n              <NavLink to=\"/contractors?filter=supplier\">Поставщики</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=deleted\">\r\n              <NavLink to=\"/contractors?filter=deleted\">Удаленные</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors/create\">\r\n              <NavLink to=\"/contractors/create\">Создать контрагента</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub4\" icon={<ClusterOutlined />} title=\"Категории\">\r\n            <Menu.Item key=\"/categories\">\r\n              <NavLink to=\"/categories\">Все категории</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/categories/deleted\">\r\n              <NavLink to=\"/categories/deleted\">Удаленные категории</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/categories/create\">\r\n              <NavLink to=\"/categories/create\">Создать категорию</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppSideBar);\r\n","import { Spin } from \"antd\";\r\nimport React from \"react\";\r\n\r\ntype AppPreloaderPropsType = {\r\n  size?: \"small\" | \"large\" | \"default\";\r\n};\r\n\r\nconst AppPreloader: React.FC<AppPreloaderPropsType> = ({\r\n  size = \"default\",\r\n}) => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <Spin size={size} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppPreloader;\r\n","import React from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Spin } from \"antd\";\r\n\r\ntype UploadFileFormPropsType = {\r\n  onChange: (e: Event) => void;\r\n  isUploading: boolean;\r\n};\r\n\r\nconst UploadFileForm: React.FC<UploadFileFormPropsType> = ({\r\n  onChange,\r\n  isUploading,\r\n}) => {\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const handleClick = () => {\r\n    inputRef.current?.click();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const input = inputRef.current;\r\n    if (inputRef) {\r\n      input?.addEventListener(\"change\", onChange);\r\n    }\r\n    return () => {\r\n      input?.removeEventListener(\"change\", onChange);\r\n    };\r\n  }, [onChange]);\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <div className=\"upload__btn\" onClick={handleClick}>\r\n        <div className=\"upload__btn-body\">\r\n          {isUploading ? (\r\n            <Spin />\r\n          ) : (\r\n            <>\r\n              <PlusOutlined /> <div>Загрузить</div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <input ref={inputRef} type=\"file\" hidden accept=\"image/*\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFileForm;\r\n","import { Alert } from \"antd\";\r\nimport React from \"react\";\r\nimport { ActionStatusEnum } from \"../models/types\";\r\n\r\ntype AlertPropsType = {\r\n  status: string;\r\n  errorMessage?: string | null;\r\n  successMessage?: string;\r\n  onClose: () => void;\r\n};\r\n\r\nconst AppAlert: React.FC<AlertPropsType> = ({\r\n  status,\r\n  errorMessage,\r\n  successMessage,\r\n  onClose,\r\n}) => {\r\n  if (status === ActionStatusEnum.NEVER) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Alert\r\n      className=\"error\"\r\n      message={\r\n        status === ActionStatusEnum.ERROR ? errorMessage : successMessage\r\n      }\r\n      type={status === ActionStatusEnum.ERROR ? \"error\" : \"success\"}\r\n      closable\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppAlert;\r\n","import { Select, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { CategoryType } from \"../models/Categories\";\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\ntype SelectParentCategoryPropsType = {\r\n  mainCategories: CategoryType[] | null;\r\n  handleChangeParentId: (id: number) => void;\r\n  item?: CategoryType;\r\n  error?: string;\r\n};\r\n\r\nconst SelectParentCategory: React.FC<SelectParentCategoryPropsType> = ({\r\n  mainCategories,\r\n  handleChangeParentId,\r\n  item,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames(\"categories__select-wrapper\", {\r\n        \"categories__select-error\": error,\r\n      })}\r\n    >\r\n      <Text className=\"subtitle\">Выберите родительскую категорию</Text>\r\n      <Select\r\n        defaultValue={item ? item.parentId : 0}\r\n        onChange={handleChangeParentId}\r\n        className=\"categories__select\"\r\n      >\r\n        {mainCategories &&\r\n          [{ id: 0, name: \"ОСНОВНАЯ КАТЕГОРИЯ\" }, ...mainCategories].map(\r\n            (mainCat) => {\r\n              return (\r\n                <Option value={mainCat.id} key={mainCat.id}>\r\n                  {mainCat.name}\r\n                </Option>\r\n              );\r\n            }\r\n          )}\r\n      </Select>\r\n      <Text className=\"error-text\">{error}</Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectParentCategory;\r\n","import React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  WithGoogleMapProps,\r\n  WithScriptjsProps,\r\n} from \"react-google-maps\";\r\nimport { CoordinatesType } from \"../models/Contractors\";\r\n\r\ntype AppMapPropsType = {\r\n  handleSelectCoords: (latLng: google.maps.LatLng | null) => void;\r\n  marker: CoordinatesType | null;\r\n};\r\n\r\nconst AppMap: React.ComponentClass<\r\n  WithGoogleMapProps & WithScriptjsProps & AppMapPropsType\r\n> = withScriptjs(\r\n  withGoogleMap(({ handleSelectCoords, marker }) => {\r\n    const onMapClick = (\r\n      e: google.maps.MouseEvent | google.maps.IconMouseEvent\r\n    ) => {\r\n      handleSelectCoords(e.latLng);\r\n    };\r\n\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={\r\n          marker ? (marker.coordinatesLatitude.length > 0 ? 12 : 7) : 7\r\n        }\r\n        defaultCenter={\r\n          marker\r\n            ? marker.coordinatesLatitude.length > 0\r\n              ? {\r\n                  lat: Number(marker.coordinatesLatitude),\r\n                  lng: Number(marker.coordinatesLongitude),\r\n                }\r\n              : { lat: 51.2146889644867, lng: 68.80153486533352 }\r\n            : { lat: 51.2146889644867, lng: 68.80153486533352 }\r\n        }\r\n        onClick={onMapClick}\r\n      >\r\n        {marker && (\r\n          <Marker\r\n            position={{\r\n              lat: Number(marker.coordinatesLatitude),\r\n              lng: Number(marker.coordinatesLongitude),\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n\r\nexport default AppMap;\r\n","import axios from \"axios\";\r\n\r\nexport const baseURL = \"https://office.e-health.kz:8889\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers[\"Content-Security-Policy-Report-Only\"] = \"default-src 'none';\";\r\n  config.headers[\"Authorization\"] = \"Basic YWRtaW46Z2hidnRo\";\r\n  config.baseURL = baseURL;\r\n  config.timeout = 5000;\r\n  return config;\r\n});\r\n\r\nexport { axios };\r\n","import { AttachmentInType, AttachmentOutType } from \"./Attachments\";\r\nimport { CategoryInType, CategoryType } from \"./Categories\";\r\n\r\nexport type CoordinatesType = {\r\n  coordinatesLatitude: string;\r\n  coordinatesLongitude: string;\r\n};\r\n\r\nexport type ContactsType = {\r\n  address?: string;\r\n  webSite?: string;\r\n  eMail?: string;\r\n};\r\n\r\nexport enum ContractorTypesEnum {\r\n  UNKNOWN = \"UNKNOWN\",\r\n  SUPPLIER = \"SUPPLIER\",\r\n  CUSTOMER = \"CUSTOMER\",\r\n}\r\n\r\nexport enum ContractorStatusEnum {\r\n  NEW = \"NEW\",\r\n  REGISTERED = \"REGISTERED\",\r\n  BANNED = \"BANNED\",\r\n}\r\n\r\nexport type ContractorType = {\r\n  id: number;\r\n  isDeleted: boolean;\r\n  name: string;\r\n  contactName: string;\r\n  phoneNumber: string;\r\n  description: string;\r\n  location: string;\r\n  coordinates: CoordinatesType;\r\n  contacts: ContactsType;\r\n  contractorType: ContractorTypesEnum;\r\n  categories: CategoryType[];\r\n  attachments: AttachmentOutType[];\r\n  rating: number;\r\n};\r\n\r\nexport type AddContractorFormDataType = {\r\n  name: string;\r\n  contactName: string;\r\n  phoneNumber: string;\r\n  description?: string;\r\n  location: string;\r\n  coordinates: CoordinatesType;\r\n  contacts: ContactsType;\r\n  contractorType: ContractorTypesEnum;\r\n  categories: CategoryInType[];\r\n  attachments: AttachmentInType[];\r\n};\r\n\r\nexport type SupplierDescrFormDataType = {\r\n  name: string;\r\n  phoneNumber: string;\r\n  contactName: string;\r\n  location: string;\r\n  webSite: string;\r\n  eMail: string;\r\n  address: string;\r\n  description?: string;\r\n};\r\nexport type CustomerDescrFormDataType = {\r\n  name: string;\r\n  phoneNumber: string;\r\n  contactName: string;\r\n  location: string;\r\n};\r\n\r\nexport type SupplierFieldsNameType =\r\n  | \"name\"\r\n  | \"phoneNumber\"\r\n  | \"contactName\"\r\n  | \"location\"\r\n  | \"webSite\"\r\n  | \"eMail\"\r\n  | \"address\"\r\n  | \"description\";\r\nexport type CustomerFieldsNameType =\r\n  | \"name\"\r\n  | \"phoneNumber\"\r\n  | \"contactName\"\r\n  | \"location\";\r\n\r\nexport type ContractorInType = {\r\n  contractorId: number;\r\n};\r\n\r\nexport type ContractorOutType = {\r\n  contractorId: number;\r\n  contractorName: string;\r\n};\r\n\r\nexport type ContractorsQueryFilterType =\r\n  | \"customers\"\r\n  | \"supplier\"\r\n  | \"deleted\"\r\n  | null;\r\n\r\nexport type UserOutType = {\r\n  id: number;\r\n  phoneNumber: string;\r\n  pushToken: string;\r\n  secretToken: string;\r\n  isBlocked: boolean;\r\n};\r\nexport type UserInType = {\r\n  phoneNumber: string;\r\n  password?: string;\r\n  smsCode: string;\r\n  pushToken?: string;\r\n};\r\nexport type UserCheckType = {\r\n  phoneNumber: string;\r\n  secretToken: string;\r\n};\r\n","import React from \"react\";\r\nimport { baseURL } from \"../api/axios\";\r\nimport { AttachmentOutType } from \"../models/Attachments\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button, Image } from \"antd\";\r\n\r\ntype ImagesListPropsType = {\r\n  images: AttachmentOutType[];\r\n  editMode: boolean;\r\n  removeImage: (imageId: number) => void;\r\n};\r\n\r\nconst ImagesList: React.FC<ImagesListPropsType> = ({\r\n  images,\r\n  editMode,\r\n  removeImage,\r\n}) => {\r\n  return (\r\n    <div className=\"order__images-list\">\r\n      {images &&\r\n        images.map((img) => (\r\n          <div key={String(img.id)} className=\"order__image-wrapper\">\r\n            {editMode && (\r\n              <Button\r\n                type=\"default\"\r\n                shape=\"circle\"\r\n                icon={<DeleteOutlined />}\r\n                size=\"middle\"\r\n                className=\"order__image-delete\"\r\n                onClick={() => removeImage(img.id)}\r\n              />\r\n            )}\r\n            <Image\r\n              width={200}\r\n              src={`${baseURL}${img.attachmentLink}`}\r\n              className=\"order__image\"\r\n            />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ImagesList;\r\n","import { Input } from \"antd\";\r\nimport React, { ChangeEventHandler } from \"react\";\r\n\r\ntype AppSearchFieldPropsType = {\r\n  value: string;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n  placeholder: string;\r\n};\r\n\r\nconst AppSearchField: React.FC<AppSearchFieldPropsType> = ({\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter__input\">\r\n        <Input placeholder={placeholder} value={value} onChange={onChange} />\r\n      </div>\r\n      <div className=\"filter__actions\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSearchField;\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  ContractorsQueryFilterType,\r\n  ContractorTypesEnum,\r\n} from \"../../models/Contractors\";\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getContractorsState = (state: AppStateType) => state.contractors;\r\n\r\nconst getContractorsListState = (state: AppStateType) =>\r\n  state.contractors.contractors;\r\n\r\nexport const getCurrentContractorState = (state: AppStateType) =>\r\n  getContractorsState(state).currentContractor;\r\n\r\nexport const getFilteredContractorsListState = (\r\n  searchText: string,\r\n  filter: ContractorsQueryFilterType\r\n) =>\r\n  createSelector([getContractorsListState], (contractors) => {\r\n    return contractors\r\n      ?.filter((contractor) => {\r\n        if (filter === \"deleted\") {\r\n          return contractor.isDeleted;\r\n        } else if (filter === \"customers\") {\r\n          return contractor.contractorType === ContractorTypesEnum.CUSTOMER;\r\n        } else if (filter === \"supplier\") {\r\n          return contractor.contractorType === ContractorTypesEnum.SUPPLIER;\r\n        }\r\n        return true;\r\n      })\r\n      ?.filter((contractor) =>\r\n        contractor.name.toLowerCase().includes(searchText.toLowerCase())\r\n      );\r\n  });\r\n\r\nexport const getContractorsLoadingState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorsLoading;\r\nexport const getContractorsActionStatusState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorsActionStatus;\r\nexport const getContractorsErrorMessage = (state: AppStateType) =>\r\n  getContractorsState(state).errorMessage;\r\n\r\nexport const getContractorsCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", null)],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getCustomersCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"customers\")],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getSuppliersCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"supplier\")],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getDeletedContractorCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"deleted\")],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getContractorImagesState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorImages;\r\nexport const getContractorImageUploadingState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorImageUploading;\r\n","import { AttachmentInType, AttachmentOutType } from \"./Attachments\";\r\nimport { CategoryInType, CategoryType } from \"./Categories\";\r\nimport { ContractorInType, ContractorOutType } from \"./Contractors\";\r\n\r\nexport type OrderType = {\r\n  id: number;\r\n  creationDate: number;\r\n  actualDate: number;\r\n  comment?: string;\r\n  title: string;\r\n  description?: string;\r\n  totalSum: number;\r\n  orderStatus: OrderStatusEnum;\r\n  customerId: number;\r\n  customerPhoneNumber: string;\r\n  categories: CategoryType[];\r\n  contractors: ContractorOutType[];\r\n  attachments: AttachmentOutType[];\r\n};\r\n\r\nexport enum OrderStatusEnum {\r\n  NEW = \"NEW\",\r\n  ARCHIVED = \"ARCHIVED\",\r\n  DELETED = \"DELETED\",\r\n}\r\nexport type OrderFieldsNameType =\r\n  | \"title\"\r\n  | \"totalSum\"\r\n  | \"comment\"\r\n  | \"description\";\r\n\r\nexport type AddOrderFormData = {\r\n  title: string;\r\n  comment: string;\r\n  totalSum: number;\r\n  categories: CategoryInType[];\r\n  contractors: ContractorInType[] | [];\r\n  attachments: AttachmentInType[];\r\n  customerId: number;\r\n  description?: string;\r\n};\r\nexport type DescriptionOrderFormData = {\r\n  title: string;\r\n  description?: string;\r\n  comment: string;\r\n  totalSum: number;\r\n};\r\n\r\nexport type OrdersQueryFilterType = \"active\" | \"deleted\" | \"archived\" | null;\r\nexport type SortByOrdersFieldsType = \"title\" | \"totalSum\" | \"creationDate\";\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\r\nimport { Typography } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getContractorsCountState,\r\n  getCustomersCountState,\r\n  getDeletedContractorCountState,\r\n  getSuppliersCountState,\r\n} from \"../../../store/selectors/contractors\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst renderActiveShape = (props: any) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${payload.name} ${value} шт`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Процент ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst ContractorsStatistic = () => {\r\n  const [activeIndex, setActiveIndex] = React.useState<\r\n    number | number[] | undefined\r\n  >();\r\n\r\n  const onPieEnter = (_: any, index: number) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const allContractorsCount = useSelector(getContractorsCountState);\r\n  const customersCount = useSelector(getCustomersCountState);\r\n  const suppliersCount = useSelector(getSuppliersCountState);\r\n  const deletedContractorsCount = useSelector(getDeletedContractorCountState);\r\n\r\n  const data = React.useMemo(() => {\r\n    return [\r\n      { name: \"Заказчиков\", value: customersCount ? customersCount : 0 },\r\n      { name: \"Поставщиков\", value: suppliersCount ? suppliersCount : 0 },\r\n      {\r\n        name: \"Удаленные\",\r\n        value: deletedContractorsCount ? deletedContractorsCount : 0,\r\n      },\r\n    ];\r\n  }, [customersCount, deletedContractorsCount, suppliersCount]);\r\n\r\n  return (\r\n    <div className=\"statistic__pie\">\r\n      <Text className=\"statistic__pie-title\">Контрагенты</Text>\r\n      <Text className=\"statistic__pie-subtitle\">\r\n        Всего контрагентов: {allContractorsCount}\r\n      </Text>\r\n      {data && (\r\n        <ResponsiveContainer>\r\n          <PieChart width={400} height={400}>\r\n            <Pie\r\n              activeIndex={activeIndex}\r\n              activeShape={renderActiveShape}\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={60}\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n              onMouseEnter={onPieEnter}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractorsStatistic;\r\n","import { createSelector } from \"reselect\";\r\nimport { OrdersQueryFilterType, OrderStatusEnum } from \"../../models/Orders\";\r\n\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getOrdersState = (state: AppStateType) => state.orders;\r\nconst getOrdersListState = (state: AppStateType) => state.orders.orders;\r\n\r\nexport const getFilteredOrdersListState = (\r\n  searchText: string,\r\n  filter: OrdersQueryFilterType\r\n) =>\r\n  createSelector([getOrdersListState], (orders) => {\r\n    return orders\r\n      ?.filter((order) => {\r\n        if (filter === \"active\") {\r\n          return order.orderStatus === OrderStatusEnum.NEW;\r\n        } else if (filter === \"deleted\") {\r\n          return order.orderStatus === OrderStatusEnum.DELETED;\r\n        } else if (filter === \"archived\") {\r\n          return order.orderStatus === OrderStatusEnum.ARCHIVED;\r\n        }\r\n        return true;\r\n      })\r\n      ?.filter((order) =>\r\n        order.title.toLowerCase().includes(searchText.toLowerCase())\r\n      );\r\n  });\r\n\r\nexport const getOrdersLoadingState = (state: AppStateType) =>\r\n  getOrdersState(state).ordersLoading;\r\n\r\nexport const getOrdersErrorMessageState = (state: AppStateType) =>\r\n  getOrdersState(state).errorMessage;\r\n\r\nexport const getOrderActionStatusState = (state: AppStateType) =>\r\n  getOrdersState(state).orderActionStatus;\r\n\r\nexport const getCurrentOrderState = (state: AppStateType) =>\r\n  getOrdersState(state).currentOrder;\r\n\r\nexport const getAllOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", null)],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getActiveOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"active\")],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getDeletedOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"deleted\")],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getHistoryOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"archived\")],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getOrderImagesState = (state: AppStateType) =>\r\n  getOrdersState(state).orderImages;\r\n\r\nexport const getOrderImagesLoadingState = (state: AppStateType) =>\r\n  getOrdersState(state).ordersLoading;\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\r\nimport { Typography } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getActiveOrdersCountState,\r\n  getAllOrdersCountState,\r\n  getDeletedOrdersCountState,\r\n  getHistoryOrdersCountState,\r\n} from \"../../../store/selectors/orders\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst renderActiveShape = (props: any) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${payload.name} ${value} шт`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Процент ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst OrdersStatistic = () => {\r\n  const [activeIndex, setActiveIndex] = React.useState<\r\n    number | number[] | undefined\r\n  >();\r\n\r\n  const onPieEnter = (_: any, index: number) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const allOrdersCount = useSelector(getAllOrdersCountState);\r\n  const activeOrdersCount = useSelector(getActiveOrdersCountState);\r\n  const deletedOrdersCount = useSelector(getDeletedOrdersCountState);\r\n  const historyOrdersCount = useSelector(getHistoryOrdersCountState);\r\n\r\n  const data = React.useMemo(() => {\r\n    return [\r\n      { name: \"Активных\", value: activeOrdersCount ? activeOrdersCount : 0 },\r\n      { name: \"Архивные\", value: historyOrdersCount ? historyOrdersCount : 0 },\r\n      {\r\n        name: \"Удаленные\",\r\n        value: deletedOrdersCount ? deletedOrdersCount : 0,\r\n      },\r\n    ];\r\n  }, [activeOrdersCount, deletedOrdersCount, historyOrdersCount]);\r\n\r\n  return (\r\n    <div className=\"statistic__pie\">\r\n      <Text className=\"statistic__pie-title\">Заявки</Text>\r\n      <Text className=\"statistic__pie-subtitle\">\r\n        Всего заявок: {allOrdersCount}\r\n      </Text>\r\n      {data && (\r\n        <ResponsiveContainer>\r\n          <PieChart width={400} height={400}>\r\n            <Pie\r\n              activeIndex={activeIndex}\r\n              activeShape={renderActiveShape}\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={60}\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n              onMouseEnter={onPieEnter}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersStatistic;\r\n","import { axios } from \"../api/axios\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorType,\r\n} from \"../models/Contractors\";\r\n\r\nexport const contractorsApi = {\r\n  // contractors\r\n  getContractors: async (): Promise<ContractorType[]> => {\r\n    const { data } = await axios.get<ContractorType[]>(\"contractors\");\r\n    return data;\r\n  },\r\n  createContractor: async (\r\n    formData: AddContractorFormDataType\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.post<ContractorType[]>(\r\n      \"contractors\",\r\n      formData\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/${id}\r\n\r\n  updateContractor: async (\r\n    formData: AddContractorFormDataType,\r\n    id: number\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.patch(`/contractors/${id}`, formData);\r\n    return data;\r\n  },\r\n  deleteContractor: async (contractorId: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/contractors/${contractorId}`\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/${id}\r\n\r\n  getContractorById: async (\r\n    contractorId: number\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.get<ContractorType[]>(\r\n      `/contractors/${contractorId}`\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/{orderId}/attachments/{attachmentId}\r\n\r\n  removeContractorAttachment: async (\r\n    contractorId: number,\r\n    attachmentId: number\r\n  ): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/contractors/${contractorId}/attachments/${attachmentId}`\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import axios from \"axios\";\r\nimport { AttachmentOutType, AttachmentType } from \"../models/Attachments\";\r\n\r\nexport const attachmentsApi = {\r\n  addAttachment: async (\r\n    attachment: AttachmentType\r\n  ): Promise<AttachmentOutType[]> => {\r\n    const { data } = await axios.post<AttachmentOutType[]>(\r\n      \"attachments\",\r\n      attachment\r\n    );\r\n    return data;\r\n  },\r\n  removeAttachment: async (id: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(`attachments/${id}`);\r\n    return data;\r\n  },\r\n};\r\n","import { AttachmentOutType } from \"./../../models/Attachments\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { contractorsApi } from \"../../services/contractorsApi\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport { attachmentsApi } from \"../../services/attachmentsApi\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorType,\r\n} from \"../../models/Contractors\";\r\n\r\nexport const contractorActions = {\r\n  setCurrentContractor: (currentContractor: ContractorType | null) => {\r\n    return {\r\n      type: \"SET_CURRENT_CONTRACTOR\",\r\n      payload: { currentContractor },\r\n    } as const;\r\n  },\r\n  setContractorsLoading: (contractorsLoading: boolean) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_LOADING\",\r\n      payload: { contractorsLoading },\r\n    } as const;\r\n  },\r\n  setContractorsActionstatus: (contractorsActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_ACTION_STATUS\",\r\n      payload: { contractorsActionStatus },\r\n    } as const;\r\n  },\r\n  setContractorsErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_ERROR_MESSAGE\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setContractors: (contractors: ContractorType[]) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS\",\r\n      payload: { contractors },\r\n    } as const;\r\n  },\r\n  removeContractor: (contractorId: number) => {\r\n    return {\r\n      type: \"REMOVE_CONTRACTOR\",\r\n      payload: { contractorId },\r\n    } as const;\r\n  },\r\n  setContractorImageUploading: (contractorImageUploading: boolean) => {\r\n    return {\r\n      type: \"SET_CONTRACTOR_IMAGE_UPLOADING\",\r\n      payload: { contractorImageUploading },\r\n    } as const;\r\n  },\r\n  setContractorImages: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"SET_CONTRACTOR_IMAGES\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  addContractorImage: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"ADD_CONTRACTOR_IMAGE\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  removeContractorImage: (imageId: number) => {\r\n    return {\r\n      type: \"REMOVE_CONTRACTOR_IMAGE\",\r\n      payload: { imageId },\r\n    } as const;\r\n  },\r\n  clearContractorImages: () => {\r\n    return {\r\n      type: \"CLEAR_CONTRACTOR_IMAGES\",\r\n    } as const;\r\n  },\r\n};\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(\r\n    contractorActions.setContractorsActionstatus(ActionStatusEnum.ERROR)\r\n  );\r\n  dispatch(contractorActions.setContractorsErrorMessage(text));\r\n};\r\n\r\nexport const createContractorProfile =\r\n  (formData: AddContractorFormDataType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractorsList = await contractorsApi.createContractor(formData);\r\n      if (contractorsList.length > 0) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.setCurrentContractor(contractorsList[0]));\r\n      } else {\r\n        showError(\"Не удалось создать профиль, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"createContractorProfile ERROR ===>\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getContractors = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(contractorActions.setContractorsLoading(true));\r\n    const contractors = await contractorsApi.getContractors();\r\n    dispatch(contractorActions.setContractors(contractors));\r\n  } catch (error) {\r\n    console.log(\"getContracors ===> \", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(contractorActions.setContractorsLoading(false));\r\n  }\r\n};\r\n\r\nexport const deleteContractor =\r\n  (contractorId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const response = await contractorsApi.deleteContractor(contractorId);\r\n      if (response) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.removeContractor(contractorId));\r\n        dispatch(contractorActions.setCurrentContractor(null));\r\n      } else {\r\n        showError(\"Не удалось удалить заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteContractor ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const updateContractor =\r\n  (contractor: AddContractorFormDataType, id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractors = await contractorsApi.updateContractor(contractor, id);\r\n      if (contractors.length > 0) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.clearContractorImages());\r\n        dispatch(contractorActions.setCurrentContractor(contractors[0]));\r\n      } else {\r\n        showError(\r\n          \"Не удалось сохранить изменения, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getContracors ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getContractorById =\r\n  (contractorId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractors = await contractorsApi.getContractorById(contractorId);\r\n      if (contractors.length === 0) {\r\n        showError(\"Контрагент не найден\", dispatch);\r\n      } else {\r\n        dispatch(contractorActions.setCurrentContractor(contractors[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullContractorInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const addContractorImage =\r\n  (image: AttachmentType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n      const imageOut = await attachmentsApi.addAttachment(image);\r\n\r\n      if (imageOut.length > 0) {\r\n        dispatch(contractorActions.addContractorImage(imageOut));\r\n      } else {\r\n        showError(\r\n          \"Не удалось загрузить вложение, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeContractorImage =\r\n  (contractorId: number, imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n\r\n      const response = await contractorsApi.removeContractorAttachment(\r\n        contractorId,\r\n        imageId\r\n      );\r\n\r\n      if (response) {\r\n        dispatch(contractorActions.removeContractorImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"removeContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeNewContractorImage =\r\n  (imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n\r\n      const response = await attachmentsApi.removeAttachment(imageId);\r\n\r\n      if (response) {\r\n        dispatch(contractorActions.removeContractorImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"removeNewContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\nexport type ContractorsActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof contractorActions>\r\n>;\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  ContractorsActionTypes\r\n>;\r\n","import { axios } from \"../api/axios\";\r\nimport { AddOrderFormData, OrderType } from \"../models/Orders\";\r\n\r\nexport const ordersApi = {\r\n  // orders\r\n\r\n  getOrders: async (): Promise<OrderType[]> => {\r\n    const { data } = await axios.get<OrderType[]>(\"orders\");\r\n    return data;\r\n  },\r\n  createOrder: async (formData: AddOrderFormData): Promise<OrderType[]> => {\r\n    const { data } = await axios.post<OrderType[]>(\"orders\", formData);\r\n    return data;\r\n  },\r\n\r\n  // orders/${id}\r\n\r\n  getOrderById: async (orderId: number): Promise<OrderType[]> => {\r\n    const { data } = await axios.get<OrderType[]>(`/orders/${orderId}`);\r\n    return data;\r\n  },\r\n  deleteOrder: async (orderId: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(`/orders/${orderId}`);\r\n    return data;\r\n  },\r\n  updateOrder: async (\r\n    order: AddOrderFormData,\r\n    id: number\r\n  ): Promise<OrderType[]> => {\r\n    const { data } = await axios.patch<OrderType[]>(`/orders/${id}`, order);\r\n    return data;\r\n  },\r\n\r\n  // orders/{orderId}/attachments/{attachmentId}\r\n\r\n  removeOrderAttachment: async (\r\n    orderId: number,\r\n    attachmentId: number\r\n  ): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/orders/${orderId}/attachments/${attachmentId}`\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { AppStateType } from \"../store\";\r\nimport { ordersApi } from \"../../services/ordersApi\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AttachmentOutType, AttachmentType } from \"../../models/Attachments\";\r\nimport { attachmentsApi } from \"../../services/attachmentsApi\";\r\nimport { AddOrderFormData, OrderType } from \"../../models/Orders\";\r\n\r\n// TODO: добавление/удаление вложений при создании и редактировании\r\n\r\nexport const ordersActions = {\r\n  setOrders: (orders: OrderType[]) => {\r\n    return {\r\n      type: \"SET_ORDERS\",\r\n      payload: { orders },\r\n    } as const;\r\n  },\r\n  setOrdersLoading: (ordersLoading: boolean) => {\r\n    return {\r\n      type: \"SET_ORDERS_LOADING\",\r\n      payload: { ordersLoading },\r\n    } as const;\r\n  },\r\n  setOrdersErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_ORDERS_ERROR\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setOrderActionStatus: (orderActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_ORDER_ACTION_STATUS\",\r\n      payload: { orderActionStatus },\r\n    } as const;\r\n  },\r\n  setCurrentOrder: (currentOrder: OrderType | null) => {\r\n    return {\r\n      type: \"SET_CURRENT_ORDER\",\r\n      payload: { currentOrder },\r\n    } as const;\r\n  },\r\n  replaceOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"REPLACE_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  removeOrder: (id: number) => {\r\n    return {\r\n      type: \"REMOVE_ORDER\",\r\n      payload: { id },\r\n    } as const;\r\n  },\r\n  addNewOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"ADD_NEW_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  updateOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"UPDATE_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  setOrderImageUploading: (orderImageUploading: boolean) => {\r\n    return {\r\n      type: \"SET_ORDER_IMAGE_UPLOADING\",\r\n      payload: { orderImageUploading },\r\n    } as const;\r\n  },\r\n  addOrderImage: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"ADD_ORDER_IMAGE\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  setOrderImages: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"SET_ORDER_IMAGES\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  removeOrderImage: (imageId: number) => {\r\n    return {\r\n      type: \"REMOVE_ORDER_IMAGE\",\r\n      payload: { imageId },\r\n    } as const;\r\n  },\r\n  clearOrderImages: () => {\r\n    return {\r\n      type: \"CLEAR_ORDER_IMAGES\",\r\n    } as const;\r\n  },\r\n};\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.ERROR));\r\n  dispatch(ordersActions.setOrdersErrorMessage(text));\r\n};\r\n\r\nexport const getOrders = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(ordersActions.setOrdersLoading(true));\r\n    const orders = await ordersApi.getOrders();\r\n    dispatch(ordersActions.setOrders(orders));\r\n  } catch (error) {\r\n    console.log(\"getOrders ===> \", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(ordersActions.setOrdersLoading(false));\r\n  }\r\n};\r\n\r\nexport const createOrder =\r\n  (formData: AddOrderFormData): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      const orders = await ordersApi.createOrder(formData);\r\n      if (orders.length > 0) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n        dispatch(ordersActions.addNewOrder(orders[0]));\r\n      } else {\r\n        showError(\"Не удалось создать заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"createOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    }\r\n  };\r\n\r\nexport const updateOrder =\r\n  (order: AddOrderFormData, id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const orders = await ordersApi.updateOrder(order, id);\r\n      if (orders.length > 0) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.clearOrderImages());\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n      } else {\r\n        showError(\r\n          \"Не удалось сохранить изменения, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"updateOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const deleteOrder =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const response = await ordersApi.deleteOrder(id);\r\n      if (response) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.removeOrder(id));\r\n        dispatch(ordersActions.setCurrentOrder(null));\r\n      } else {\r\n        showError(\"Не удалось удалить заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getOrderById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const orders = await ordersApi.getOrderById(id);\r\n      if (orders.length === 0) {\r\n        showError(\"Заявка не найдена\", dispatch);\r\n      } else {\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const addOrderImage =\r\n  (image: AttachmentType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n      const imageOut = await attachmentsApi.addAttachment(image);\r\n\r\n      if (imageOut.length > 0) {\r\n        dispatch(ordersActions.addOrderImage(imageOut));\r\n      } else {\r\n        showError(\r\n          \"Не удалось загрузить вложение, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addOrderImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeOrderImage =\r\n  (orderId: number, imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n\r\n      const response = await ordersApi.removeOrderAttachment(orderId, imageId);\r\n\r\n      if (response) {\r\n        dispatch(ordersActions.removeOrderImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeNewOrderImage =\r\n  (imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n\r\n      const response = await attachmentsApi.removeAttachment(imageId);\r\n\r\n      if (response) {\r\n        dispatch(ordersActions.removeOrderImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport type OrdersActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof ordersActions>\r\n>;\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  OrdersActionTypes\r\n>;\r\n","import React from \"react\";\r\nimport { Card, Layout, Typography } from \"antd\";\r\nimport { ContractorsStatistic, OrdersStatistic } from \"./components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppPreloader } from \"../../components\";\r\nimport { getContractorsLoadingState } from \"../../store/selectors/contractors\";\r\nimport { getContractors } from \"../../store/actions/contractors\";\r\nimport { getOrders } from \"../../store/actions/orders\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HomePage = () => {\r\n  const contractorsLoading = useSelector(getContractorsLoadingState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractors());\r\n    dispatch(getOrders());\r\n  }, [dispatch]);\r\n\r\n  if (contractorsLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <Card>\r\n        <Title className=\"title\">Статистика</Title>\r\n        <div className=\"statistic\">\r\n          <ContractorsStatistic />\r\n          <OrdersStatistic />\r\n        </div>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nmoment.locale(\"ru\");\r\n\r\nexport const formatDate = (date: number) => {\r\n  return moment(date).format(\"DD.MM.YYYY\");\r\n};\r\n\r\nexport const formatDateWithTime = (date: number) => {\r\n  return moment(date).format(\"DD.MM.YYYY hh:mm\");\r\n};\r\n\r\nexport const truncateString = (str: string, n: number) => {\r\n  return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n};\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Layout, BackTop, Table, Tag, Button } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getOrderActionStatusState,\r\n  getOrdersErrorMessageState,\r\n  getFilteredOrdersListState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  deleteOrder,\r\n  getOrders,\r\n  ordersActions,\r\n} from \"../../store/actions/orders\";\r\nimport { AppAlert, AppPreloader, AppSearchField } from \"../../components\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  OrdersQueryFilterType,\r\n  OrderStatusEnum,\r\n  OrderType,\r\n} from \"../../models/Orders\";\r\nimport { formatDate } from \"../../utils/formatter\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst columns: ColumnsType<OrderType> = [\r\n  {\r\n    title: \"Статус\",\r\n    dataIndex: \"orderStatus\",\r\n    render: (status: OrderStatusEnum) => {\r\n      const colors = {\r\n        [OrderStatusEnum.NEW]: \"green\",\r\n        [OrderStatusEnum.ARCHIVED]: \"geekblue\",\r\n        [OrderStatusEnum.DELETED]: \"volcano\",\r\n      };\r\n\r\n      return (\r\n        <Tag color={colors[status]} key={status}>\r\n          {status}\r\n        </Tag>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Заголовок\",\r\n    dataIndex: \"title\",\r\n    sorter: {\r\n      compare: (a, b) => a.title.localeCompare(b.title),\r\n    },\r\n  },\r\n  {\r\n    title: \"Дата создания\",\r\n    dataIndex: \"creationDate\",\r\n    sorter: {\r\n      compare: (a, b) => a.creationDate - b.creationDate,\r\n    },\r\n    render: (data: number) => formatDate(data),\r\n    defaultSortOrder: \"descend\",\r\n  },\r\n  {\r\n    title: \"Дата закрытия\",\r\n    dataIndex: \"actualDate\",\r\n    sorter: {\r\n      compare: (a, b) => a.actualDate - b.actualDate,\r\n    },\r\n    render: (data: number) => formatDate(data),\r\n  },\r\n  {\r\n    title: \"Категории\",\r\n    dataIndex: \"categories\",\r\n    render: (categories: CategoryType[]) => {\r\n      return (\r\n        <>\r\n          {categories\r\n            .filter((category) => category.parentId === 0)\r\n            .map((category) => (\r\n              <Tag color=\"blue\" key={category.id} className=\"order__tag\">\r\n                {category.name}\r\n              </Tag>\r\n            ))}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    title: \"Цена (тг)\",\r\n    dataIndex: \"totalSum\",\r\n    sorter: {\r\n      compare: (a, b) => a.totalSum - b.totalSum,\r\n    },\r\n  },\r\n  {\r\n    title: \"Сроки\",\r\n    dataIndex: \"comment\",\r\n  },\r\n];\r\n\r\nconst OrdersPage = () => {\r\n  const [searchText, setSearchText] = React.useState<string>(\"\");\r\n\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const query = useQuery();\r\n\r\n  const orders = useSelector(\r\n    getFilteredOrdersListState(\r\n      searchText,\r\n      query.get(\"filter\") as OrdersQueryFilterType\r\n    )\r\n  );\r\n  const ordersLoading = useSelector(getOrdersLoadingState);\r\n  const ordersError = useSelector(getOrdersErrorMessageState);\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setOrdersErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  // const fetchData = React.useCallback(() => {\r\n  //   // для кнопки обновить\r\n  //   dispatch(getOrders());\r\n  // }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrders());\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [dispatch, clearState]);\r\n\r\n  const handleDeleteOrder = (id: number) => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить заявку?\");\r\n    if (answer) {\r\n      dispatch(deleteOrder(id));\r\n    }\r\n  };\r\n\r\n  const handleViewOrder = (order: OrderType) => {\r\n    history.push(`orders/${order.id}`);\r\n  };\r\n\r\n  const handleChangeSearchText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.currentTarget.value);\r\n  };\r\n\r\n  if (ordersLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={ordersError}\r\n        successMessage=\"Заявка успешно удалена\"\r\n        status={orderActionStatus}\r\n      />\r\n      <AppSearchField\r\n        value={searchText}\r\n        onChange={handleChangeSearchText}\r\n        placeholder=\"Найти по заголовку\"\r\n      />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={orders}\r\n        rowKey={\"id\"}\r\n        expandable={{\r\n          expandedRowRender: (order) => (\r\n            <div className=\"order__expanded\">\r\n              <p className=\"order__tab-descr\">{order.description}</p>\r\n              <div className=\"order__expanded-action\">\r\n                <Button\r\n                  className=\"order__expanded-btn\"\r\n                  onClick={() => handleViewOrder(order)}\r\n                >\r\n                  Посмотреть\r\n                </Button>\r\n                <Button\r\n                  className=\"order__expanded-btn\"\r\n                  onClick={() => handleDeleteOrder(order.id)}\r\n                  danger\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n      <BackTop />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","import * as yup from \"yup\";\r\n\r\nexport const orderSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  totalSum: yup\r\n    .number()\r\n    .typeError(\"Введите корректную цену\")\r\n    .required(\"Обязательное поле\"),\r\n  comment: yup.string().required(\"Обязательное поле\"),\r\n  description: yup\r\n    .string()\r\n    .typeError(\"Значением может быть только текст\")\r\n    .max(5000, \"Максимальная длина 5000 символов\"),\r\n});\r\n\r\nexport const supplierSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  location: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  phoneNumber: yup //TODO:  сделать валидацию\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n  description: yup\r\n    .string()\r\n    .typeError(\"Значением может быть только текст\")\r\n    .max(5000, \"Максимальная длина 5000 символов\"),\r\n  address: yup\r\n    .string()\r\n    .max(250, \"Максимальная длина 250 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  contactName: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  webSite: yup.string().max(50, \"Максимальная длина 50 символов\"),\r\n  // .url(\"Введите корректный URL\"), //TODO: нужна проверка?\r\n  eMail: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .email(\"Введите корректный e-mail\"),\r\n});\r\n\r\nexport const otpSchema = yup.object().shape({\r\n  phoneNumber: yup\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n  otp: yup\r\n    .string()\r\n    .required(\"Обязательное поле\")\r\n    .matches(/^[0-9]+$/, \"Введите корректный СМС-код\")\r\n    .min(4, \"Введите корректный СМС-код\")\r\n    .max(4, \"Введите корректный СМС-код\"),\r\n});\r\n\r\nexport const customerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  location: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  contactName: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  phoneNumber: yup\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n});\r\n\r\nexport const categorySchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  parentId: yup\r\n    .number()\r\n    .typeError(\"Введите корректный идентификатор\")\r\n    .required(\"Обязательное поле\"),\r\n});\r\n","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getCategoriesState = (state: AppStateType) => state.categories;\r\n\r\nconst getAllCategoriesState = (state: AppStateType) =>\r\n  getCategoriesState(state).categories;\r\n\r\nexport const getCategoriesErrorMessageState = (state: AppStateType) =>\r\n  getCategoriesState(state).errorMessage;\r\n\r\nexport const getCategoriesLoadingState = (state: AppStateType) =>\r\n  getCategoriesState(state).isLoadingCategories;\r\n\r\nexport const getMainCategoriesState = createSelector(\r\n  [getAllCategoriesState],\r\n  (categories) => {\r\n    return categories?.filter(\r\n      (category) => category.parentId === 0 && !category.isDeleted\r\n    );\r\n  }\r\n);\r\n\r\nexport const getSubCategoriesState = createSelector(\r\n  [getAllCategoriesState],\r\n  (categories) => {\r\n    return categories?.filter(\r\n      (category) => category.parentId !== 0 && !category.isDeleted\r\n    );\r\n  }\r\n);\r\n\r\nexport const getDeletedCategoriesState = (state: AppStateType) =>\r\n  getAllCategoriesState(state)?.filter((category) => category.isDeleted);\r\n\r\nexport const getCurrentCategoryState = (state: AppStateType) =>\r\n  getCategoriesState(state).currentCategory;\r\n\r\nexport const getCategoryInProcessEditState = (state: AppStateType) =>\r\n  getCategoriesState(state).categoryInProcessEdit;\r\n\r\nexport const getCategoriesActionStatusState = (state: AppStateType) =>\r\n  getCategoriesState(state).categoriesActionStatus;\r\n\r\nexport const getCategoriesTreeDataState = createSelector(\r\n  [getMainCategoriesState, getSubCategoriesState],\r\n  (mainCategories, subCategories) => {\r\n    if (mainCategories && subCategories) {\r\n      const tree = mainCategories.map((mainCat) => {\r\n        const subCats = subCategories\r\n          .filter((subCat) => subCat.parentId === mainCat.id)\r\n          .map((subCat) => {\r\n            return {\r\n              title: subCat.name,\r\n              value: subCat.id,\r\n              key: subCat.id,\r\n            };\r\n          });\r\n        return {\r\n          title: mainCat.name,\r\n          value: mainCat.id,\r\n          key: mainCat.id,\r\n          children: subCats,\r\n        };\r\n      });\r\n      return tree;\r\n    }\r\n\r\n    return [];\r\n  }\r\n);\r\n","import { axios } from \"../api/axios\";\r\nimport { AddCategoryFormData, CategoryType } from \"../models/Categories\";\r\n\r\nexport const categoriesApi = {\r\n  //categories\r\n  getAllCategories: async (): Promise<CategoryType[]> => {\r\n    const { data } = await axios.get<CategoryType[]>(\"categories\");\r\n    return data;\r\n  },\r\n  deleteAllCategories: async (): Promise<Boolean> => {\r\n    const { data } = await axios.delete<Boolean>(\"categories\");\r\n    return data;\r\n  },\r\n  addCategory: async (\r\n    formData: AddCategoryFormData\r\n  ): Promise<CategoryType[]> => {\r\n    const { data } = await axios.post<CategoryType[]>(\"categories\", formData);\r\n    return data;\r\n  },\r\n\r\n  //categories/${id}\r\n\r\n  getCategoryById: async (id: number): Promise<CategoryType[]> => {\r\n    const { data } = await axios.get<CategoryType[]>(`categories/${id}`);\r\n    return data;\r\n  },\r\n  deleteCategoryById: async (id: number): Promise<Boolean> => {\r\n    const { data } = await axios.delete<Boolean>(`categories/${id}`);\r\n    return data;\r\n  },\r\n  updateCategoryById: async (category: CategoryType): Promise<Boolean> => {\r\n    const { data } = await axios.patch<Boolean>(\r\n      `categories/${category.id}`,\r\n      category\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { AppStateType } from \"../store\";\r\nimport { categoriesApi } from \"../../services/categoriesApi\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AddCategoryFormData, CategoryType } from \"../../models/Categories\";\r\n\r\nexport const categoriesActions = {\r\n  setAllCategories: (categories: CategoryType[]) => {\r\n    return {\r\n      type: \"SET_CATEGORIES\",\r\n      payload: { categories },\r\n    } as const;\r\n  },\r\n  setIsLoadingCategories: (isLoadingCategories: boolean) => {\r\n    return {\r\n      type: \"SET_IS_LOADING_CATEGORIES\",\r\n      payload: {\r\n        isLoadingCategories,\r\n      },\r\n    } as const;\r\n  },\r\n  setCategoriesErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_CATEGORIES_ERROR_MESSAGE\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setCategoriesActionStatus: (categoriesActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_CATEGORIES_ACTION_STATUS\",\r\n      payload: { categoriesActionStatus },\r\n    } as const;\r\n  },\r\n  setCurrentCategory: (currentCategory: CategoryType) => {\r\n    return {\r\n      type: \"SET_CURRENT_CATEGORY\",\r\n      payload: { currentCategory },\r\n    } as const;\r\n  },\r\n  setCategoryInEditProcess: (categoryInProcessEdit: number | null) => {\r\n    return {\r\n      type: \"SET_CATEGORY_IN_EDIT_PROCESS\",\r\n      payload: { categoryInProcessEdit },\r\n    } as const;\r\n  },\r\n  replaceCategory: (category: CategoryType) => {\r\n    return {\r\n      type: \"REPLACE_CATEGORY\",\r\n      payload: { category },\r\n    } as const;\r\n  },\r\n  removeCategory: (id: number) => {\r\n    return {\r\n      type: \"REMOVE_CATEGORY\",\r\n      payload: { id },\r\n    } as const;\r\n  },\r\n  clearCategories: () => {\r\n    return {\r\n      type: \"CLEAR_CATEGORIES\",\r\n    } as const;\r\n  },\r\n  addNewCategory: (category: CategoryType) => {\r\n    return {\r\n      type: \"ADD_NEW_CATEGORY\",\r\n      payload: { category },\r\n    } as const;\r\n  },\r\n};\r\n\r\nexport type CategoriesActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof categoriesActions>\r\n>;\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(categoriesActions.setCategoriesActionStatus(ActionStatusEnum.ERROR));\r\n  dispatch(categoriesActions.setCategoriesErrorMessage(text));\r\n};\r\n\r\n//TODO: как то проверять пришли ли данные без ошибки\r\n\r\nexport const getAllCategories = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(categoriesActions.setIsLoadingCategories(true));\r\n    const categories = await categoriesApi.getAllCategories();\r\n    dispatch(categoriesActions.setAllCategories(categories));\r\n  } catch (error) {\r\n    console.log(\"getAllCategories...\", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(categoriesActions.setIsLoadingCategories(false));\r\n  }\r\n};\r\n\r\n// TODO: опасный метод\r\nexport const deleteAllCategories = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(categoriesActions.setIsLoadingCategories(true));\r\n    const response = await categoriesApi.deleteAllCategories();\r\n    if (response) {\r\n      dispatch(\r\n        categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n      );\r\n      dispatch(categoriesActions.clearCategories());\r\n    } else {\r\n      showError(\r\n        \"Не удалось удалить все категории, попробуйте еще раз\",\r\n        dispatch\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.log(\"deleteAllCategories...\", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(categoriesActions.setIsLoadingCategories(false));\r\n  }\r\n};\r\n\r\n// TODO:\r\n// тут будет приходить не CategoryType а только name и parentID\r\nexport const createCategory =\r\n  (formData: AddCategoryFormData): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const createdCategory = await categoriesApi.addCategory({\r\n        name: formData.name,\r\n        parentId: Number(formData.parentId),\r\n        isDeleted: false,\r\n      });\r\n\r\n      if (createdCategory.length > 0) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.addNewCategory(createdCategory[0]));\r\n      } else {\r\n        showError(\r\n          \"Не получилось добавить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addCategory...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n//TODO: Нужно????\r\nexport const getCategoryById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const categoryList = await categoriesApi.getCategoryById(id);\r\n\r\n      if (categoryList.length === 0) {\r\n        showError(\"Категория не найдена\", dispatch);\r\n      } else {\r\n        dispatch(categoriesActions.setCurrentCategory(categoryList[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n\r\nexport const deleteCategoryById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const response = await categoriesApi.deleteCategoryById(id);\r\n      if (response) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.removeCategory(id));\r\n      } else {\r\n        showError(\r\n          \"Не получилось удалить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n\r\nexport const updateCategoryById =\r\n  (category: CategoryType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setCategoryInEditProcess(category.id));\r\n      const response = await categoriesApi.updateCategoryById(category);\r\n      if (response) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.replaceCategory(category));\r\n      } else {\r\n        showError(\r\n          \"Не получилось обновить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"updateCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setCategoryInEditProcess(null));\r\n    }\r\n  };\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  CategoriesActionTypes\r\n>;\r\n","const getBase64 = (file: File): Promise<string | null> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result as string);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport default getBase64;\r\n","import { Form, Input, InputNumber, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, Controller, FieldError } from \"react-hook-form\";\r\nimport { DescriptionOrderFormData } from \"../../../models/Orders\";\r\n\r\nconst { Text } = Typography;\r\n\r\ntype OrderCreateFormPropsType = {\r\n  control: Control<DescriptionOrderFormData, object>;\r\n  errors: {\r\n    title?: FieldError;\r\n    description?: FieldError;\r\n    comment?: FieldError;\r\n    totalSum?: FieldError;\r\n  };\r\n};\r\n\r\nconst OrderCreateForm: React.FC<OrderCreateFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={errors.title ? \"error\" : \"success\"}\r\n            help={errors.title?.message}\r\n            className=\"input order__title-input\"\r\n            required\r\n          >\r\n            <Text className=\"subtitle\">Заголовок</Text>\r\n            <Input\r\n              placeholder=\"Заголовок заявки\"\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n        )}\r\n        name=\"title\"\r\n        defaultValue=\"\"\r\n      />\r\n      <div className=\"order__numeric-fields\">\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.comment ? \"error\" : \"success\"}\r\n              help={errors.comment?.message}\r\n              className=\"order__comment-input input\"\r\n              required\r\n            >\r\n              <Text className=\"subtitle\">Сроки</Text>\r\n              <Input placeholder=\"Сроки\" value={value} onChange={onChange} />\r\n            </Form.Item>\r\n          )}\r\n          name=\"comment\"\r\n          defaultValue=\"\"\r\n        />\r\n\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.totalSum ? \"error\" : \"success\"}\r\n              help={errors.totalSum?.message}\r\n              className=\"input order__totalsum-input\"\r\n              required\r\n            >\r\n              <div className=\"order__totalsum-field\">\r\n                <Text className=\"subtitle\">Цена (тг)</Text>\r\n                <InputNumber value={value} onChange={onChange} />\r\n              </div>\r\n            </Form.Item>\r\n          )}\r\n          name=\"totalSum\"\r\n          defaultValue={0}\r\n        />\r\n      </div>\r\n\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: false,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={errors.description ? \"error\" : \"success\"}\r\n            help={errors.description?.message}\r\n            className=\"input order__descr-input\"\r\n            required\r\n          >\r\n            <Text className=\"subtitle\">Описание</Text>\r\n            <Input.TextArea\r\n              placeholder=\"Описание\"\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n        )}\r\n        name=\"description\"\r\n        defaultValue=\"\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderCreateForm);\r\n","import React from \"react\";\r\nimport { Button, Card, Layout, Typography, TreeSelect, message } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  AppAlert,\r\n  AppPreloader,\r\n  ImagesList,\r\n  UploadFileForm,\r\n} from \"../../components\";\r\nimport {\r\n  addOrderImage,\r\n  createOrder,\r\n  ordersActions,\r\n  removeNewOrderImage,\r\n} from \"../../store/actions/orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  getCurrentOrderState,\r\n  getOrderActionStatusState,\r\n  getOrderImagesLoadingState,\r\n  getOrderImagesState,\r\n  getOrdersErrorMessageState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport { orderSchema } from \"../../utils/validatorsSchemes\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesTreeDataState,\r\n} from \"../../store/selectors/categories\";\r\nimport { categoriesActions } from \"../../store/actions/categories\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport { OrderCreateForm } from \"./components\";\r\nimport {\r\n  AddOrderFormData,\r\n  DescriptionOrderFormData,\r\n} from \"../../models/Orders\";\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst OrderCreatePage = () => {\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DescriptionOrderFormData>({\r\n    resolver: yupResolver(orderSchema),\r\n  });\r\n\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n  const orderError = useSelector(getOrdersErrorMessageState);\r\n  const orderLoadingState = useSelector(getOrdersLoadingState);\r\n  const currentOrder = useSelector(getCurrentOrderState);\r\n  const orderImages = useSelector(getOrderImagesState);\r\n  const orderUploading = useSelector(getOrderImagesLoadingState);\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearOrderState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setOrdersErrorMessage(null));\r\n    dispatch(ordersActions.clearOrderImages());\r\n  }, [dispatch]);\r\n\r\n  const clearCategoriesState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearOrderState();\r\n      clearCategoriesState();\r\n    };\r\n  }, [clearCategoriesState, clearOrderState]);\r\n\r\n  React.useEffect(() => {\r\n    if (currentOrder && orderActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(`/orders/${currentOrder.id}`);\r\n    }\r\n  }, [currentOrder, history, orderActionStatus]);\r\n\r\n  const handleSelectCategories = (value: number[]) => {\r\n    setSelectedCategories(value);\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    dispatch(removeNewOrderImage(imageId));\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addOrderImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    const categories = selectedCategories.map((categoryId) => ({\r\n      categoryId,\r\n    }));\r\n\r\n    const newOrder: AddOrderFormData = {\r\n      title: formData.title,\r\n      description: formData.description,\r\n      comment: formData.comment,\r\n      totalSum: formData.totalSum,\r\n      contractors: [],\r\n      attachments: orderImages.map((image) => ({\r\n        attachmentId: image.id,\r\n      })),\r\n      customerId: 1,\r\n      categories,\r\n    };\r\n\r\n    dispatch(createOrder(newOrder));\r\n    reset();\r\n  });\r\n\r\n  if (orderLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearOrderState}\r\n        errorMessage={orderError}\r\n        successMessage={\"Заявка сохранена\"}\r\n        status={orderActionStatus}\r\n      />\r\n      <AppAlert\r\n        onClose={clearCategoriesState}\r\n        errorMessage={categoriesError}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание заявки\r\n        </Title>\r\n        <OrderCreateForm control={control} errors={errors} />\r\n        <TreeSelect\r\n          treeData={categoriesTree}\r\n          value={selectedCategories}\r\n          onChange={handleSelectCategories}\r\n          treeCheckable={true}\r\n          showCheckedStrategy={SHOW_ALL}\r\n          placeholder={\"Выберите категории заявки\"}\r\n          style={{ width: \"100%\", marginBottom: 10 }}\r\n          maxTagCount={5}\r\n        />\r\n        <ImagesList\r\n          removeImage={handleRemoveImage}\r\n          images={orderImages}\r\n          editMode={true}\r\n        />\r\n        <UploadFileForm\r\n          onChange={handleUploadImage}\r\n          isUploading={orderUploading}\r\n        />\r\n        <Button\r\n          className=\"order__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={\r\n            Object.keys(errors).length > 0 || selectedCategories.length === 0\r\n          }\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrderCreatePage;\r\n","import { Form, Input, InputNumber, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  DescriptionOrderFormData,\r\n  OrderFieldsNameType,\r\n} from \"../../../models/Orders\";\r\nimport { EditableFieldPropsType } from \"../../../models/types\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst OrderEditableField: React.FC<\r\n  EditableFieldPropsType<DescriptionOrderFormData, OrderFieldsNameType>\r\n> = ({\r\n  placeholder,\r\n  editMode,\r\n  fieldName,\r\n  control,\r\n  error,\r\n  defaultValue,\r\n  isTextArea = false,\r\n  isNumberInput = false,\r\n}) => {\r\n  if (editMode) {\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={error ? \"error\" : \"success\"}\r\n            help={error?.message}\r\n            className=\"input\"\r\n          >\r\n            {isTextArea ? (\r\n              <Input.TextArea\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : isNumberInput ? (\r\n              <InputNumber\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        )}\r\n        name={fieldName}\r\n        defaultValue={defaultValue}\r\n      />\r\n    );\r\n  }\r\n  return <Text>{defaultValue}</Text>;\r\n};\r\n\r\nexport default OrderEditableField;\r\n","import { Card, Divider, TreeSelect } from \"antd\";\r\nimport { DataNode } from \"antd/lib/tree\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\n\r\nimport { ImagesList, UploadFileForm } from \"../../../components\";\r\nimport { AttachmentOutType } from \"../../../models/Attachments\";\r\nimport { DescriptionOrderFormData } from \"../../../models/Orders\";\r\nimport OrderEditableField from \"./OrderEditableField\";\r\n\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\ntype OrderInfoBodyPropsType = {\r\n  handleRemoveImage: (imageId: number) => void;\r\n  handleSelectCategories: (value: number[]) => void;\r\n  handleAddImage: (e: Event) => void;\r\n  selectedCategories: number[];\r\n  editMode: boolean;\r\n  imageUploading: boolean;\r\n  images: AttachmentOutType[];\r\n  control: Control<DescriptionOrderFormData, object>;\r\n  categoriesTree?: DataNode[];\r\n  defaultValue?: string;\r\n  error?: FieldError;\r\n};\r\n\r\nconst OrderInfoBody: React.FC<OrderInfoBodyPropsType> = ({\r\n  categoriesTree,\r\n  selectedCategories,\r\n  handleSelectCategories,\r\n  handleRemoveImage,\r\n  handleAddImage,\r\n  editMode,\r\n  defaultValue,\r\n  error,\r\n  images,\r\n  control,\r\n  imageUploading,\r\n}) => {\r\n  return (\r\n    <div className=\"order__body\">\r\n      <Card>\r\n        <Divider>Описание</Divider>\r\n        <OrderEditableField\r\n          defaultValue={defaultValue}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={error}\r\n          fieldName=\"description\"\r\n          placeholder=\"Описание\"\r\n          isTextArea\r\n        />\r\n        <Divider>Категории</Divider>\r\n        {categoriesTree && (\r\n          <TreeSelect\r\n            treeData={categoriesTree}\r\n            value={selectedCategories}\r\n            onChange={handleSelectCategories}\r\n            treeCheckable={true}\r\n            showCheckedStrategy={SHOW_ALL}\r\n            placeholder={editMode ? \"Выберите категории заявки\" : \"Категории\"}\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            disabled={!editMode}\r\n          />\r\n        )}\r\n        <Divider>Фото</Divider>\r\n        <div className=\"order__images\">\r\n          <ImagesList\r\n            removeImage={handleRemoveImage}\r\n            images={images}\r\n            editMode={editMode}\r\n          />\r\n          {editMode && (\r\n            <UploadFileForm\r\n              onChange={handleAddImage}\r\n              isUploading={imageUploading}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderInfoBody);\r\n","import { Descriptions } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DescriptionOrderFormData, OrderType } from \"../../../models/Orders\";\r\nimport { formatDate } from \"../../../utils/formatter\";\r\nimport OrderEditableField from \"./OrderEditableField\";\r\n\r\ntype OrderDescriptionPropsType = {\r\n  order: OrderType;\r\n  editMode: boolean;\r\n  errors: {\r\n    title?: FieldError;\r\n    totalSum?: FieldError;\r\n  };\r\n  control: Control<DescriptionOrderFormData, object>;\r\n};\r\n\r\nconst OrderDescription: React.FC<OrderDescriptionPropsType> = ({\r\n  order,\r\n  editMode,\r\n  errors,\r\n  control,\r\n}) => {\r\n  return (\r\n    <Descriptions size=\"small\" column={3}>\r\n      <Descriptions.Item label=\"Создана\">\r\n        {formatDate(order.creationDate)}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Автор\">\r\n        <NavLink to={`/contractors/${order.customerId}`}>Заказчик</NavLink>\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Сроки\">\r\n        <OrderEditableField\r\n          defaultValue={order.comment}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={errors.title}\r\n          fieldName=\"comment\"\r\n          placeholder=\"Сроки\"\r\n        />\r\n      </Descriptions.Item>\r\n\r\n      <Descriptions.Item label=\"Закроется\">\r\n        {formatDate(order.actualDate)}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Чаты\">\r\n        <NavLink to=\"/\">Чаты</NavLink>\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Цена\">\r\n        <OrderEditableField\r\n          isNumberInput\r\n          defaultValue={order.totalSum}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={errors.totalSum}\r\n          fieldName=\"totalSum\"\r\n          placeholder=\"Цена\"\r\n        />\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Номер заявки\">{order.id}</Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nexport default OrderDescription;\r\n","import React from \"react\";\r\nimport { Layout, PageHeader, Button, message } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport { orderSchema } from \"../../utils/validatorsSchemes\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  getCurrentOrderState,\r\n  getOrderActionStatusState,\r\n  getOrderImagesLoadingState,\r\n  getOrderImagesState,\r\n  getOrdersErrorMessageState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport {\r\n  addOrderImage,\r\n  deleteOrder,\r\n  getOrderById,\r\n  ordersActions,\r\n  removeOrderImage,\r\n  updateOrder,\r\n} from \"../../store/actions/orders\";\r\nimport { AppAlert, AppPreloader } from \"../../components\";\r\n\r\nimport {\r\n  OrderDescription,\r\n  OrderEditableField,\r\n  OrderInfoBody,\r\n} from \"./components\";\r\nimport { getCategoriesTreeDataState } from \"../../store/selectors/categories\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport {\r\n  AddOrderFormData,\r\n  DescriptionOrderFormData,\r\n} from \"../../models/Orders\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrderPage = () => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DescriptionOrderFormData>({\r\n    resolver: yupResolver(orderSchema),\r\n  });\r\n\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n\r\n  const order = useSelector(getCurrentOrderState);\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n  const orderError = useSelector(getOrdersErrorMessageState);\r\n  const orderLoadingState = useSelector(getOrdersLoadingState);\r\n\r\n  const orderImages = useSelector(getOrderImagesState);\r\n  const orderImageUploading = useSelector(getOrderImagesLoadingState);\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n\r\n  const { id }: { id?: string } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setCurrentOrder(null));\r\n    dispatch(ordersActions.clearOrderImages());\r\n  }, [dispatch]);\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode((prev) => {\r\n      dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n      return !prev;\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrderById(Number(id)));\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [clearState, dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    if (order) {\r\n      setSelectedCategories(order.categories?.map((category) => category.id));\r\n      dispatch(ordersActions.setOrderImages(order.attachments));\r\n    }\r\n  }, [order, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    // ВО ВРЕМЯ УДАЛЕНИЯ\r\n    if (!order && orderActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(\"/orders\");\r\n    }\r\n  }, [history, order, orderActionStatus]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    if (order) {\r\n      const categories = selectedCategories.map((categoryId) => ({\r\n        categoryId,\r\n      }));\r\n      const updatedOrder: AddOrderFormData = {\r\n        ...order,\r\n        title: formData.title,\r\n        description: formData.description,\r\n        totalSum: formData.totalSum,\r\n        comment: formData.comment,\r\n        contractors: order.contractors,\r\n        attachments: orderImages.map((image) => ({ attachmentId: image.id })),\r\n        customerId: 1,\r\n        categories,\r\n      };\r\n      setEditMode(false);\r\n      dispatch(updateOrder(updatedOrder, order.id));\r\n    }\r\n  });\r\n\r\n  const goBack = () => window.history.back();\r\n\r\n  const handleSelectCategories = React.useCallback((value: number[]) => {\r\n    setSelectedCategories(value);\r\n  }, []);\r\n\r\n  const handleDeleteOrder = () => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить заявку?\");\r\n    if (answer && order) {\r\n      dispatch(deleteOrder(order.id));\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    toggleEditMode();\r\n    if (order) {\r\n      setSelectedCategories(order.categories?.map((category) => category.id));\r\n      dispatch(ordersActions.clearOrderImages());\r\n      dispatch(ordersActions.setOrderImages(order.attachments));\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addOrderImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    if (order) {\r\n      dispatch(removeOrderImage(order.id, imageId));\r\n    }\r\n  };\r\n\r\n  const editActionsButtons = [\r\n    <Button\r\n      key=\"1\"\r\n      onClick={onSubmit}\r\n      disabled={\r\n        Object.keys(errors).length !== 0 || selectedCategories.length === 0\r\n      }\r\n    >\r\n      Сохранить\r\n    </Button>,\r\n    <Button key=\"2\" onClick={handleCancelEdit} danger>\r\n      Отменить\r\n    </Button>,\r\n  ];\r\n\r\n  const actionsButtons = [\r\n    <Button key=\"3\" onClick={toggleEditMode}>\r\n      Редактировать\r\n    </Button>,\r\n\r\n    (order?.orderStatus === \"ARCHIVED\" || order?.orderStatus === \"DELETED\") && (\r\n      <Button\r\n        key=\"4\"\r\n        onClick={() => {\r\n          alert(\"В разработке\");\r\n        }}\r\n      >\r\n        Восстановить\r\n      </Button>\r\n    ),\r\n    <Button key=\"5\" onClick={handleDeleteOrder} danger>\r\n      Удалить\r\n    </Button>,\r\n  ];\r\n\r\n  if (orderLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={() =>\r\n          dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER))\r\n        }\r\n        errorMessage={orderError}\r\n        status={orderActionStatus}\r\n        successMessage=\"Изменения успешно сохранены\"\r\n      />\r\n      {order && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <PageHeader\r\n              ghost={false}\r\n              onBack={goBack}\r\n              title={\r\n                <OrderEditableField\r\n                  defaultValue={order.title}\r\n                  editMode={editMode}\r\n                  control={control}\r\n                  error={errors.title}\r\n                  fieldName=\"title\"\r\n                  placeholder=\"Заголовок\"\r\n                />\r\n              }\r\n              extra={editMode ? editActionsButtons : actionsButtons}\r\n            >\r\n              <OrderDescription\r\n                order={order}\r\n                editMode={editMode}\r\n                errors={errors}\r\n                control={control}\r\n              />\r\n            </PageHeader>\r\n          </div>\r\n          <OrderInfoBody\r\n            categoriesTree={categoriesTree}\r\n            selectedCategories={selectedCategories}\r\n            handleSelectCategories={handleSelectCategories}\r\n            handleRemoveImage={handleRemoveImage}\r\n            handleAddImage={handleUploadImage}\r\n            editMode={editMode}\r\n            defaultValue={order.description}\r\n            error={errors.description}\r\n            images={orderImages}\r\n            control={control}\r\n            imageUploading={orderImageUploading}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React, { ChangeEvent } from \"react\";\r\n\r\nimport { BackTop, Layout, Table, Tag, Button } from \"antd\";\r\nimport { AppAlert, AppPreloader, AppSearchField } from \"../../components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getFilteredContractorsListState,\r\n  getContractorsLoadingState,\r\n} from \"../../store/selectors/contractors\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  contractorActions,\r\n  deleteContractor,\r\n  getContractors,\r\n} from \"../../store/actions/contractors\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  ContractorsQueryFilterType,\r\n  ContractorType,\r\n  ContractorTypesEnum,\r\n} from \"../../models/Contractors\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\nconst { Content } = Layout;\r\n\r\nconst columns: ColumnsType<ContractorType> = [\r\n  {\r\n    title: \"Тип контрагента\",\r\n    dataIndex: \"contractorType\",\r\n    render: (status: ContractorTypesEnum) => {\r\n      const colors = {\r\n        [ContractorTypesEnum.CUSTOMER]: \"green\",\r\n        [ContractorTypesEnum.SUPPLIER]: \"geekblue\",\r\n        [ContractorTypesEnum.UNKNOWN]: \"gray\",\r\n      };\r\n\r\n      return (\r\n        <Tag color={colors[status]} key={status}>\r\n          {status === ContractorTypesEnum.CUSTOMER ? \"Заказчик\" : \"Поставщик\"}\r\n        </Tag>\r\n      );\r\n    },\r\n    sorter: {\r\n      compare: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n  },\r\n  {\r\n    title: \"Название организации\",\r\n    dataIndex: \"name\",\r\n    sorter: {\r\n      compare: (a, b) => a.name.localeCompare(b.name),\r\n    },\r\n  },\r\n  {\r\n    title: \"Номер телефона\",\r\n    dataIndex: \"phoneNumber\",\r\n  },\r\n  {\r\n    title: \"Город\",\r\n    dataIndex: \"location\",\r\n    sorter: {\r\n      compare: (a, b) => a.location.localeCompare(b.location),\r\n    },\r\n  },\r\n  {\r\n    title: \"Категории\",\r\n    dataIndex: \"categories\",\r\n    render: (categories: CategoryType[]) => {\r\n      return (\r\n        <>\r\n          {categories\r\n            .filter((category) => category.parentId === 0)\r\n            .map((category) => (\r\n              <Tag color=\"blue\" key={category.id} className=\"order__tag\">\r\n                {category.name}\r\n              </Tag>\r\n            ))}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n\r\n  {\r\n    title: \"Контактное лицо\",\r\n    dataIndex: \"contactName\",\r\n  },\r\n  {\r\n    title: \"Рейтинг\",\r\n    dataIndex: \"rating\",\r\n    sorter: {\r\n      compare: (a, b) => a.rating - b.rating,\r\n    },\r\n  },\r\n];\r\n\r\nconst ContractorsPage = () => {\r\n  const [searchText, setSearchText] = React.useState<string>(\"\");\r\n\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const query = useQuery();\r\n\r\n  const contractorsError = useSelector(getContractorsErrorMessage);\r\n  const contractorsActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorsLoading = useSelector(getContractorsLoadingState);\r\n  const contractors = useSelector(\r\n    getFilteredContractorsListState(\r\n      searchText,\r\n      query.get(\"filter\") as ContractorsQueryFilterType\r\n    )\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setContractorsErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const handleDeleteContractor = (id: number) => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить контрагента?\");\r\n    if (answer) {\r\n      dispatch(deleteContractor(id));\r\n    }\r\n  };\r\n\r\n  const handleViewContractor = (contractor: ContractorType) => {\r\n    history.push(`contractors/${contractor.id}`);\r\n  };\r\n\r\n  const handleChangeSearchText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.currentTarget.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractors());\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [dispatch, clearState]);\r\n\r\n  if (contractorsLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={contractorsError}\r\n        successMessage=\"Контрагент успешно удален\"\r\n        status={contractorsActionStatus}\r\n      />\r\n      <AppSearchField\r\n        value={searchText}\r\n        onChange={handleChangeSearchText}\r\n        placeholder=\"Найти по названию организации\"\r\n      />\r\n      <Table\r\n        columns={columns}\r\n        dataSource={contractors}\r\n        rowKey={\"id\"}\r\n        expandable={{\r\n          expandedRowRender: (order) => (\r\n            <div className=\"contractor__expanded\">\r\n              <p className=\"contractor__tab-descr\">{order.description}</p>\r\n              <div className=\"contractor__expanded-action\">\r\n                <Button\r\n                  className=\"contractor__expanded-btn\"\r\n                  onClick={() => handleViewContractor(order)}\r\n                >\r\n                  Посмотреть\r\n                </Button>\r\n                <Button\r\n                  className=\"contractor__expanded-btn\"\r\n                  onClick={() => handleDeleteContractor(order.id)}\r\n                  danger\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      />\r\n      <BackTop />\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorsPage;\r\n","import { Form, Input, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  CustomerFieldsNameType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport { EditableFieldPropsType } from \"../../../models/types\";\r\nimport { truncateString } from \"../../../utils/formatter\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ContractorEditableField: React.FC<\r\n  EditableFieldPropsType<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    SupplierFieldsNameType | CustomerFieldsNameType\r\n  >\r\n> = ({\r\n  placeholder,\r\n  editMode,\r\n  fieldName,\r\n  control,\r\n  error,\r\n  defaultValue,\r\n  isTextArea = false,\r\n  maxLength,\r\n}) => {\r\n  if (editMode) {\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={error ? \"error\" : \"success\"}\r\n            help={error?.message}\r\n            className=\"input\"\r\n          >\r\n            {isTextArea ? (\r\n              <Input.TextArea\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                maxLength={maxLength}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        )}\r\n        name={fieldName}\r\n        defaultValue={defaultValue as string}\r\n      />\r\n    );\r\n  }\r\n  if (fieldName === \"eMail\") {\r\n    return <a href={`mailto:${defaultValue}`}>{defaultValue}</a>;\r\n  }\r\n  if (fieldName === \"webSite\" && defaultValue) {\r\n    return (\r\n      <a href={defaultValue as string} target=\"_blank\" rel=\"noreferrer\">\r\n        {truncateString(defaultValue as string, 25)}\r\n      </a>\r\n    );\r\n  }\r\n  return <Text>{defaultValue}</Text>;\r\n};\r\n\r\nexport default React.memo(ContractorEditableField);\r\n","import { Card, Divider, TreeSelect } from \"antd\";\r\nimport { DataNode } from \"antd/lib/tree\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { ImagesList, UploadFileForm } from \"../../../components\";\r\nimport { AttachmentOutType } from \"../../../models/Attachments\";\r\nimport {\r\n  ContractorTypesEnum,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../../models/Contractors\";\r\n\r\nimport ContractorEditableField from \"./ContractorEditableField\";\r\n\r\ntype ContractorInfoBodyPropsType = {\r\n  defaultValue: string;\r\n  editMode: boolean;\r\n  control: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  error?: FieldError;\r\n  categoriesTree: DataNode[];\r\n  selectedCategories: number[];\r\n  handleSelectCategories: (value: number[]) => void;\r\n  handleRemoveImage: (imageId: number) => void;\r\n  handleAddImage: (e: Event) => void;\r\n  imageUploading: boolean;\r\n  images: AttachmentOutType[];\r\n  registeringType: ContractorTypesEnum;\r\n};\r\n\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst ContractorInfoBody: React.FC<ContractorInfoBodyPropsType> = ({\r\n  defaultValue,\r\n  editMode,\r\n  control,\r\n  error,\r\n  categoriesTree,\r\n  selectedCategories,\r\n  handleSelectCategories,\r\n  handleRemoveImage,\r\n  handleAddImage,\r\n  imageUploading,\r\n  images,\r\n  registeringType,\r\n}) => {\r\n  return (\r\n    <div className=\"contractor__body\">\r\n      <Card>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <>\r\n            <Divider>Описание</Divider>\r\n            <ContractorEditableField\r\n              defaultValue={defaultValue}\r\n              editMode={editMode}\r\n              control={control}\r\n              error={error}\r\n              fieldName=\"description\"\r\n              placeholder=\"Описание\"\r\n              isTextArea\r\n            />\r\n            <Divider>Категории</Divider>\r\n            {categoriesTree && (\r\n              <TreeSelect\r\n                treeData={categoriesTree}\r\n                value={selectedCategories}\r\n                onChange={handleSelectCategories}\r\n                treeCheckable={true}\r\n                showCheckedStrategy={SHOW_ALL}\r\n                placeholder={\r\n                  editMode ? \"Выберите категории контрагента\" : \"Категории\"\r\n                }\r\n                style={{ width: \"100%\", marginBottom: 10 }}\r\n                // maxTagCount={5}\r\n                disabled={!editMode}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        <Divider>Фото</Divider>\r\n        <div className=\"contractor__images\">\r\n          <ImagesList\r\n            removeImage={handleRemoveImage}\r\n            images={images}\r\n            editMode={editMode}\r\n          />\r\n          {editMode && (\r\n            <UploadFileForm\r\n              onChange={handleAddImage}\r\n              isUploading={imageUploading}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ContractorInfoBody);\r\n","import { Button, Descriptions, Radio, RadioChangeEvent } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ContractorType,\r\n  ContractorTypesEnum,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorEditableField from \"./ContractorEditableField\";\r\n\r\ntype ContractorDescriptionPropsType = {\r\n  editMode: boolean;\r\n  handleSelectRegType: (e: RadioChangeEvent) => void;\r\n  toggleShowMap: () => void;\r\n  registeringType: ContractorTypesEnum;\r\n  contractor: ContractorType;\r\n  control: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  errors:\r\n    | {\r\n        name?: FieldError;\r\n        phoneNumber?: FieldError;\r\n        contactName?: FieldError;\r\n        location?: FieldError;\r\n        webSite?: FieldError;\r\n        eMail?: FieldError;\r\n        address?: FieldError;\r\n        description?: FieldError;\r\n      }\r\n    | {\r\n        name?: FieldError;\r\n        phoneNumber?: FieldError;\r\n        contactName?: FieldError;\r\n        location?: FieldError;\r\n      };\r\n};\r\n//TODO: сделать фильтр для заявок конкретного контрагента\r\n\r\nconst ContractorDescription: React.FC<ContractorDescriptionPropsType> = ({\r\n  editMode,\r\n  handleSelectRegType,\r\n  registeringType,\r\n  contractor,\r\n  control,\r\n  errors,\r\n  toggleShowMap,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Descriptions size=\"small\" column={4}>\r\n        <Descriptions.Item label=\"Тип контрагента\">\r\n          {editMode ? (\r\n            <Radio.Group onChange={handleSelectRegType} value={registeringType}>\r\n              <Radio value={ContractorTypesEnum.SUPPLIER}>Поставщик</Radio>\r\n              <Radio value={ContractorTypesEnum.CUSTOMER}>Заказчик</Radio>\r\n            </Radio.Group>\r\n          ) : contractor.contractorType === ContractorTypesEnum.CUSTOMER ? (\r\n            \"Заказчик\"\r\n          ) : (\r\n            \"Поставщик\"\r\n          )}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Заявки контрагента\">\r\n          <NavLink to=\"/orders\">Посмотреть</NavLink>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Контактное лицо\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contactName}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.contactName}\r\n            fieldName=\"contactName\"\r\n            placeholder=\"Контактное лицо\"\r\n          />\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Город\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.location}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.location}\r\n            fieldName=\"location\"\r\n            placeholder=\"Город\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Координаты\">\r\n          <Button size=\"small\" type=\"link\" onClick={toggleShowMap}>\r\n            Посмотреть на карте\r\n          </Button>\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Сайт\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.webSite}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.webSite}\r\n            fieldName=\"webSite\"\r\n            placeholder=\"Сайт\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Почта\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.eMail}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.eMail}\r\n            fieldName=\"eMail\"\r\n            placeholder=\"Почта\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Адрес\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.address}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.address}\r\n            fieldName=\"address\"\r\n            placeholder=\"Адрес\"\r\n          />\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Телефон\">\r\n          <ContractorEditableField\r\n            defaultValue={`+${contractor.phoneNumber}`}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.phoneNumber}\r\n            fieldName=\"phoneNumber\"\r\n            placeholder=\"Телефон\"\r\n            maxLength={12}\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Идентификатор контрагента\">\r\n          {contractor.id}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ContractorDescription);\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  PageHeader,\r\n  Button,\r\n  Card,\r\n  RadioChangeEvent,\r\n  message,\r\n} from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { customerSchema, supplierSchema } from \"../../utils/validatorsSchemes\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { AppAlert, AppMap, AppPreloader } from \"../../components\";\r\n\r\nimport { getCategoriesTreeDataState } from \"../../store/selectors/categories\";\r\nimport {\r\n  getContractorImagesState,\r\n  getContractorImageUploadingState,\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getContractorsLoadingState,\r\n  getCurrentContractorState,\r\n} from \"../../store/selectors/contractors\";\r\nimport {\r\n  addContractorImage,\r\n  contractorActions,\r\n  deleteContractor,\r\n  getContractorById,\r\n  removeContractorImage,\r\n  updateContractor,\r\n} from \"../../store/actions/contractors\";\r\nimport {\r\n  ContractorDescription,\r\n  ContractorEditableField,\r\n  ContractorInfoBody,\r\n} from \"./components\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorTypesEnum,\r\n  CoordinatesType,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../models/Contractors\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContractorPage = () => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n  const [latLng, setLatLng] = React.useState<CoordinatesType | null>(null);\r\n  const [registeringType, setRegisteringType] =\r\n    React.useState<ContractorTypesEnum>(ContractorTypesEnum.SUPPLIER);\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<SupplierDescrFormDataType | CustomerDescrFormDataType>({\r\n    resolver: yupResolver(\r\n      registeringType === ContractorTypesEnum.SUPPLIER\r\n        ? supplierSchema\r\n        : customerSchema\r\n    ),\r\n  });\r\n\r\n  const contractor = useSelector(getCurrentContractorState);\r\n  const contractorActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorError = useSelector(getContractorsErrorMessage);\r\n  const contractorLoadingState = useSelector(getContractorsLoadingState);\r\n\r\n  const contractorImages = useSelector(getContractorImagesState);\r\n  const contractorImageUploading = useSelector(\r\n    getContractorImageUploadingState\r\n  );\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n\r\n  const { id }: { id?: string } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setCurrentContractor(null));\r\n    dispatch(contractorActions.clearContractorImages());\r\n  }, [dispatch]);\r\n\r\n  const toggleEditMode = React.useCallback(() => {\r\n    setEditMode((prev) => {\r\n      dispatch(\r\n        contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n      );\r\n      return !prev;\r\n    });\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractorById(Number(id)));\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [clearState, dispatch, id]);\r\n\r\n  React.useEffect(() => {\r\n    if (contractor) {\r\n      setSelectedCategories(\r\n        contractor.categories?.map((category) => category.id)\r\n      );\r\n      setRegisteringType(contractor.contractorType);\r\n      setLatLng({\r\n        coordinatesLatitude: contractor.coordinates.coordinatesLatitude,\r\n        coordinatesLongitude: contractor.coordinates.coordinatesLongitude,\r\n      });\r\n      dispatch(contractorActions.setContractorImages(contractor.attachments));\r\n    }\r\n  }, [contractor, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    // ВО ВРЕМЯ УДАЛЕНИЯ\r\n    if (!contractor && contractorActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(\"/contractors\");\r\n    }\r\n  }, [history, contractor, contractorActionStatus]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    if (contractor) {\r\n      const categories = selectedCategories.map((categoryId) => ({\r\n        categoryId,\r\n      }));\r\n\r\n      const newContractor: AddContractorFormDataType = {\r\n        name: formData.name,\r\n        contactName: formData.contactName,\r\n        phoneNumber: `7${String(formData.phoneNumber).slice(-10)}`,\r\n        //@ts-ignore\r\n        description: formData.description ? formData.description : \"\",\r\n        location: formData.location,\r\n        coordinates: latLng\r\n          ? latLng\r\n          : {\r\n              coordinatesLatitude: \"\",\r\n              coordinatesLongitude: \"\",\r\n            },\r\n        contacts: {\r\n          //@ts-ignore\r\n          address: formData.address ? formData.address : \"\",\r\n          //@ts-ignore\r\n          webSite: formData.webSite ? formData.webSite : \"\",\r\n          //@ts-ignore\r\n          eMail: formData.eMail ? formData.eMail : \"\",\r\n        },\r\n        contractorType: registeringType,\r\n        categories,\r\n        attachments: contractorImages.map((image) => ({\r\n          attachmentId: image.id,\r\n        })),\r\n      };\r\n      setEditMode(false);\r\n      dispatch(updateContractor(newContractor, contractor.id));\r\n    }\r\n  });\r\n\r\n  const goBack = () => window.history.back();\r\n\r\n  const handleSelectCategories = React.useCallback((value: number[]) => {\r\n    setSelectedCategories(value);\r\n  }, []);\r\n\r\n  const handleDeleteContractor = React.useCallback(() => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить контрагента?\");\r\n    if (answer && contractor) {\r\n      dispatch(deleteContractor(contractor.id));\r\n    }\r\n  }, [contractor, dispatch]);\r\n\r\n  const handleSelectRegType = React.useCallback((e: RadioChangeEvent) => {\r\n    setRegisteringType(e.target.value);\r\n  }, []);\r\n\r\n  const handleCancelEdit = React.useCallback(() => {\r\n    toggleEditMode();\r\n    if (contractor) {\r\n      setSelectedCategories(\r\n        contractor.categories?.map((category) => category.id)\r\n      );\r\n      dispatch(contractorActions.clearContractorImages());\r\n      dispatch(contractorActions.setContractorImages(contractor.attachments));\r\n    }\r\n  }, [contractor, dispatch, toggleEditMode]);\r\n\r\n  const toggleShowMap = React.useCallback(() => {\r\n    setShowMap(!showMap);\r\n  }, [showMap]);\r\n\r\n  const handleSelectCoords = React.useCallback(\r\n    (latLng: google.maps.LatLng | null) => {\r\n      if (editMode) {\r\n        setLatLng({\r\n          coordinatesLatitude: String(latLng?.lat()),\r\n          coordinatesLongitude: String(latLng?.lng()),\r\n        });\r\n      }\r\n    },\r\n    [editMode]\r\n  );\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addContractorImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    if (contractor) {\r\n      dispatch(removeContractorImage(contractor.id, imageId));\r\n    }\r\n  };\r\n\r\n  const checkDisabledBtn = React.useCallback(() => {\r\n    if (registeringType === ContractorTypesEnum.SUPPLIER) {\r\n      return (\r\n        Object.keys(errors).length !== 0 || selectedCategories.length === 0\r\n      );\r\n    }\r\n    return Object.keys(errors).length !== 0;\r\n  }, [errors, registeringType, selectedCategories.length]);\r\n\r\n  const getEditActionsButtons = () => {\r\n    return [\r\n      <Button key=\"1\" onClick={onSubmit} disabled={checkDisabledBtn()}>\r\n        Сохранить\r\n      </Button>,\r\n      <Button key=\"2\" onClick={handleCancelEdit} danger>\r\n        Отменить\r\n      </Button>,\r\n    ];\r\n  };\r\n\r\n  const getActionsButtons = () => {\r\n    return [\r\n      <Button key=\"3\" onClick={toggleEditMode}>\r\n        Редактировать\r\n      </Button>,\r\n      <Button key=\"5\" onClick={handleDeleteContractor} danger>\r\n        Удалить\r\n      </Button>,\r\n    ];\r\n  };\r\n\r\n  const editActionsButtons = React.useMemo(getEditActionsButtons, [\r\n    checkDisabledBtn,\r\n    handleCancelEdit,\r\n    onSubmit,\r\n  ]);\r\n  const actionButtons = React.useMemo(getActionsButtons, [\r\n    handleDeleteContractor,\r\n    toggleEditMode,\r\n  ]);\r\n\r\n  if (showMap) {\r\n    return (\r\n      <Content className=\"content\">\r\n        <div className=\"map__header\">\r\n          <Button className=\"map-btn\" type=\"default\" onClick={toggleShowMap}>\r\n            Назад\r\n          </Button>\r\n          {latLng && editMode && (\r\n            <Button onClick={toggleShowMap}>Сохранить</Button>\r\n          )}\r\n        </div>\r\n\r\n        <AppMap\r\n          containerElement={<Card className=\"map\" />}\r\n          mapElement={<div className=\"map-element\" />}\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCxdk4gpLGO1qZLBP8yN54kfA5wm35HWXQ&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<AppPreloader />}\r\n          handleSelectCoords={handleSelectCoords}\r\n          marker={latLng}\r\n        />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (contractorLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={() =>\r\n          dispatch(\r\n            contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n          )\r\n        }\r\n        errorMessage={contractorError}\r\n        status={contractorActionStatus}\r\n        successMessage=\"Изменения успешно сохранены\"\r\n      />\r\n      {contractor && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <PageHeader\r\n              ghost={false}\r\n              onBack={goBack}\r\n              title={\r\n                <ContractorEditableField\r\n                  defaultValue={contractor.name}\r\n                  editMode={editMode}\r\n                  control={control}\r\n                  error={errors.name}\r\n                  fieldName=\"name\"\r\n                  placeholder=\"Название\"\r\n                />\r\n              }\r\n              extra={editMode ? editActionsButtons : actionButtons}\r\n            >\r\n              <ContractorDescription\r\n                editMode={editMode}\r\n                handleSelectRegType={handleSelectRegType}\r\n                registeringType={registeringType}\r\n                contractor={contractor}\r\n                control={control}\r\n                errors={errors}\r\n                toggleShowMap={toggleShowMap}\r\n              />\r\n            </PageHeader>\r\n          </div>\r\n          <ContractorInfoBody\r\n            defaultValue={contractor.description}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.description}\r\n            categoriesTree={categoriesTree}\r\n            selectedCategories={selectedCategories}\r\n            handleSelectCategories={handleSelectCategories}\r\n            images={contractorImages}\r\n            registeringType={registeringType}\r\n            handleRemoveImage={handleRemoveImage}\r\n            handleAddImage={handleUploadImage}\r\n            imageUploading={contractorImageUploading}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorPage;\r\n","import { Form, Typography, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, Controller, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\n\r\ntype ContractorFieldPropsType = {\r\n  subtitle: string;\r\n  fieldName: SupplierFieldsNameType;\r\n  required: boolean;\r\n  maxLength?: number;\r\n  control?: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  error?: FieldError;\r\n  textArea?: boolean;\r\n  defaultValue?: string;\r\n};\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ContractorField: React.FC<ContractorFieldPropsType> = ({\r\n  control,\r\n  error,\r\n  subtitle,\r\n  fieldName,\r\n  required = true,\r\n  maxLength,\r\n  textArea,\r\n  defaultValue,\r\n}) => {\r\n  const InputField = textArea ? Input.TextArea : Input;\r\n\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      rules={{ required }}\r\n      render={({ field: { onChange, value } }) => (\r\n        <Form.Item\r\n          validateStatus={error ? \"error\" : \"success\"}\r\n          help={error?.message}\r\n          className=\"input form__input\"\r\n          required={required}\r\n        >\r\n          <Text className=\"subtitle\">{subtitle}</Text>\r\n          <InputField\r\n            placeholder={subtitle}\r\n            value={value}\r\n            onChange={onChange}\r\n            maxLength={maxLength}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      name={fieldName}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContractorField;\r\n","import React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorField from \"./ContractorField\";\r\n\r\nconst fields = [\r\n  {\r\n    id: \"1\",\r\n    fieldName: \"name\",\r\n    subtitle: \"Название организации\",\r\n    required: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    fieldName: \"contactName\",\r\n    subtitle: \"Контактное лицо\",\r\n    required: true,\r\n  },\r\n  { id: \"3\", fieldName: \"location\", subtitle: \"Город\", required: true },\r\n  { id: \"4\", fieldName: \"address\", subtitle: \"Адрес\", required: true },\r\n  { id: \"5\", fieldName: \"eMail\", subtitle: \"Почта\", required: false },\r\n  { id: \"6\", fieldName: \"webSite\", subtitle: \"Сайт компании\", required: false },\r\n  {\r\n    id: \"7\",\r\n    fieldName: \"phoneNumber\",\r\n    subtitle: \"Номер телефона\",\r\n    maxLength: 12,\r\n    required: true,\r\n    defaultValue: \"+7\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    fieldName: \"description\",\r\n    subtitle: \"Описание\",\r\n    required: false,\r\n    textArea: true,\r\n  },\r\n];\r\n\r\ntype SupplierDescrFormPropsType = {\r\n  control?: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  errors: {\r\n    name?: FieldError;\r\n    phoneNumber?: FieldError;\r\n    contactName?: FieldError;\r\n    location?: FieldError;\r\n    webSite?: FieldError;\r\n    eMail?: FieldError;\r\n    address?: FieldError;\r\n    description?: FieldError;\r\n  };\r\n};\r\n\r\nconst SupplierDescrForm: React.FC<SupplierDescrFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      {fields.map((field) => {\r\n        return (\r\n          <ContractorField\r\n            key={field.id}\r\n            control={control}\r\n            error={errors[field.fieldName as SupplierFieldsNameType]}\r\n            subtitle={field.subtitle}\r\n            fieldName={field.fieldName as SupplierFieldsNameType}\r\n            required={field.required}\r\n            maxLength={field.maxLength}\r\n            textArea={field.textArea}\r\n            defaultValue={field.defaultValue}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SupplierDescrForm;\r\n","import React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  CustomerFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorField from \"./ContractorField\";\r\n\r\nconst fields = [\r\n  {\r\n    id: \"1\",\r\n    fieldName: \"name\",\r\n    subtitle: \"Название организации\",\r\n    required: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    fieldName: \"contactName\",\r\n    subtitle: \"Контактное лицо\",\r\n    required: true,\r\n  },\r\n  { id: \"3\", fieldName: \"location\", subtitle: \"Город\", required: true },\r\n  {\r\n    id: \"7\",\r\n    fieldName: \"phoneNumber\",\r\n    subtitle: \"Номер телефона\",\r\n    maxLength: 12,\r\n    required: true,\r\n    defaultValue: \"+7\",\r\n  },\r\n];\r\n\r\ntype CustomerDescrFormPropsType = {\r\n  control?: Control<CustomerDescrFormDataType, object>;\r\n  errors: {\r\n    name?: FieldError;\r\n    phoneNumber?: FieldError;\r\n    contactName?: FieldError;\r\n    location?: FieldError;\r\n  };\r\n};\r\n\r\nconst CustomerDescrForm: React.FC<CustomerDescrFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      {fields.map((field) => {\r\n        return (\r\n          <ContractorField\r\n            key={field.id}\r\n            control={control}\r\n            error={errors[field.fieldName as CustomerFieldsNameType]}\r\n            subtitle={field.subtitle}\r\n            fieldName={field.fieldName as CustomerFieldsNameType}\r\n            required={field.required}\r\n            maxLength={field.maxLength}\r\n            defaultValue={field.defaultValue}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDescrForm;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Radio,\r\n  Layout,\r\n  Typography,\r\n  TreeSelect,\r\n  RadioChangeEvent,\r\n  message,\r\n} from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  AppAlert,\r\n  AppMap,\r\n  AppPreloader,\r\n  ImagesList,\r\n  UploadFileForm,\r\n} from \"../../components\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { customerSchema, supplierSchema } from \"../../utils/validatorsSchemes\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesTreeDataState,\r\n} from \"../../store/selectors/categories\";\r\nimport { categoriesActions } from \"../../store/actions/categories\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  addContractorImage,\r\n  contractorActions,\r\n  createContractorProfile,\r\n  removeNewContractorImage,\r\n} from \"../../store/actions/contractors\";\r\nimport {\r\n  getContractorImagesState,\r\n  getContractorImageUploadingState,\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getContractorsLoadingState,\r\n  getCurrentContractorState,\r\n} from \"../../store/selectors/contractors\";\r\nimport { SupplierDescrForm } from \"./components\";\r\nimport CustomerDescrForm from \"./components/CustomerDescrForm\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorTypesEnum,\r\n  CoordinatesType,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../models/Contractors\";\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst ContractorCreatePage = () => {\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n  const [registeringType, setRegisteringType] =\r\n    React.useState<ContractorTypesEnum>(ContractorTypesEnum.SUPPLIER);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<SupplierDescrFormDataType | CustomerDescrFormDataType>({\r\n    resolver: yupResolver(\r\n      registeringType === ContractorTypesEnum.SUPPLIER\r\n        ? supplierSchema\r\n        : customerSchema\r\n    ),\r\n  });\r\n\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const [latLng, setLatLng] = React.useState<CoordinatesType | null>(null);\r\n\r\n  const contractorActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorError = useSelector(getContractorsErrorMessage);\r\n  const contractorLoading = useSelector(getContractorsLoadingState);\r\n  const currentContractor = useSelector(getCurrentContractorState);\r\n\r\n  const contractorImages = useSelector(getContractorImagesState);\r\n  const contractorImageUploading = useSelector(\r\n    getContractorImageUploadingState\r\n  );\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearContractorsState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setContractorsErrorMessage(null));\r\n    dispatch(contractorActions.clearContractorImages());\r\n  }, [dispatch]);\r\n\r\n  const clearCategoriesState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearContractorsState();\r\n      clearCategoriesState();\r\n    };\r\n  }, [clearCategoriesState, clearContractorsState]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      currentContractor &&\r\n      contractorActionStatus === ActionStatusEnum.SUCCESS\r\n    ) {\r\n      history.push(`/contractors/${currentContractor.id}`);\r\n    }\r\n  }, [currentContractor, history, contractorActionStatus]);\r\n\r\n  const handleSelectCategories = (value: number[]) => {\r\n    setSelectedCategories(value);\r\n  };\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    const categories = selectedCategories.map((categoryId) => ({\r\n      categoryId,\r\n    }));\r\n\r\n    const newContractor: AddContractorFormDataType = {\r\n      name: formData.name,\r\n      contactName: formData.contactName,\r\n      phoneNumber: `7${String(formData.phoneNumber).slice(-10)}`,\r\n      //@ts-ignore\r\n      description: formData.description ? formData.description : \"\",\r\n      location: formData.location,\r\n      coordinates: latLng\r\n        ? latLng\r\n        : {\r\n            coordinatesLatitude: \"\",\r\n            coordinatesLongitude: \"\",\r\n          },\r\n      contacts: {\r\n        //@ts-ignore\r\n        address: formData.address ? formData.address : \"\",\r\n        //@ts-ignore\r\n        webSite: formData.webSite ? formData.webSite : \"\",\r\n        //@ts-ignore\r\n        eMail: formData.eMail ? formData.eMail : \"\",\r\n      },\r\n      contractorType: registeringType,\r\n      categories,\r\n      attachments: contractorImages.map((image) => ({\r\n        attachmentId: image.id,\r\n      })),\r\n    };\r\n    dispatch(createContractorProfile(newContractor));\r\n  });\r\n\r\n  const handleSelectRegType = (e: RadioChangeEvent) => {\r\n    reset();\r\n    setRegisteringType(e.target.value);\r\n  };\r\n\r\n  const toggleShowMap = () => {\r\n    setShowMap(!showMap);\r\n  };\r\n\r\n  const handleSelectCoords = (latLng: google.maps.LatLng | null) => {\r\n    setLatLng({\r\n      coordinatesLatitude: String(latLng?.lat()),\r\n      coordinatesLongitude: String(latLng?.lng()),\r\n    });\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    dispatch(removeNewContractorImage(imageId));\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addContractorImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (contractorLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  if (showMap) {\r\n    return (\r\n      <Content className=\"content\">\r\n        <div className=\"map__header\">\r\n          <Button className=\"map-btn\" type=\"default\" onClick={toggleShowMap}>\r\n            Назад\r\n          </Button>\r\n          {latLng && <Button onClick={toggleShowMap}>Сохранить</Button>}\r\n        </div>\r\n\r\n        <AppMap\r\n          containerElement={<Card className=\"map\" />}\r\n          mapElement={<div className=\"map-element\" />}\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCxdk4gpLGO1qZLBP8yN54kfA5wm35HWXQ&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<AppPreloader />}\r\n          handleSelectCoords={handleSelectCoords}\r\n          marker={latLng}\r\n        />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearContractorsState}\r\n        errorMessage={contractorError}\r\n        successMessage={\"Контрагент сохранен\"}\r\n        status={contractorActionStatus}\r\n      />\r\n      <AppAlert\r\n        onClose={clearCategoriesState}\r\n        errorMessage={categoriesError}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание контрагента\r\n        </Title>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER ? (\r\n          <SupplierDescrForm control={control} errors={errors} />\r\n        ) : (\r\n          <CustomerDescrForm control={control} errors={errors} />\r\n        )}\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <TreeSelect\r\n            treeData={categoriesTree}\r\n            value={selectedCategories}\r\n            onChange={handleSelectCategories}\r\n            treeCheckable={true}\r\n            showCheckedStrategy={SHOW_ALL}\r\n            placeholder={\"Выберите категории контрагента\"}\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            maxTagCount={5}\r\n          />\r\n        )}\r\n\r\n        <Radio.Group\r\n          onChange={handleSelectRegType}\r\n          value={registeringType}\r\n          className=\"radio-group\"\r\n        >\r\n          <Radio value={ContractorTypesEnum.SUPPLIER}>Поставщик</Radio>\r\n          <Radio value={ContractorTypesEnum.CUSTOMER}>Заказчик</Radio>\r\n        </Radio.Group>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <Button\r\n            className=\"map-btn\"\r\n            type=\"default\"\r\n            onClick={toggleShowMap}\r\n            block\r\n          >\r\n            {latLng ? \"Изменить координаты\" : \"Отметить на карте\"}\r\n          </Button>\r\n        )}\r\n        <ImagesList\r\n          removeImage={handleRemoveImage}\r\n          images={contractorImages}\r\n          editMode={true}\r\n        />\r\n        <UploadFileForm\r\n          onChange={handleUploadImage}\r\n          isUploading={contractorImageUploading}\r\n        />\r\n        <Button\r\n          className=\"order__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={\r\n            Object.keys(errors).length > 0 ||\r\n            (registeringType === ContractorTypesEnum.SUPPLIER &&\r\n              selectedCategories.length === 0)\r\n          }\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorCreatePage;\r\n","import { Form, Input, Typography } from \"antd\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst { Text } = Typography;\r\n\r\ntype CategoryEditablePropsType = {\r\n  editMode: boolean;\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  currentValue?: string;\r\n  error?: string;\r\n};\r\n\r\nconst CategoryEditableField: React.FC<CategoryEditablePropsType> = ({\r\n  placeholder,\r\n  editMode,\r\n  value,\r\n  currentValue,\r\n  error,\r\n  onChange,\r\n}) => {\r\n  const handleInputClick = (\r\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\r\n  ) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  if (editMode) {\r\n    return (\r\n      <Form.Item\r\n        validateStatus={error ? \"error\" : \"success\"}\r\n        help={error}\r\n        className=\"input\"\r\n        required\r\n        tooltip=\"Обязательное поле\"\r\n      >\r\n        <Input\r\n          placeholder={placeholder}\r\n          onClick={handleInputClick}\r\n          value={currentValue}\r\n          onChange={onChange}\r\n        />\r\n      </Form.Item>\r\n    );\r\n  }\r\n  return <Text>{value}</Text>;\r\n};\r\n\r\nexport default CategoryEditableField;\r\n","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { CategoryType } from \"../../../models/Categories\";\r\n\r\ntype CategoryActionsPropsType = {\r\n  editMode: boolean;\r\n  disabledBtn: boolean;\r\n  onSave: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\r\n  onEdit: (category: CategoryType) => void;\r\n  category: CategoryType;\r\n  onRemove: (id: number) => void;\r\n};\r\n\r\nconst CategoryActions: React.FC<CategoryActionsPropsType> = ({\r\n  editMode,\r\n  disabledBtn,\r\n  onSave,\r\n  onEdit,\r\n  category,\r\n  onRemove,\r\n}) => {\r\n  return (\r\n    <div className=\"categories__actions\">\r\n      {editMode ? (\r\n        <Button onClick={onSave} disabled={disabledBtn}>\r\n          Сохранить\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className=\"categories__btn\"\r\n            onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n              e.stopPropagation();\r\n              onEdit(category);\r\n            }}\r\n          >\r\n            Редактировать\r\n          </Button>\r\n          <Button\r\n            className=\"categories__btn\"\r\n            onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n              e.stopPropagation();\r\n              onRemove(category.id);\r\n            }}\r\n            danger\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryActions;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Layout, Typography, Empty, Collapse, Button, List } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesLoadingState,\r\n  getCategoryInProcessEditState,\r\n  getMainCategoriesState,\r\n  getSubCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport {\r\n  categoriesActions,\r\n  deleteCategoryById,\r\n  updateCategoryById,\r\n} from \"../../store/actions/categories\";\r\nimport { AppAlert, AppPreloader, SelectParentCategory } from \"../../components\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { MainCategoryActions, CategoryEditableField } from \"./components\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst { Content } = Layout;\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst CategoriesPage = () => {\r\n  const [editableCategory, setEditableCategory] =\r\n    React.useState<CategoryType | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mainCategories = useSelector(getMainCategoriesState);\r\n  const subCategories = useSelector(getSubCategoriesState);\r\n  const categoriesLoading = useSelector(getCategoriesLoadingState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoryInEditProcess = useSelector(getCategoryInProcessEditState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => clearState();\r\n  }, [clearState]);\r\n\r\n  const onRemove = (id: number) => {\r\n    const answer = window.confirm(\"Вы действительно хотите удалить категорию?\");\r\n    if (answer) {\r\n      dispatch(deleteCategoryById(id));\r\n    }\r\n  };\r\n\r\n  const onEdit = (category: CategoryType) => {\r\n    setEditableCategory(category);\r\n  };\r\n\r\n  const onSave = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    e.stopPropagation();\r\n    if (editableCategory) {\r\n      dispatch(updateCategoryById(editableCategory));\r\n    }\r\n    setEditableCategory(null);\r\n  };\r\n\r\n  const onCategoryNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEditableCategory((prev) => {\r\n      if (prev) {\r\n        return { ...prev, name: e.target.value };\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handleChangeParentId = (id: number) => {\r\n    setEditableCategory((prev) => {\r\n      if (prev) {\r\n        return { ...prev, parentId: id };\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  if (categoriesLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Изменения сохранены\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      {mainCategories && mainCategories.length > 0 ? (\r\n        <Collapse accordion>\r\n          {mainCategories.map((mainCat) => {\r\n            return (\r\n              <Panel\r\n                header={\r\n                  <div className=\"categories__header\">\r\n                    {categoryInEditProcess === mainCat.id ? (\r\n                      <Text>Сохранение...</Text>\r\n                    ) : (\r\n                      <CategoryEditableField\r\n                        editMode={editableCategory?.id === mainCat.id}\r\n                        value={mainCat.name}\r\n                        currentValue={editableCategory?.name}\r\n                        onChange={onCategoryNameChange}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                }\r\n                key={mainCat.id}\r\n                extra={\r\n                  <MainCategoryActions\r\n                    editMode={editableCategory?.id === mainCat.id}\r\n                    disabledBtn={editableCategory?.name.length === 0}\r\n                    onSave={onSave}\r\n                    onEdit={onEdit}\r\n                    category={mainCat}\r\n                    onRemove={onRemove}\r\n                  />\r\n                }\r\n              >\r\n                {subCategories && (\r\n                  <List\r\n                    dataSource={subCategories.filter(\r\n                      (subCat) => subCat.parentId === mainCat.id\r\n                    )}\r\n                    renderItem={(item) => (\r\n                      <List.Item\r\n                        actions={\r\n                          editableCategory?.id === item.id\r\n                            ? [\r\n                                <Button\r\n                                  onClick={onSave}\r\n                                  disabled={editableCategory?.name.length === 0}\r\n                                >\r\n                                  Сохранить\r\n                                </Button>,\r\n                              ]\r\n                            : [\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={(\r\n                                    e: React.MouseEvent<HTMLElement, MouseEvent>\r\n                                  ) => {\r\n                                    e.stopPropagation();\r\n                                    onEdit(item);\r\n                                  }}\r\n                                >\r\n                                  Редактировать\r\n                                </Button>,\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={(\r\n                                    e: React.MouseEvent<HTMLElement, MouseEvent>\r\n                                  ) => {\r\n                                    e.stopPropagation();\r\n                                    onRemove(item.id);\r\n                                  }}\r\n                                  danger\r\n                                >\r\n                                  Удалить\r\n                                </Button>,\r\n                              ]\r\n                        }\r\n                      >\r\n                        <List.Item.Meta\r\n                          description={\r\n                            <>\r\n                              {categoryInEditProcess === item.id ? (\r\n                                <Text>Сохранение...</Text>\r\n                              ) : (\r\n                                <>\r\n                                  <CategoryEditableField\r\n                                    editMode={editableCategory?.id === item.id}\r\n                                    value={item.name}\r\n                                    currentValue={editableCategory?.name}\r\n                                    onChange={onCategoryNameChange}\r\n                                  />\r\n                                  {editableCategory?.id === item.id && (\r\n                                    <SelectParentCategory\r\n                                      mainCategories={mainCategories}\r\n                                      handleChangeParentId={\r\n                                        handleChangeParentId\r\n                                      }\r\n                                      item={item}\r\n                                    />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          }\r\n                        />\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                )}\r\n              </Panel>\r\n            );\r\n          })}\r\n        </Collapse>\r\n      ) : (\r\n        <Empty description=\"Данных нет\" />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoriesPage;\r\n","import React from \"react\";\r\n\r\nimport { Button, Card, Form, Input, Layout, Typography } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesLoadingState,\r\n  getMainCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport { AppAlert, AppPreloader, SelectParentCategory } from \"../../components\";\r\nimport {\r\n  categoriesActions,\r\n  createCategory,\r\n} from \"../../store/actions/categories\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { categorySchema } from \"../../utils/validatorsSchemes\";\r\nimport { AddCategoryFormData } from \"../../models/Categories\";\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Title } = Typography;\r\n\r\nconst CategoryCreatePage = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<AddCategoryFormData>({\r\n    resolver: yupResolver(categorySchema),\r\n  });\r\n\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n  const mainCategories = useSelector(getMainCategoriesState);\r\n  const categoriesLoading = useSelector(getCategoriesLoadingState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    dispatch(createCategory(formData));\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => clearState();\r\n  }, [clearState]);\r\n\r\n  if (categoriesLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Категория сохранена\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание категории\r\n        </Title>\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.name ? \"error\" : \"success\"}\r\n              help={errors.name?.message}\r\n              className=\"input\"\r\n              required\r\n            >\r\n              <Text className=\"subtitle\">Название категории</Text>\r\n              <Input\r\n                placeholder=\"Название категории\"\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n          name=\"name\"\r\n          defaultValue=\"\"\r\n        />\r\n        {mainCategories && (\r\n          <Controller\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n            }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <SelectParentCategory\r\n                mainCategories={mainCategories}\r\n                handleChangeParentId={onChange}\r\n                error={errors.parentId?.message}\r\n              />\r\n            )}\r\n            name=\"parentId\"\r\n            defaultValue={0}\r\n          />\r\n        )}\r\n        <Button\r\n          className=\"categories__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={categoriesLoading || Object.keys(errors).length > 0}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCreatePage;\r\n","import { Button, Card, Empty, List, Typography } from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppAlert } from \"../../components\";\r\nimport {\r\n  categoriesActions,\r\n  updateCategoryById,\r\n} from \"../../store/actions/categories\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoryInProcessEditState,\r\n  getDeletedCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst DeletedCategoriesPage = () => {\r\n  const deletedCategories = useSelector(getDeletedCategoriesState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n  const categoryInEditProcess = useSelector(getCategoryInProcessEditState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const onRestore = (category: CategoryType) => {\r\n    const answer = window.confirm(\"Восстановить выбранную категорию?\");\r\n    if (answer) {\r\n      const updateCategory = { ...category, isDeleted: false };\r\n      dispatch(updateCategoryById(updateCategory));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Изменения сохранены\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      {deletedCategories && deletedCategories.length === 0 ? (\r\n        <Empty />\r\n      ) : (\r\n        <Card>\r\n          <List\r\n            dataSource={deletedCategories}\r\n            renderItem={(item) => (\r\n              <List.Item\r\n                actions={[\r\n                  <Button onClick={() => onRestore(item)}>Восстановить</Button>,\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  description={\r\n                    categoryInEditProcess === item.id ? (\r\n                      <Text>Сохранение...</Text>\r\n                    ) : (\r\n                      <Text>{item.name}</Text>\r\n                    )\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Card>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DeletedCategoriesPage;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { AppHeader, AppSideBar } from \"../components\";\r\nimport {\r\n  CategoriesPage,\r\n  ContractorCreatePage,\r\n  ContractorsPage,\r\n  HomePage,\r\n  OrderCreatePage,\r\n  OrdersPage,\r\n  OrderPage,\r\n  CategoryCreatePage,\r\n  DeletedCategoriesPage,\r\n  ContractorPage,\r\n} from \"../pages\";\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <Layout className=\"wrapper\">\r\n      <AppHeader />\r\n      <Layout>\r\n        <AppSideBar />\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\r\n            <Route exact path=\"/home\">\r\n              <HomePage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/orders\">\r\n              <OrdersPage />\r\n            </Route>\r\n            <Route exact path=\"/orders/create\">\r\n              <OrderCreatePage />\r\n            </Route>\r\n            <Route path=\"/orders/:id\">\r\n              <OrderPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/contractors\">\r\n              <ContractorsPage />\r\n            </Route>\r\n            <Route exact path=\"/contractors/create\">\r\n              <ContractorCreatePage />\r\n            </Route>\r\n            <Route path=\"/contractors/:id\">\r\n              <ContractorPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories\">\r\n              <CategoriesPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories/deleted\">\r\n              <DeletedCategoriesPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories/create\">\r\n              <CategoryCreatePage />\r\n            </Route>\r\n\r\n            <Route exact path=\"*\" render={() => <Redirect to=\"/home\" />}>\r\n              <HomePage />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { MainLayout } from \"./layouts\";\nimport { getAllCategories } from \"./store/actions/categories\";\n\n//TODO: при входе обновлять профиль userProfile, если не получается то использовать из asyncstorage\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(getAllCategories());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <MainLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionTypes } from \"../actions/auth\";\r\n\r\nconst initialState = {};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst authReducer = (\r\n  state = initialState,\r\n  action: AuthActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { CategoriesActionTypes } from \"../actions/categories\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst initialState = {\r\n  categories: null as CategoryType[] | null | undefined,\r\n  isLoadingCategories: false,\r\n  errorMessage: null as string | null,\r\n  categoriesActionStatus: ActionStatusEnum.NEVER,\r\n  currentCategory: null as CategoryType | null,\r\n  categoryInProcessEdit: null as number | null,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst categoriesReducer = (\r\n  state = initialState,\r\n  action: CategoriesActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_CATEGORIES\":\r\n    case \"SET_IS_LOADING_CATEGORIES\":\r\n    case \"SET_CATEGORIES_ERROR_MESSAGE\":\r\n    case \"SET_CATEGORIES_ACTION_STATUS\":\r\n    case \"SET_CURRENT_CATEGORY\":\r\n    case \"SET_CATEGORY_IN_EDIT_PROCESS\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case \"REPLACE_CATEGORY\": {\r\n      const newCategoriesList = state.categories?.map((category) => {\r\n        if (category.id === action.payload.category.id) {\r\n          return action.payload.category;\r\n        }\r\n        return category;\r\n      });\r\n      return {\r\n        ...state,\r\n        categories: newCategoriesList,\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CATEGORY\": {\r\n      const newCategoriesList = state.categories?.filter(\r\n        (category) => category.id !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        categories: newCategoriesList,\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_CATEGORIES\": {\r\n      return {\r\n        ...state,\r\n        categories: null,\r\n      } as const;\r\n    }\r\n\r\n    case \"ADD_NEW_CATEGORY\": {\r\n      return {\r\n        ...state,\r\n        categories: state.categories\r\n          ? [...state.categories, action.payload.category]\r\n          : [action.payload.category],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default categoriesReducer;\r\n","import { AttachmentOutType } from \"./../../models/Attachments\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { ContractorsActionTypes } from \"../actions/contractors\";\r\nimport { ContractorType } from \"../../models/Contractors\";\r\n\r\nconst initialState = {\r\n  contractors: null as ContractorType[] | null | undefined,\r\n  currentContractor: null as ContractorType | null,\r\n  contractorsLoading: false,\r\n  contractorsActionStatus: ActionStatusEnum.NEVER,\r\n  errorMessage: null as string | null,\r\n  contractorImages: [] as AttachmentOutType[],\r\n  contractorImageUploading: false,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst contractorsReducer = (\r\n  state = initialState,\r\n  action: ContractorsActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_CONTRACTOR\":\r\n    case \"SET_CONTRACTORS_LOADING\":\r\n    case \"SET_CONTRACTORS_ACTION_STATUS\":\r\n    case \"SET_CONTRACTORS_ERROR_MESSAGE\":\r\n    case \"SET_CONTRACTORS\":\r\n    case \"SET_CONTRACTOR_IMAGE_UPLOADING\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CONTRACTOR\": {\r\n      return {\r\n        ...state,\r\n        contractors: state.contractors?.filter(\r\n          (contractor) => contractor.id !== action.payload.contractorId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"SET_CONTRACTOR_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: action.payload.images,\r\n      };\r\n    }\r\n\r\n    case \"ADD_CONTRACTOR_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: [...state.contractorImages, ...action.payload.images],\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CONTRACTOR_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: state.contractorImages.filter(\r\n          (image) => image.id !== action.payload.imageId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_CONTRACTOR_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contractorsReducer;\r\n","import { AttachmentOutType } from \"../../models/Attachments\";\r\nimport { OrderType } from \"../../models/Orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { OrdersActionTypes } from \"../actions/orders\";\r\n\r\nconst initialState = {\r\n  orders: null as OrderType[] | null | undefined,\r\n  ordersLoading: false,\r\n  errorMessage: null as string | null,\r\n  orderActionStatus: ActionStatusEnum.NEVER,\r\n  currentOrder: null as OrderType | null,\r\n  orderImages: [] as AttachmentOutType[],\r\n  orderImageUploading: false,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst ordersReducer = (\r\n  state = initialState,\r\n  action: OrdersActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_ORDERS\":\r\n    case \"SET_ORDERS_LOADING\":\r\n    case \"SET_ORDERS_ERROR\":\r\n    case \"SET_ORDER_ACTION_STATUS\":\r\n    case \"SET_CURRENT_ORDER\":\r\n    case \"SET_ORDER_IMAGE_UPLOADING\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    case \"ADD_NEW_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders\r\n          ? [...state.orders, action.payload.order]\r\n          : [action.payload.order],\r\n      };\r\n    }\r\n    case \"UPDATE_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders?.map((order) => {\r\n          if (order.id === action.payload.order.id) {\r\n            return action.payload.order;\r\n          }\r\n          return order;\r\n        }),\r\n      };\r\n    }\r\n    case \"REMOVE_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders?.filter((order) => order.id !== action.payload.id),\r\n      };\r\n    }\r\n    case \"SET_ORDER_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        orderImages: action.payload.images,\r\n      };\r\n    }\r\n\r\n    case \"ADD_ORDER_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        orderImages: [...state.orderImages, ...action.payload.images],\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_ORDER_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        orderImages: state.orderImages.filter(\r\n          (image) => image.id !== action.payload.imageId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_ORDER_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        orderImages: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ordersReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  categoriesReducer,\r\n  contractorsReducer,\r\n  authReducer,\r\n  ordersReducer,\r\n} from \"./reducers\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  categories: categoriesReducer,\r\n  contractors: contractorsReducer,\r\n  orders: ordersReducer,\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}