{"version":3,"sources":["models/types.ts","components/AppHeader.tsx","components/AppSideBar.tsx","components/AppPreloader.tsx","components/UploadFileForm.tsx","components/AppAlert.tsx","components/SelectParentCategory.tsx","components/AppMap.tsx","api/axios.tsx","models/Contractors.ts","components/ImagesList.tsx","components/AppSearchField.tsx","store/selectors/contractors.ts","models/Orders.ts","pages/HomePage/components/ContractorsStatistic.tsx","store/selectors/orders.ts","pages/HomePage/components/OrdersStatistic.tsx","services/contractorsApi.ts","services/attachmentsApi.ts","store/actions/contractors.ts","services/ordersApi.ts","services/chatsApi.ts","store/actions/orders.ts","pages/HomePage/HomePage.tsx","utils/formatter.ts","pages/OrdersPage/OrdersPage.tsx","utils/validatorsSchemes.ts","store/selectors/categories.ts","services/categoriesApi.ts","store/actions/categories.ts","utils/getBase64.ts","pages/OrderCreatePage/components/OrderCreateForm.tsx","pages/OrderCreatePage/OrderCreatePage.tsx","pages/OrderPage/components/OrderEditableField.tsx","pages/OrderPage/components/OrderInfoBody.tsx","pages/OrderPage/components/OrderDescription.tsx","pages/OrderPage/OrderPage.tsx","pages/ContractorsPage/ContractorsPage.tsx","pages/ContractorPage/components/ContractorEditableField.tsx","pages/ContractorPage/components/ContractorInfoBody.tsx","pages/ContractorPage/components/ContractorDescription.tsx","pages/ContractorPage/ContractorPage.tsx","pages/ContractorCreatePage/components/ContractorField.tsx","pages/ContractorCreatePage/components/SupplierDescrForm.tsx","pages/ContractorCreatePage/components/CustomerDescrForm.tsx","pages/ContractorCreatePage/ContractorCreatePage.tsx","pages/CategoriesPage/components/CategoryEditableField.tsx","pages/CategoriesPage/components/MainCategoryActions.tsx","pages/CategoriesPage/CategoriesPage.tsx","pages/CategoryCreatePage/CategoryCreatePage.tsx","pages/DeletedCategoriesPage/DeletedCategoriesPage.tsx","pages/OrderChatsPage/OrderChatsPage.tsx","store/actions/chats.ts","store/selectors/chats.ts","pages/ChatPage/ChatPage.tsx","layouts/MainLayout.tsx","App.tsx","reportWebVitals.ts","store/reducers/auth.ts","store/reducers/categories.ts","store/reducers/contractors.ts","store/reducers/orders.ts","store/reducers/chats.ts","store/store.ts","index.tsx"],"names":["ActionStatusEnum","Header","Layout","AppHeader","React","useState","currentLocation","setCurrentLocation","location","useLocation","useEffect","pathname","split","offsetTop","className","to","theme","mode","defaultSelectedKeys","selectedKeys","Item","SubMenu","Menu","Sider","AppSideBar","search","width","icon","GroupOutlined","title","UserOutlined","ClusterOutlined","memo","AppPreloader","size","UploadFileForm","onChange","isUploading","inputRef","useRef","input","current","addEventListener","removeEventListener","onClick","click","PlusOutlined","ref","type","hidden","accept","AppAlert","status","errorMessage","successMessage","onClose","NEVER","message","ERROR","closable","Option","Select","Text","Typography","SelectParentCategory","mainCategories","handleChangeParentId","item","error","classNames","defaultValue","parentId","id","name","map","mainCat","value","AppMap","withScriptjs","withGoogleMap","handleSelectCoords","marker","defaultZoom","coordinatesLatitude","length","isNaN","Number","defaultCenter","lat","lng","coordinatesLongitude","e","latLng","position","baseURL","axios","interceptors","request","use","config","headers","timeout","ContractorTypesEnum","ContractorStatusEnum","ImagesList","images","editMode","removeImage","img","shape","DeleteOutlined","src","attachmentLink","String","AppSearchField","placeholder","OrderStatusEnum","getContractorsState","state","contractors","getContractorsListState","getCurrentContractorState","currentContractor","getFilteredContractorsListState","searchText","filter","categoryId","createSelector","contractor","isDeleted","contractorType","CUSTOMER","SUPPLIER","toLowerCase","includes","Boolean","categories","find","category","getContractorsLoadingState","contractorsLoading","getContractorsActionStatusState","contractorsActionStatus","getContractorsErrorMessage","getContractorsCountState","getCustomersCountState","getSuppliersCountState","getDeletedContractorCountState","getContractorImagesState","contractorImages","getContractorImageUploadingState","contractorImageUploading","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","ContractorsStatistic","activeIndex","setActiveIndex","allContractorsCount","useSelector","customersCount","suppliersCount","deletedContractorsCount","data","useMemo","ResponsiveContainer","PieChart","height","Pie","activeShape","dataKey","onMouseEnter","_","index","getOrdersState","orders","getOrdersListState","getFilteredOrdersListState","order","orderStatus","NEW","DELETED","ARCHIVED","getOrdersLoadingState","ordersLoading","getOrdersErrorMessageState","getOrderActionStatusState","orderActionStatus","getCurrentOrderState","currentOrder","getAllOrdersCountState","getActiveOrdersCountState","getDeletedOrdersCountState","getHistoryOrdersCountState","getOrderImagesState","orderImages","getOrderImagesLoadingState","getOrderChatsState","orderChats","OrdersStatistic","allOrdersCount","activeOrdersCount","deletedOrdersCount","historyOrdersCount","contractorsApi","getContractors","a","get","createContractor","formData","post","updateContractor","patch","deleteContractor","contractorId","delete","getContractorById","removeContractorAttachment","attachmentId","attachmentsApi","addAttachment","attachment","removeAttachment","contractorActions","imageId","showError","text","dispatch","console","log","SUCCESS","addContractorImage","image","imageOut","ordersApi","getOrders","createOrder","getOrderById","orderId","deleteOrder","updateOrder","removeOrderAttachment","chatsApi","getOrderChats","getAllChatMessage","chatId","ordersActions","orderImageUploading","addOrderImage","Title","Content","HomePage","useDispatch","moment","locale","formatDate","date","format","Column","Table","getNumberSorter","fieldName","compare","b","getStringSorter","localeCompare","OrdersPage","setSearchText","query","URLSearchParams","ordersError","history","useHistory","clearState","useCallback","currentTarget","showSorterTooltip","dataSource","rowKey","expandable","expandedRowRender","description","push","handleViewOrder","window","confirm","danger","dataIndex","render","colors","color","sorter","creationDate","defaultSortOrder","actualDate","replace","categoryName","orderSchema","yup","max","required","totalSum","typeError","comment","supplierSchema","phoneNumber","min","address","contactName","webSite","eMail","email","customerSchema","otp","matches","categorySchema","getCategoriesState","getAllCategoriesState","getCategoriesErrorMessageState","getCategoriesLoadingState","isLoadingCategories","getMainCategoriesState","getSubCategoriesState","getDeletedCategoriesState","getCategoryInProcessEditState","categoryInProcessEdit","getCategoriesActionStatusState","categoriesActionStatus","getCategoriesTreeDataState","subCategories","subCats","subCat","key","children","categoriesApi","getAllCategories","deleteAllCategories","addCategory","getCategoryById","deleteCategoryById","updateCategoryById","categoriesActions","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","OrderCreateForm","control","errors","rules","field","validateStatus","help","TextArea","SHOW_ALL","TreeSelect","OrderCreatePage","useForm","resolver","yupResolver","reset","handleSubmit","formState","selectedCategories","setSelectedCategories","orderError","orderLoadingState","orderUploading","categoriesTree","categoriesError","clearOrderState","clearCategoriesState","handleUploadImage","target","files","base64","ext","pop","content","onSubmit","newOrder","attachments","customerId","level","treeData","treeCheckable","showCheckedStrategy","style","marginBottom","maxTagCount","removeNewOrderImage","disabled","Object","keys","OrderEditableField","isTextArea","isNumberInput","OrderInfoBody","handleSelectCategories","handleRemoveImage","handleAddImage","imageUploading","OrderDescription","column","label","OrderPage","setEditMode","useParams","toggleEditMode","prev","updatedOrder","editActionsButtons","actionsButtons","alert","ghost","onBack","back","extra","removeOrderImage","ContractorsPage","contractorsError","UNKNOWN","ContractorEditableField","str","n","maxLength","href","rel","substr","ContractorInfoBody","registeringType","ContractorDescription","handleSelectRegType","toggleShowMap","Group","contacts","ContractorPage","setLatLng","setRegisteringType","showMap","setShowMap","contractorActionStatus","contractorError","contractorLoadingState","coordinates","newContractor","slice","handleDeleteContractor","handleCancelEdit","checkDisabledBtn","actionButtons","containerElement","mapElement","googleMapURL","loadingElement","removeContractorImage","ContractorField","subtitle","textArea","InputField","Input","fields","SupplierDescrForm","CustomerDescrForm","ContractorCreatePage","contractorLoading","clearContractorsState","contractorsList","createContractorProfile","block","removeNewContractorImage","CategoryEditableField","currentValue","tooltip","stopPropagation","CategoryActions","disabledBtn","onSave","onEdit","onRemove","Panel","Collapse","CategoriesPage","editableCategory","setEditableCategory","categoriesLoading","categoryInEditProcess","onCategoryNameChange","accordion","header","MainCategoryActions","renderItem","actions","Meta","CategoryCreatePage","createdCategory","createCategory","DeletedCategoriesPage","deletedCategories","updateCategory","onRestore","OrderChatsPage","chatsLoading","chats","Empty","PRESENTED_IMAGE_SIMPLE","chat","bodyStyle","display","Grid","supplierId","supplierName","customerName","chatsActions","messages","getChatsState","getChatLoadinState","getChatMessagesState","ChatPage","messagesLoading","getChatMessages","bordered","mark","timeStamp","senderName","MainLayout","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","currentCategory","categoriesReducer","newCategoriesList","contractorsReducer","ordersReducer","chatsReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","auth","createStore","applyMiddleware","thunk","ReactDOM","store","document","getElementById"],"mappings":"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","file":"static/js/main.8788c41c.chunk.js","sourcesContent":["import { Control, FieldError } from \"react-hook-form\";\r\n\r\nexport type StateSpecializationType = {\r\n  [key: string]: {\r\n    IDs: string[];\r\n    names: string[] | [];\r\n  };\r\n};\r\n\r\nexport type ActionsCreatorsTypes<T> = T extends { [key: string]: infer U }\r\n  ? U\r\n  : never;\r\n\r\nexport enum ActionStatusEnum {\r\n  SUCCESS = \"SUCCESS\",\r\n  ERROR = \"ERROR\",\r\n  NEVER = \"NEVER\",\r\n}\r\n\r\nexport type OtpFormDataType = {\r\n  phoneNumber: string;\r\n  otp: string;\r\n};\r\n\r\nexport type EditableFieldPropsType<T, F> = {\r\n  editMode: boolean;\r\n  fieldName: F;\r\n  control: Control<T, object>;\r\n  error?: FieldError;\r\n  defaultValue?: string | number;\r\n  isTextArea?: boolean;\r\n  isNumberInput?: boolean;\r\n  placeholder?: string;\r\n  currentValue?: string;\r\n  maxLength?: number;\r\n};\r\n\r\nexport type Result = {\r\n  id: number;\r\n  error: string;\r\n};\r\n","import React from \"react\";\r\nimport { Affix, Layout, Menu } from \"antd\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst { Header } = Layout;\r\n\r\nconst AppHeader = () => {\r\n  const [currentLocation, setCurrentLocation] = React.useState<string[]>([\"/\"]);\r\n\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    setCurrentLocation([location.pathname.split(\"/\")[1]]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Affix offsetTop={0}>\r\n      <Header className=\"header\">\r\n        <div className=\"header__logo\">\r\n          <NavLink to=\"/\">Логотип</NavLink>\r\n        </div>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          defaultSelectedKeys={[\"/home\"]}\r\n          selectedKeys={currentLocation}\r\n          className=\"header__menu\"\r\n        >\r\n          <Menu.Item key=\"home\">\r\n            <NavLink to=\"/home\">Главная</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"orders\">\r\n            <NavLink to=\"/orders\">Заявки</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"contractors\">\r\n            <NavLink to=\"/contractors\">Контрагенты</NavLink>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"categories\">\r\n            <NavLink to=\"/categories\">Категории</NavLink>\r\n          </Menu.Item>\r\n        </Menu>\r\n        <div className=\"header__logout\">\r\n          <NavLink to=\"/suppliers\">Выйти</NavLink>\r\n        </div>\r\n      </Header>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default AppHeader;\r\n","import React from \"react\";\r\n\r\nimport { Layout, Menu, Affix } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  ClusterOutlined,\r\n  GroupOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nconst AppSideBar = () => {\r\n  const [currentLocation, setCurrentLocation] = React.useState<string[]>([\"/\"]);\r\n\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    setCurrentLocation([`${location.pathname}${location.search}`]);\r\n  }, [location]);\r\n\r\n  return (\r\n    <Affix offsetTop={64}>\r\n      <Sider width={200} className=\"site-layout-background sidebar\">\r\n        <Menu\r\n          mode=\"inline\"\r\n          className=\"sidebar__menu\"\r\n          selectedKeys={currentLocation}\r\n        >\r\n          <SubMenu key=\"sub1\" icon={<GroupOutlined />} title=\"Заявки\">\r\n            <Menu.Item key=\"/orders\">\r\n              <NavLink to=\"/orders\">Все заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=active\">\r\n              <NavLink to=\"/orders?filter=active\">Активные заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=archived\">\r\n              <NavLink to=\"/orders?filter=archived\">Архивные заявки</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/orders?filter=deleted\">\r\n              <NavLink to=\"/orders?filter=deleted\">Удаленные заявки</NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"/orders/create\">\r\n              <NavLink to=\"/orders/create\">Создать заявку</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub3\" icon={<UserOutlined />} title=\"Контрагенты\">\r\n            <Menu.Item key=\"/customcontractorsers\">\r\n              <NavLink to=\"/contractors\">Все контрагенты</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=customers\">\r\n              <NavLink to=\"/contractors?filter=customers\">Заказчики</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=supplier\">\r\n              <NavLink to=\"/contractors?filter=supplier\">Поставщики</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors?filter=deleted\">\r\n              <NavLink to=\"/contractors?filter=deleted\">Удаленные</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contractors/create\">\r\n              <NavLink to=\"/contractors/create\">Создать контрагента</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub4\" icon={<ClusterOutlined />} title=\"Категории\">\r\n            <Menu.Item key=\"/categories\">\r\n              <NavLink to=\"/categories\">Все категории</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/categories/deleted\">\r\n              <NavLink to=\"/categories/deleted\">Удаленные категории</NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/categories/create\">\r\n              <NavLink to=\"/categories/create\">Создать категорию</NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n    </Affix>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppSideBar);\r\n","import { Spin } from \"antd\";\r\nimport React from \"react\";\r\n\r\ntype AppPreloaderPropsType = {\r\n  size?: \"small\" | \"large\" | \"default\";\r\n};\r\n\r\nconst AppPreloader: React.FC<AppPreloaderPropsType> = ({\r\n  size = \"default\",\r\n}) => {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <Spin size={size} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppPreloader;\r\n","import React from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { Spin } from \"antd\";\r\n\r\ntype UploadFileFormPropsType = {\r\n  onChange: (e: Event) => void;\r\n  isUploading: boolean;\r\n};\r\n\r\nconst UploadFileForm: React.FC<UploadFileFormPropsType> = ({\r\n  onChange,\r\n  isUploading,\r\n}) => {\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  const handleClick = () => {\r\n    inputRef.current?.click();\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const input = inputRef.current;\r\n    if (inputRef) {\r\n      input?.addEventListener(\"change\", onChange);\r\n    }\r\n    return () => {\r\n      input?.removeEventListener(\"change\", onChange);\r\n    };\r\n  }, [onChange]);\r\n\r\n  return (\r\n    <div className=\"upload\">\r\n      <div className=\"upload__btn\" onClick={handleClick}>\r\n        <div className=\"upload__btn-body\">\r\n          {isUploading ? (\r\n            <Spin />\r\n          ) : (\r\n            <>\r\n              <PlusOutlined /> <div>Загрузить</div>\r\n            </>\r\n          )}\r\n        </div>\r\n        <input ref={inputRef} type=\"file\" hidden accept=\"image/*\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFileForm;\r\n","import { Alert } from \"antd\";\r\nimport React from \"react\";\r\nimport { ActionStatusEnum } from \"../models/types\";\r\n\r\ntype AlertPropsType = {\r\n  status: string;\r\n  errorMessage?: string | null;\r\n  successMessage?: string;\r\n  onClose: () => void;\r\n};\r\n\r\nconst AppAlert: React.FC<AlertPropsType> = ({\r\n  status,\r\n  errorMessage,\r\n  successMessage,\r\n  onClose,\r\n}) => {\r\n  if (status === ActionStatusEnum.NEVER) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Alert\r\n      className=\"error\"\r\n      message={\r\n        status === ActionStatusEnum.ERROR ? errorMessage : successMessage\r\n      }\r\n      type={status === ActionStatusEnum.ERROR ? \"error\" : \"success\"}\r\n      closable\r\n      onClose={onClose}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppAlert;\r\n","import { Select, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { CategoryType } from \"../models/Categories\";\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\ntype SelectParentCategoryPropsType = {\r\n  mainCategories: CategoryType[] | null;\r\n  handleChangeParentId: (id: number) => void;\r\n  item?: CategoryType;\r\n  error?: string;\r\n};\r\n\r\nconst SelectParentCategory: React.FC<SelectParentCategoryPropsType> = ({\r\n  mainCategories,\r\n  handleChangeParentId,\r\n  item,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={classNames(\"categories__select-wrapper\", {\r\n        \"categories__select-error\": error,\r\n      })}\r\n    >\r\n      <Text className=\"subtitle\">Выберите родительскую категорию</Text>\r\n      <Select\r\n        defaultValue={item ? item.parentId : 0}\r\n        onChange={handleChangeParentId}\r\n        className=\"categories__select\"\r\n      >\r\n        {mainCategories &&\r\n          [{ id: 0, name: \"ОСНОВНАЯ КАТЕГОРИЯ\" }, ...mainCategories].map(\r\n            (mainCat) => {\r\n              return (\r\n                <Option value={mainCat.id} key={mainCat.id}>\r\n                  {mainCat.name}\r\n                </Option>\r\n              );\r\n            }\r\n          )}\r\n      </Select>\r\n      <Text className=\"error-text\">{error}</Text>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectParentCategory;\r\n","import React from \"react\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  WithGoogleMapProps,\r\n  WithScriptjsProps,\r\n} from \"react-google-maps\";\r\nimport { CoordinatesType } from \"../models/Contractors\";\r\n\r\ntype AppMapPropsType = {\r\n  handleSelectCoords: (latLng: google.maps.LatLng | null) => void;\r\n  marker: CoordinatesType | null;\r\n};\r\n\r\nconst AppMap: React.ComponentClass<\r\n  WithGoogleMapProps & WithScriptjsProps & AppMapPropsType\r\n> = withScriptjs(\r\n  withGoogleMap(({ handleSelectCoords, marker }) => {\r\n    const onMapClick = (\r\n      e: google.maps.MouseEvent | google.maps.IconMouseEvent\r\n    ) => {\r\n      handleSelectCoords(e.latLng);\r\n    };\r\n\r\n    return (\r\n      <GoogleMap\r\n        defaultZoom={\r\n          marker\r\n            ? marker.coordinatesLatitude.length > 0 &&\r\n              !isNaN(Number(marker.coordinatesLatitude))\r\n              ? 12\r\n              : 7\r\n            : 7\r\n        }\r\n        defaultCenter={\r\n          marker\r\n            ? marker.coordinatesLatitude.length > 0 &&\r\n              !isNaN(Number(marker.coordinatesLatitude))\r\n              ? {\r\n                  lat: Number(marker.coordinatesLatitude),\r\n                  lng: Number(marker.coordinatesLongitude),\r\n                }\r\n              : { lat: 51.2146889644867, lng: 68.80153486533352 }\r\n            : { lat: 51.2146889644867, lng: 68.80153486533352 }\r\n        }\r\n        onClick={onMapClick}\r\n      >\r\n        {marker && (\r\n          <Marker\r\n            position={{\r\n              lat: Number(marker.coordinatesLatitude),\r\n              lng: Number(marker.coordinatesLongitude),\r\n            }}\r\n          />\r\n        )}\r\n      </GoogleMap>\r\n    );\r\n  })\r\n);\r\n\r\nexport default AppMap;\r\n","import axios from \"axios\";\r\n\r\n// export const baseURL = \"https://office.e-health.kz:8889\";\r\nexport const baseURL = \"http://192.168.10.246:8888\";\r\n\r\naxios.interceptors.request.use((config) => {\r\n  config.headers[\"Content-Security-Policy-Report-Only\"] = \"default-src 'none';\";\r\n  config.headers[\"Authorization\"] = \"Basic YWRtaW46Z2hidnRo\";\r\n  config.baseURL = baseURL;\r\n  config.timeout = 5000;\r\n  return config;\r\n});\r\n\r\nexport { axios };\r\n","import { AttachmentInType, AttachmentOutType } from \"./Attachments\";\r\nimport { CategoryInType, CategoryOutType } from \"./Categories\";\r\n\r\nexport type CoordinatesType = {\r\n  coordinatesLatitude: string;\r\n  coordinatesLongitude: string;\r\n};\r\n\r\nexport type ContactsType = {\r\n  address?: string;\r\n  webSite?: string;\r\n  eMail?: string;\r\n};\r\n\r\nexport enum ContractorTypesEnum {\r\n  UNKNOWN = \"UNKNOWN\",\r\n  SUPPLIER = \"SUPPLIER\",\r\n  CUSTOMER = \"CUSTOMER\",\r\n}\r\n\r\nexport enum ContractorStatusEnum {\r\n  NEW = \"NEW\",\r\n  REGISTERED = \"REGISTERED\",\r\n  BANNED = \"BANNED\",\r\n}\r\n\r\nexport type ContractorType = {\r\n  id: number;\r\n  isDeleted: boolean;\r\n  name: string;\r\n  contactName: string;\r\n  phoneNumber: string;\r\n  description: string;\r\n  location: string;\r\n  coordinates: CoordinatesType;\r\n  contacts: ContactsType;\r\n  contractorType: ContractorTypesEnum;\r\n  categories: CategoryOutType[];\r\n  attachments: AttachmentOutType[];\r\n  rating: number;\r\n};\r\n\r\nexport type ContractorStringSortFieldsType =\r\n  | \"contractorType\"\r\n  | \"name\"\r\n  | \"location\";\r\n\r\nexport type ContractorNumberSortFieldsType = \"rating\";\r\n\r\nexport type AddContractorFormDataType = {\r\n  name: string;\r\n  contactName: string;\r\n  phoneNumber: string;\r\n  description?: string;\r\n  location: string;\r\n  coordinates: CoordinatesType;\r\n  contacts: ContactsType;\r\n  contractorType: ContractorTypesEnum;\r\n  categories: CategoryInType[];\r\n  attachments: AttachmentInType[];\r\n};\r\n\r\nexport type SupplierDescrFormDataType = {\r\n  name: string;\r\n  phoneNumber: string;\r\n  contactName: string;\r\n  location: string;\r\n  webSite: string;\r\n  eMail: string;\r\n  address: string;\r\n  description?: string;\r\n};\r\nexport type CustomerDescrFormDataType = {\r\n  name: string;\r\n  phoneNumber: string;\r\n  contactName: string;\r\n  location: string;\r\n};\r\n\r\nexport type SupplierFieldsNameType =\r\n  | \"name\"\r\n  | \"phoneNumber\"\r\n  | \"contactName\"\r\n  | \"location\"\r\n  | \"webSite\"\r\n  | \"eMail\"\r\n  | \"address\"\r\n  | \"description\";\r\nexport type CustomerFieldsNameType =\r\n  | \"name\"\r\n  | \"phoneNumber\"\r\n  | \"contactName\"\r\n  | \"location\";\r\n\r\nexport type ContractorInType = {\r\n  contractorId: number;\r\n};\r\n\r\nexport type ContractorOutType = {\r\n  contractorId: number;\r\n  contractorName: string;\r\n};\r\n\r\nexport type ContractorsQueryFilterType =\r\n  | \"customers\"\r\n  | \"supplier\"\r\n  | \"deleted\"\r\n  | null;\r\n\r\nexport type UserOutType = {\r\n  id: number;\r\n  phoneNumber: string;\r\n  pushToken: string;\r\n  secretToken: string;\r\n  isBlocked: boolean;\r\n};\r\nexport type UserInType = {\r\n  phoneNumber: string;\r\n  password?: string;\r\n  smsCode: string;\r\n  pushToken?: string;\r\n};\r\nexport type UserCheckType = {\r\n  phoneNumber: string;\r\n  secretToken: string;\r\n};\r\nexport type UserCredentialsType = {\r\n  userName: string;\r\n  secretToken: string;\r\n};\r\n","import React from \"react\";\r\nimport { baseURL } from \"../api/axios\";\r\nimport { AttachmentOutType } from \"../models/Attachments\";\r\nimport { DeleteOutlined } from \"@ant-design/icons\";\r\nimport { Button, Image } from \"antd\";\r\n\r\ntype ImagesListPropsType = {\r\n  images: AttachmentOutType[];\r\n  editMode: boolean;\r\n  removeImage: (imageId: number) => void;\r\n};\r\n\r\nconst ImagesList: React.FC<ImagesListPropsType> = ({\r\n  images,\r\n  editMode,\r\n  removeImage,\r\n}) => {\r\n  return (\r\n    <div className=\"order__images-list\">\r\n      {images &&\r\n        images.map((img) => (\r\n          <div key={String(img.id)} className=\"order__image-wrapper\">\r\n            {editMode && (\r\n              <Button\r\n                type=\"default\"\r\n                shape=\"circle\"\r\n                icon={<DeleteOutlined />}\r\n                size=\"middle\"\r\n                className=\"order__image-delete\"\r\n                onClick={() => removeImage(img.id)}\r\n              />\r\n            )}\r\n            <Image\r\n              width={200}\r\n              src={`${baseURL}${img.attachmentLink}`}\r\n              className=\"order__image\"\r\n            />\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\nexport default ImagesList;\r\n","import { Input } from \"antd\";\r\nimport React, { ChangeEventHandler } from \"react\";\r\n\r\ntype AppSearchFieldPropsType = {\r\n  value: string;\r\n  onChange: ChangeEventHandler<HTMLInputElement>;\r\n  placeholder: string;\r\n};\r\n\r\nconst AppSearchField: React.FC<AppSearchFieldPropsType> = ({\r\n  value,\r\n  onChange,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <div className=\"filter\">\r\n      <div className=\"filter__input\">\r\n        <Input placeholder={placeholder} value={value} onChange={onChange} />\r\n      </div>\r\n      <div className=\"filter__actions\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSearchField;\r\n","import { createSelector } from \"reselect\";\r\nimport {\r\n  ContractorsQueryFilterType,\r\n  ContractorTypesEnum,\r\n} from \"../../models/Contractors\";\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getContractorsState = (state: AppStateType) => state.contractors;\r\n\r\nconst getContractorsListState = (state: AppStateType) =>\r\n  state.contractors.contractors;\r\n\r\nexport const getCurrentContractorState = (state: AppStateType) =>\r\n  getContractorsState(state).currentContractor;\r\n\r\nexport const getFilteredContractorsListState = (\r\n  searchText: string,\r\n  filter: ContractorsQueryFilterType,\r\n  categoryId: string | null\r\n) =>\r\n  createSelector([getContractorsListState], (contractors) => {\r\n    return contractors\r\n      ?.filter((contractor) => {\r\n        if (filter === \"deleted\") {\r\n          return contractor.isDeleted;\r\n        } else if (filter === \"customers\") {\r\n          return contractor.contractorType === ContractorTypesEnum.CUSTOMER;\r\n        } else if (filter === \"supplier\") {\r\n          return contractor.contractorType === ContractorTypesEnum.SUPPLIER;\r\n        }\r\n        return true;\r\n      })\r\n      ?.filter((contractor) =>\r\n        contractor.name.toLowerCase().includes(searchText.toLowerCase())\r\n      )\r\n      ?.filter((contractor) => {\r\n        if (categoryId) {\r\n          return Boolean(\r\n            contractor.categories.find((category) => {\r\n              return (\r\n                category.categoryId === Number(categoryId) ||\r\n                category.parentId === Number(categoryId)\r\n              );\r\n            })\r\n          );\r\n        }\r\n        return true;\r\n      });\r\n  });\r\n\r\nexport const getContractorsLoadingState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorsLoading;\r\nexport const getContractorsActionStatusState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorsActionStatus;\r\nexport const getContractorsErrorMessage = (state: AppStateType) =>\r\n  getContractorsState(state).errorMessage;\r\n\r\nexport const getContractorsCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", null, null)],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getCustomersCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"customers\", null)],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getSuppliersCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"supplier\", null)],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getDeletedContractorCountState = createSelector(\r\n  [getFilteredContractorsListState(\"\", \"deleted\", null)],\r\n  (contractors) => contractors?.length\r\n);\r\n\r\nexport const getContractorImagesState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorImages;\r\nexport const getContractorImageUploadingState = (state: AppStateType) =>\r\n  getContractorsState(state).contractorImageUploading;\r\n","import { AttachmentInType, AttachmentOutType } from \"./Attachments\";\r\nimport { CategoryInType, CategoryOutType } from \"./Categories\";\r\nimport { ContractorInType, ContractorOutType } from \"./Contractors\";\r\n\r\nexport type OrderType = {\r\n  id: number;\r\n  creationDate: number;\r\n  actualDate: number;\r\n  comment?: string;\r\n  title: string;\r\n  description?: string;\r\n  totalSum: number;\r\n  orderStatus: OrderStatusEnum;\r\n  customerId: number;\r\n  customerPhoneNumber: string;\r\n  categories: CategoryOutType[];\r\n  contractors: ContractorOutType[];\r\n  attachments: AttachmentOutType[];\r\n};\r\n\r\nexport type OrderNumberSortFieldsType =\r\n  | \"actualDate\"\r\n  | \"creationDate\"\r\n  | \"totalSum\";\r\nexport type OrderStringSortFieldsType = \"title\" | \"orderStatus\";\r\n\r\nexport enum OrderStatusEnum {\r\n  NEW = \"NEW\",\r\n  ARCHIVED = \"ARCHIVED\",\r\n  DELETED = \"DELETED\",\r\n}\r\nexport type OrderFieldsNameType =\r\n  | \"title\"\r\n  | \"totalSum\"\r\n  | \"comment\"\r\n  | \"description\";\r\n\r\nexport type AddOrderFormData = {\r\n  title: string;\r\n  comment: string;\r\n  totalSum: number;\r\n  categories: CategoryInType[];\r\n  contractors: ContractorInType[] | [];\r\n  attachments: AttachmentInType[];\r\n  customerId: number;\r\n  description?: string;\r\n};\r\nexport type DescriptionOrderFormData = {\r\n  title: string;\r\n  description?: string;\r\n  comment: string;\r\n  totalSum: number;\r\n};\r\n\r\nexport type OrdersQueryFilterType = \"active\" | \"deleted\" | \"archived\" | null;\r\nexport type SortByOrdersFieldsType = \"title\" | \"totalSum\" | \"creationDate\";\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\r\nimport { Typography } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getContractorsCountState,\r\n  getCustomersCountState,\r\n  getDeletedContractorCountState,\r\n  getSuppliersCountState,\r\n} from \"../../../store/selectors/contractors\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst renderActiveShape = (props: any) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${payload.name} ${value} шт`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Процент ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst ContractorsStatistic = () => {\r\n  const [activeIndex, setActiveIndex] = React.useState<\r\n    number | number[] | undefined\r\n  >();\r\n\r\n  const onPieEnter = (_: any, index: number) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const allContractorsCount = useSelector(getContractorsCountState);\r\n  const customersCount = useSelector(getCustomersCountState);\r\n  const suppliersCount = useSelector(getSuppliersCountState);\r\n  const deletedContractorsCount = useSelector(getDeletedContractorCountState);\r\n\r\n  const data = React.useMemo(() => {\r\n    return [\r\n      { name: \"Заказчиков\", value: customersCount ? customersCount : 0 },\r\n      { name: \"Поставщиков\", value: suppliersCount ? suppliersCount : 0 },\r\n      {\r\n        name: \"Удаленные\",\r\n        value: deletedContractorsCount ? deletedContractorsCount : 0,\r\n      },\r\n    ];\r\n  }, [customersCount, deletedContractorsCount, suppliersCount]);\r\n\r\n  return (\r\n    <div className=\"statistic__pie\">\r\n      <Text className=\"statistic__pie-title\">Контрагенты</Text>\r\n      <Text className=\"statistic__pie-subtitle\">\r\n        Всего контрагентов: {allContractorsCount}\r\n      </Text>\r\n      {data && (\r\n        <ResponsiveContainer>\r\n          <PieChart width={400} height={400}>\r\n            <Pie\r\n              activeIndex={activeIndex}\r\n              activeShape={renderActiveShape}\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={60}\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n              onMouseEnter={onPieEnter}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContractorsStatistic;\r\n","import { createSelector } from \"reselect\";\r\nimport { OrdersQueryFilterType, OrderStatusEnum } from \"../../models/Orders\";\r\n\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getOrdersState = (state: AppStateType) => state.orders;\r\nconst getOrdersListState = (state: AppStateType) => state.orders.orders;\r\n\r\nexport const getFilteredOrdersListState = (\r\n  searchText: string,\r\n  filter: OrdersQueryFilterType,\r\n  categoryId: string | null\r\n) =>\r\n  createSelector([getOrdersListState], (orders) => {\r\n    return orders\r\n      ?.filter((order) => {\r\n        if (filter === \"active\") {\r\n          return order.orderStatus === OrderStatusEnum.NEW;\r\n        } else if (filter === \"deleted\") {\r\n          return order.orderStatus === OrderStatusEnum.DELETED;\r\n        } else if (filter === \"archived\") {\r\n          return order.orderStatus === OrderStatusEnum.ARCHIVED;\r\n        }\r\n        return true;\r\n      })\r\n      ?.filter((order) =>\r\n        order.title.toLowerCase().includes(searchText.toLowerCase())\r\n      )\r\n      ?.filter((order) => {\r\n        if (categoryId) {\r\n          return Boolean(\r\n            order.categories.find((category) => {\r\n              return (\r\n                category.categoryId === Number(categoryId) ||\r\n                category.parentId === Number(categoryId)\r\n              );\r\n            })\r\n          );\r\n        }\r\n        return true;\r\n      });\r\n  });\r\n\r\nexport const getOrdersLoadingState = (state: AppStateType) =>\r\n  getOrdersState(state).ordersLoading;\r\n\r\nexport const getOrdersErrorMessageState = (state: AppStateType) =>\r\n  getOrdersState(state).errorMessage;\r\n\r\nexport const getOrderActionStatusState = (state: AppStateType) =>\r\n  getOrdersState(state).orderActionStatus;\r\n\r\nexport const getCurrentOrderState = (state: AppStateType) =>\r\n  getOrdersState(state).currentOrder;\r\n\r\nexport const getAllOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", null, null)],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getActiveOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"active\", null)],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getDeletedOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"deleted\", null)],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getHistoryOrdersCountState = createSelector(\r\n  [getFilteredOrdersListState(\"\", \"archived\", null)],\r\n  (orders) => orders?.length\r\n);\r\n\r\nexport const getOrderImagesState = (state: AppStateType) =>\r\n  getOrdersState(state).orderImages;\r\n\r\nexport const getOrderImagesLoadingState = (state: AppStateType) =>\r\n  getOrdersState(state).ordersLoading;\r\nexport const getOrderChatsState = (state: AppStateType) =>\r\n  getOrdersState(state).orderChats;\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Sector, ResponsiveContainer } from \"recharts\";\r\nimport { Typography } from \"antd\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getActiveOrdersCountState,\r\n  getAllOrdersCountState,\r\n  getDeletedOrdersCountState,\r\n  getHistoryOrdersCountState,\r\n} from \"../../../store/selectors/orders\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst renderActiveShape = (props: any) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx,\r\n    cy,\r\n    midAngle,\r\n    innerRadius,\r\n    outerRadius,\r\n    startAngle,\r\n    endAngle,\r\n    fill,\r\n    payload,\r\n    percent,\r\n    value,\r\n  } = props;\r\n\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\r\n        {payload.name}\r\n      </text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path\r\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\r\n        stroke={fill}\r\n        fill=\"none\"\r\n      />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        textAnchor={textAnchor}\r\n        fill=\"#333\"\r\n      >{`${payload.name} ${value} шт`}</text>\r\n      <text\r\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\r\n        y={ey}\r\n        dy={18}\r\n        textAnchor={textAnchor}\r\n        fill=\"#999\"\r\n      >\r\n        {`(Процент ${(percent * 100).toFixed(2)}%)`}\r\n      </text>\r\n    </g>\r\n  );\r\n};\r\n\r\nconst OrdersStatistic = () => {\r\n  const [activeIndex, setActiveIndex] = React.useState<\r\n    number | number[] | undefined\r\n  >();\r\n\r\n  const onPieEnter = (_: any, index: number) => {\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const allOrdersCount = useSelector(getAllOrdersCountState);\r\n  const activeOrdersCount = useSelector(getActiveOrdersCountState);\r\n  const deletedOrdersCount = useSelector(getDeletedOrdersCountState);\r\n  const historyOrdersCount = useSelector(getHistoryOrdersCountState);\r\n\r\n  const data = React.useMemo(() => {\r\n    return [\r\n      { name: \"Активных\", value: activeOrdersCount ? activeOrdersCount : 0 },\r\n      { name: \"Архивные\", value: historyOrdersCount ? historyOrdersCount : 0 },\r\n      {\r\n        name: \"Удаленные\",\r\n        value: deletedOrdersCount ? deletedOrdersCount : 0,\r\n      },\r\n    ];\r\n  }, [activeOrdersCount, deletedOrdersCount, historyOrdersCount]);\r\n\r\n  return (\r\n    <div className=\"statistic__pie\">\r\n      <Text className=\"statistic__pie-title\">Заявки</Text>\r\n      <Text className=\"statistic__pie-subtitle\">\r\n        Всего заявок: {allOrdersCount}\r\n      </Text>\r\n      {data && (\r\n        <ResponsiveContainer>\r\n          <PieChart width={400} height={400}>\r\n            <Pie\r\n              activeIndex={activeIndex}\r\n              activeShape={renderActiveShape}\r\n              data={data}\r\n              cx=\"50%\"\r\n              cy=\"50%\"\r\n              innerRadius={60}\r\n              outerRadius={80}\r\n              fill=\"#8884d8\"\r\n              dataKey=\"value\"\r\n              onMouseEnter={onPieEnter}\r\n            />\r\n          </PieChart>\r\n        </ResponsiveContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrdersStatistic;\r\n","import { axios } from \"../api/axios\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorType,\r\n} from \"../models/Contractors\";\r\n\r\nexport const contractorsApi = {\r\n  // contractors\r\n  getContractors: async (): Promise<ContractorType[]> => {\r\n    const { data } = await axios.get<ContractorType[]>(\"contractors\");\r\n    return data;\r\n  },\r\n  createContractor: async (\r\n    formData: AddContractorFormDataType\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.post<ContractorType[]>(\r\n      \"contractors\",\r\n      formData\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/${id}\r\n\r\n  updateContractor: async (\r\n    formData: AddContractorFormDataType,\r\n    id: number\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.patch(`/contractors/${id}`, formData);\r\n    return data;\r\n  },\r\n  deleteContractor: async (contractorId: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/contractors/${contractorId}`\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/${id}\r\n\r\n  getContractorById: async (\r\n    contractorId: number\r\n  ): Promise<ContractorType[]> => {\r\n    const { data } = await axios.get<ContractorType[]>(\r\n      `/contractors/${contractorId}`\r\n    );\r\n    return data;\r\n  },\r\n\r\n  // contractors/{orderId}/attachments/{attachmentId}\r\n\r\n  removeContractorAttachment: async (\r\n    contractorId: number,\r\n    attachmentId: number\r\n  ): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/contractors/${contractorId}/attachments/${attachmentId}`\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import axios from \"axios\";\r\nimport { AttachmentOutType, AttachmentType } from \"../models/Attachments\";\r\n\r\nexport const attachmentsApi = {\r\n  addAttachment: async (\r\n    attachment: AttachmentType\r\n  ): Promise<AttachmentOutType[]> => {\r\n    const { data } = await axios.post<AttachmentOutType[]>(\r\n      \"attachments\",\r\n      attachment\r\n    );\r\n    return data;\r\n  },\r\n  removeAttachment: async (id: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(`attachments/${id}`);\r\n    return data;\r\n  },\r\n};\r\n","import { AttachmentOutType } from \"./../../models/Attachments\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { AppStateType } from \"../store\";\r\nimport { Dispatch } from \"redux\";\r\nimport { contractorsApi } from \"../../services/contractorsApi\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport { attachmentsApi } from \"../../services/attachmentsApi\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorType,\r\n} from \"../../models/Contractors\";\r\n\r\nexport const contractorActions = {\r\n  setCurrentContractor: (currentContractor: ContractorType | null) => {\r\n    return {\r\n      type: \"SET_CURRENT_CONTRACTOR\",\r\n      payload: { currentContractor },\r\n    } as const;\r\n  },\r\n  setContractorsLoading: (contractorsLoading: boolean) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_LOADING\",\r\n      payload: { contractorsLoading },\r\n    } as const;\r\n  },\r\n  setContractorsActionstatus: (contractorsActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_ACTION_STATUS\",\r\n      payload: { contractorsActionStatus },\r\n    } as const;\r\n  },\r\n  setContractorsErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS_ERROR_MESSAGE\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setContractors: (contractors: ContractorType[]) => {\r\n    return {\r\n      type: \"SET_CONTRACTORS\",\r\n      payload: { contractors },\r\n    } as const;\r\n  },\r\n  removeContractor: (contractorId: number) => {\r\n    return {\r\n      type: \"REMOVE_CONTRACTOR\",\r\n      payload: { contractorId },\r\n    } as const;\r\n  },\r\n  setContractorImageUploading: (contractorImageUploading: boolean) => {\r\n    return {\r\n      type: \"SET_CONTRACTOR_IMAGE_UPLOADING\",\r\n      payload: { contractorImageUploading },\r\n    } as const;\r\n  },\r\n  setContractorImages: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"SET_CONTRACTOR_IMAGES\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  addContractorImage: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"ADD_CONTRACTOR_IMAGE\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  removeContractorImage: (imageId: number) => {\r\n    return {\r\n      type: \"REMOVE_CONTRACTOR_IMAGE\",\r\n      payload: { imageId },\r\n    } as const;\r\n  },\r\n  clearContractorImages: () => {\r\n    return {\r\n      type: \"CLEAR_CONTRACTOR_IMAGES\",\r\n    } as const;\r\n  },\r\n};\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(\r\n    contractorActions.setContractorsActionstatus(ActionStatusEnum.ERROR)\r\n  );\r\n  dispatch(contractorActions.setContractorsErrorMessage(text));\r\n};\r\n\r\nexport const createContractorProfile =\r\n  (formData: AddContractorFormDataType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractorsList = await contractorsApi.createContractor(formData);\r\n      if (contractorsList.length > 0) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.setCurrentContractor(contractorsList[0]));\r\n      } else {\r\n        showError(\"Не удалось создать профиль, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"createContractorProfile ERROR ===>\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getContractors = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(contractorActions.setContractorsLoading(true));\r\n    const contractors = await contractorsApi.getContractors();\r\n    dispatch(contractorActions.setContractors(contractors));\r\n  } catch (error) {\r\n    console.log(\"getContracors ===> \", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(contractorActions.setContractorsLoading(false));\r\n  }\r\n};\r\n\r\nexport const deleteContractor =\r\n  (contractorId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const response = await contractorsApi.deleteContractor(contractorId);\r\n      if (response) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.removeContractor(contractorId));\r\n        dispatch(contractorActions.setCurrentContractor(null));\r\n      } else {\r\n        showError(\"Не удалось удалить заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteContractor ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const updateContractor =\r\n  (contractor: AddContractorFormDataType, id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractors = await contractorsApi.updateContractor(contractor, id);\r\n      if (contractors.length > 0) {\r\n        dispatch(\r\n          contractorActions.setContractorsActionstatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(contractorActions.clearContractorImages());\r\n        dispatch(contractorActions.setCurrentContractor(contractors[0]));\r\n      } else {\r\n        showError(\r\n          \"Не удалось сохранить изменения, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getContracors ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getContractorById =\r\n  (contractorId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorsLoading(true));\r\n      const contractors = await contractorsApi.getContractorById(contractorId);\r\n      if (contractors.length === 0) {\r\n        showError(\"Контрагент не найден\", dispatch);\r\n      } else {\r\n        dispatch(contractorActions.setCurrentContractor(contractors[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullContractorInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorsLoading(false));\r\n    }\r\n  };\r\n\r\nexport const addContractorImage =\r\n  (image: AttachmentType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n      const imageOut = await attachmentsApi.addAttachment(image);\r\n\r\n      if (imageOut.length > 0) {\r\n        dispatch(contractorActions.addContractorImage(imageOut));\r\n      } else {\r\n        showError(\r\n          \"Не удалось загрузить вложение, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeContractorImage =\r\n  (contractorId: number, imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n\r\n      const response = await contractorsApi.removeContractorAttachment(\r\n        contractorId,\r\n        imageId\r\n      );\r\n\r\n      if (response) {\r\n        dispatch(contractorActions.removeContractorImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"removeContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeNewContractorImage =\r\n  (imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(contractorActions.setContractorImageUploading(true));\r\n\r\n      const response = await attachmentsApi.removeAttachment(imageId);\r\n\r\n      if (response) {\r\n        dispatch(contractorActions.removeContractorImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"removeNewContractorImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(contractorActions.setContractorImageUploading(false));\r\n    }\r\n  };\r\nexport type ContractorsActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof contractorActions>\r\n>;\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  ContractorsActionTypes\r\n>;\r\n","import { axios } from \"../api/axios\";\r\nimport { AddOrderFormData, OrderType } from \"../models/Orders\";\r\n\r\nexport const ordersApi = {\r\n  // orders\r\n\r\n  getOrders: async (): Promise<OrderType[]> => {\r\n    const { data } = await axios.get<OrderType[]>(\"orders\");\r\n    return data;\r\n  },\r\n  createOrder: async (formData: AddOrderFormData): Promise<OrderType[]> => {\r\n    const { data } = await axios.post<OrderType[]>(\"orders\", formData);\r\n    return data;\r\n  },\r\n\r\n  // orders/${id}\r\n\r\n  getOrderById: async (orderId: number): Promise<OrderType[]> => {\r\n    const { data } = await axios.get<OrderType[]>(`/orders/${orderId}`);\r\n    return data;\r\n  },\r\n  deleteOrder: async (orderId: number): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(`/orders/${orderId}`);\r\n    return data;\r\n  },\r\n  updateOrder: async (\r\n    order: AddOrderFormData,\r\n    id: number\r\n  ): Promise<OrderType[]> => {\r\n    const { data } = await axios.patch<OrderType[]>(`/orders/${id}`, order);\r\n    return data;\r\n  },\r\n\r\n  // orders/{orderId}/attachments/{attachmentId}\r\n\r\n  removeOrderAttachment: async (\r\n    orderId: number,\r\n    attachmentId: number\r\n  ): Promise<boolean> => {\r\n    const { data } = await axios.delete<boolean>(\r\n      `/orders/${orderId}/attachments/${attachmentId}`\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { axios } from \"../api/axios\";\r\nimport { ChatMessageOutType, ChatType } from \"../models/Chats\";\r\n\r\nexport const chatsApi = {\r\n  // chats/{orderId}\r\n\r\n  getOrderChats: async (orderId: number): Promise<ChatType[]> => {\r\n    const { data } = await axios.get<ChatType[]>(`/chats/${orderId}`);\r\n    return data;\r\n  },\r\n\r\n  // chats/{orderId}/{chatId}\r\n\r\n  getAllChatMessage: async (\r\n    orderId: number,\r\n    chatId: number\r\n  ): Promise<ChatMessageOutType[]> => {\r\n    const { data } = await axios.get<ChatMessageOutType[]>(\r\n      `chats/${orderId}/${chatId}`\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { AppStateType } from \"../store\";\r\nimport { ordersApi } from \"../../services/ordersApi\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AttachmentOutType, AttachmentType } from \"../../models/Attachments\";\r\nimport { attachmentsApi } from \"../../services/attachmentsApi\";\r\nimport { AddOrderFormData, OrderType } from \"../../models/Orders\";\r\nimport { ChatType } from \"../../models/Chats\";\r\nimport { chatsApi } from \"../../services/chatsApi\";\r\n\r\nexport const ordersActions = {\r\n  setOrders: (orders: OrderType[]) => {\r\n    return {\r\n      type: \"SET_ORDERS\",\r\n      payload: { orders },\r\n    } as const;\r\n  },\r\n  setOrdersLoading: (ordersLoading: boolean) => {\r\n    return {\r\n      type: \"SET_ORDERS_LOADING\",\r\n      payload: { ordersLoading },\r\n    } as const;\r\n  },\r\n  setOrdersErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_ORDERS_ERROR\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setOrderActionStatus: (orderActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_ORDER_ACTION_STATUS\",\r\n      payload: { orderActionStatus },\r\n    } as const;\r\n  },\r\n  setCurrentOrder: (currentOrder: OrderType | null) => {\r\n    return {\r\n      type: \"SET_CURRENT_ORDER\",\r\n      payload: { currentOrder },\r\n    } as const;\r\n  },\r\n  replaceOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"REPLACE_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  removeOrder: (id: number) => {\r\n    return {\r\n      type: \"REMOVE_ORDER\",\r\n      payload: { id },\r\n    } as const;\r\n  },\r\n  addNewOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"ADD_NEW_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  updateOrder: (order: OrderType) => {\r\n    return {\r\n      type: \"UPDATE_ORDER\",\r\n      payload: { order },\r\n    } as const;\r\n  },\r\n  setOrderImageUploading: (orderImageUploading: boolean) => {\r\n    return {\r\n      type: \"SET_ORDER_IMAGE_UPLOADING\",\r\n      payload: { orderImageUploading },\r\n    } as const;\r\n  },\r\n  addOrderImage: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"ADD_ORDER_IMAGE\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  setOrderImages: (images: AttachmentOutType[]) => {\r\n    return {\r\n      type: \"SET_ORDER_IMAGES\",\r\n      payload: { images },\r\n    } as const;\r\n  },\r\n  removeOrderImage: (imageId: number) => {\r\n    return {\r\n      type: \"REMOVE_ORDER_IMAGE\",\r\n      payload: { imageId },\r\n    } as const;\r\n  },\r\n  clearOrderImages: () => {\r\n    return {\r\n      type: \"CLEAR_ORDER_IMAGES\",\r\n    } as const;\r\n  },\r\n  setOrderChats: (orderChats: ChatType[] | null) => {\r\n    return {\r\n      type: \"SET_ORDER_CHATS\",\r\n      payload: { orderChats },\r\n    } as const;\r\n  },\r\n};\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.ERROR));\r\n  dispatch(ordersActions.setOrdersErrorMessage(text));\r\n};\r\n\r\nexport const getOrders = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(ordersActions.setOrdersLoading(true));\r\n    const orders = await ordersApi.getOrders();\r\n    dispatch(ordersActions.setOrders(orders));\r\n  } catch (error) {\r\n    console.log(\"getOrders ===> \", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(ordersActions.setOrdersLoading(false));\r\n  }\r\n};\r\n\r\nexport const createOrder =\r\n  (formData: AddOrderFormData): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      const orders = await ordersApi.createOrder(formData);\r\n      if (orders.length > 0) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n        dispatch(ordersActions.addNewOrder(orders[0]));\r\n      } else {\r\n        showError(\"Не удалось создать заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"createOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    }\r\n  };\r\n\r\nexport const updateOrder =\r\n  (order: AddOrderFormData, id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const orders = await ordersApi.updateOrder(order, id);\r\n      if (orders.length > 0) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.clearOrderImages());\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n      } else {\r\n        showError(\r\n          \"Не удалось сохранить изменения, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"updateOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const deleteOrder =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const response = await ordersApi.deleteOrder(id);\r\n      if (response) {\r\n        dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.SUCCESS));\r\n        dispatch(ordersActions.removeOrder(id));\r\n        dispatch(ordersActions.setCurrentOrder(null));\r\n      } else {\r\n        showError(\"Не удалось удалить заявку, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteOrder ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const getOrderById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n      const orders = await ordersApi.getOrderById(id);\r\n      if (orders.length === 0) {\r\n        showError(\"Заявка не найдена\", dispatch);\r\n      } else {\r\n        dispatch(ordersActions.setCurrentOrder(orders[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport const addOrderImage =\r\n  (image: AttachmentType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n      const imageOut = await attachmentsApi.addAttachment(image);\r\n\r\n      if (imageOut.length > 0) {\r\n        dispatch(ordersActions.addOrderImage(imageOut));\r\n      } else {\r\n        showError(\r\n          \"Не удалось загрузить вложение, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addOrderImage ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeOrderImage =\r\n  (orderId: number, imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n\r\n      const response = await ordersApi.removeOrderAttachment(orderId, imageId);\r\n\r\n      if (response) {\r\n        dispatch(ordersActions.removeOrderImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const removeNewOrderImage =\r\n  (imageId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrderImageUploading(true));\r\n\r\n      const response = await attachmentsApi.removeAttachment(imageId);\r\n\r\n      if (response) {\r\n        dispatch(ordersActions.removeOrderImage(imageId));\r\n      } else {\r\n        showError(\"Не удалось удалить вложение, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getFullOrderInfo ===> \", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrderImageUploading(false));\r\n    }\r\n  };\r\n\r\nexport const getOrderChats =\r\n  (orderId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(ordersActions.setOrdersLoading(true));\r\n\r\n      const chats = await chatsApi.getOrderChats(orderId);\r\n\r\n      if (chats) {\r\n        dispatch(ordersActions.setOrderChats(chats));\r\n      } else {\r\n        showError(\"Ошибка, попробуйте еще раз\", dispatch);\r\n      }\r\n    } catch (error) {\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(ordersActions.setOrdersLoading(false));\r\n    }\r\n  };\r\n\r\nexport type OrdersActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof ordersActions>\r\n>;\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  OrdersActionTypes\r\n>;\r\n","import React from \"react\";\r\nimport { Card, Layout, Typography } from \"antd\";\r\nimport { ContractorsStatistic, OrdersStatistic } from \"./components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppPreloader } from \"../../components\";\r\nimport { getContractorsLoadingState } from \"../../store/selectors/contractors\";\r\nimport { getContractors } from \"../../store/actions/contractors\";\r\nimport { getOrders } from \"../../store/actions/orders\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst { Content } = Layout;\r\n\r\nconst HomePage = () => {\r\n  const contractorsLoading = useSelector(getContractorsLoadingState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractors());\r\n    dispatch(getOrders());\r\n  }, [dispatch]);\r\n\r\n  if (contractorsLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <Card>\r\n        <Title className=\"title\">Статистика</Title>\r\n        <div className=\"statistic\">\r\n          <ContractorsStatistic />\r\n          <OrdersStatistic />\r\n        </div>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nmoment.locale(\"ru\");\r\n\r\nexport const formatDate = (date: number) => {\r\n  return moment(date).format(\"DD.MM.YYYY\");\r\n};\r\n\r\nexport const formatDateWithTime = (date: number) => {\r\n  return moment(date).format(\"DD.MM.YYYY hh:mm\");\r\n};\r\n\r\nexport const truncateString = (str: string, n: number) => {\r\n  return str.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n};\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Layout, BackTop, Table, Tag, Button, Space } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getOrderActionStatusState,\r\n  getOrdersErrorMessageState,\r\n  getFilteredOrdersListState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  deleteOrder,\r\n  getOrders,\r\n  ordersActions,\r\n} from \"../../store/actions/orders\";\r\nimport { AppAlert, AppPreloader, AppSearchField } from \"../../components\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  OrderNumberSortFieldsType,\r\n  OrdersQueryFilterType,\r\n  OrderStatusEnum,\r\n  OrderStringSortFieldsType,\r\n  OrderType,\r\n} from \"../../models/Orders\";\r\nimport { formatDate } from \"../../utils/formatter\";\r\n\r\nconst { Content } = Layout;\r\nconst { Column } = Table;\r\n\r\nconst getNumberSorter = (fieldName: OrderNumberSortFieldsType) => ({\r\n  compare: (a: OrderType, b: OrderType) => a[fieldName] - b[fieldName],\r\n});\r\n\r\nconst getStringSorter = (fieldName: OrderStringSortFieldsType) => ({\r\n  compare: (a: OrderType, b: OrderType) =>\r\n    a[fieldName].localeCompare(b[fieldName]),\r\n});\r\n\r\nconst OrdersPage = () => {\r\n  const [searchText, setSearchText] = React.useState<string>(\"\");\r\n\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const query = useQuery();\r\n\r\n  const orders = useSelector(\r\n    getFilteredOrdersListState(\r\n      searchText,\r\n      query.get(\"filter\") as OrdersQueryFilterType,\r\n      query.get(\"category\")\r\n    )\r\n  );\r\n  const ordersLoading = useSelector(getOrdersLoadingState);\r\n  const ordersError = useSelector(getOrdersErrorMessageState);\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setOrdersErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  // const fetchData = React.useCallback(() => {\r\n  //   // для кнопки обновить\r\n  //   dispatch(getOrders());\r\n  // }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrders());\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [dispatch, clearState]);\r\n\r\n  const handleDeleteOrder = (id: number) => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить заявку?\");\r\n    if (answer) {\r\n      dispatch(deleteOrder(id));\r\n    }\r\n  };\r\n\r\n  const handleViewOrder = (order: OrderType) => {\r\n    history.push(`orders/${order.id}`);\r\n  };\r\n\r\n  const addCategory = (categoryId: number) => {\r\n    history.replace(`?category=${categoryId}`);\r\n  };\r\n\r\n  const handleChangeSearchText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.currentTarget.value);\r\n  };\r\n\r\n  if (ordersLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={ordersError}\r\n        successMessage=\"Заявка успешно удалена\"\r\n        status={orderActionStatus}\r\n      />\r\n      <AppSearchField\r\n        value={searchText}\r\n        onChange={handleChangeSearchText}\r\n        placeholder=\"Найти по заголовку\"\r\n      />\r\n      <Table\r\n        showSorterTooltip={false}\r\n        // columns={columns}\r\n        dataSource={orders}\r\n        rowKey={\"id\"}\r\n        expandable={{\r\n          expandedRowRender: (order) => (\r\n            <div className=\"order__expanded\">\r\n              <p className=\"order__tab-descr\">{order.description}</p>\r\n              <div className=\"order__expanded-action\">\r\n                <Button\r\n                  className=\"order__expanded-btn\"\r\n                  onClick={() => handleViewOrder(order)}\r\n                >\r\n                  Посмотреть\r\n                </Button>\r\n                <Button\r\n                  className=\"order__expanded-btn\"\r\n                  onClick={() => handleDeleteOrder(order.id)}\r\n                  danger\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      >\r\n        <Column<OrderType>\r\n          title=\"Статус\"\r\n          dataIndex=\"orderStatus\"\r\n          key=\"age\"\r\n          render={(status: OrderStatusEnum) => {\r\n            const colors = {\r\n              [OrderStatusEnum.NEW]: \"green\",\r\n              [OrderStatusEnum.ARCHIVED]: \"geekblue\",\r\n              [OrderStatusEnum.DELETED]: \"volcano\",\r\n            };\r\n\r\n            return (\r\n              <Tag color={colors[status]} key={status}>\r\n                {status}\r\n              </Tag>\r\n            );\r\n          }}\r\n          sorter={getStringSorter(\"orderStatus\")}\r\n        />\r\n        <Column<OrderType>\r\n          title=\"Заголовок\"\r\n          key=\"title\"\r\n          render={(_, order) => (\r\n            <Space size=\"middle\">\r\n              <NavLink to={`orders/${order.id}`}>{order.title}</NavLink>\r\n            </Space>\r\n          )}\r\n          sorter={getStringSorter(\"title\")}\r\n        />\r\n        <Column<OrderType>\r\n          title=\"Дата создания\"\r\n          dataIndex=\"creationDate\"\r\n          key=\"creationDate\"\r\n          render={(_, data) => formatDate(data.creationDate)}\r\n          defaultSortOrder=\"descend\"\r\n          sorter={getNumberSorter(\"creationDate\")}\r\n        />\r\n        <Column<OrderType>\r\n          title=\"Дата закрытия\"\r\n          dataIndex=\"actualDate\"\r\n          key=\"actualDate\"\r\n          render={(_, data) => formatDate(data.actualDate)}\r\n          sorter={getNumberSorter(\"actualDate\")}\r\n        />\r\n        <Column<OrderType>\r\n          title=\"Категории\"\r\n          dataIndex=\"categories\"\r\n          key=\"categories\"\r\n          render={(_, data) => {\r\n            return (\r\n              <>\r\n                {data.categories\r\n                  .filter((category) => category.parentId === 0)\r\n                  .map((category) => (\r\n                    <Button\r\n                      onClick={() => addCategory(category.categoryId)}\r\n                      type=\"link\"\r\n                    >\r\n                      <Tag\r\n                        color=\"blue\"\r\n                        key={category.categoryId}\r\n                        className=\"order__tag\"\r\n                      >\r\n                        {category.categoryName}\r\n                      </Tag>\r\n                    </Button>\r\n                  ))}\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n        <Column<OrderType>\r\n          title=\"Цена (тг)\"\r\n          dataIndex=\"totalSum\"\r\n          key=\"totalSum\"\r\n          sorter={getNumberSorter(\"totalSum\")}\r\n        />\r\n        <Column<OrderType> title=\"Сроки\" dataIndex=\"comment\" key=\"comment\" />\r\n      </Table>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrdersPage;\r\n","import * as yup from \"yup\";\r\n\r\nexport const orderSchema = yup.object().shape({\r\n  title: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  totalSum: yup\r\n    .number()\r\n    .typeError(\"Введите корректную цену\")\r\n    .required(\"Обязательное поле\"),\r\n  comment: yup.string().required(\"Обязательное поле\"),\r\n  description: yup\r\n    .string()\r\n    .typeError(\"Значением может быть только текст\")\r\n    .max(5000, \"Максимальная длина 5000 символов\"),\r\n});\r\n\r\nexport const supplierSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  location: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  phoneNumber: yup //TODO:  сделать валидацию\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n  description: yup\r\n    .string()\r\n    .typeError(\"Значением может быть только текст\")\r\n    .max(5000, \"Максимальная длина 5000 символов\"),\r\n  address: yup\r\n    .string()\r\n    .max(250, \"Максимальная длина 250 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  contactName: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  webSite: yup.string().max(50, \"Максимальная длина 50 символов\"),\r\n  // .url(\"Введите корректный URL\"), //TODO: нужна проверка?\r\n  eMail: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .email(\"Введите корректный e-mail\"),\r\n});\r\n\r\nexport const otpSchema = yup.object().shape({\r\n  phoneNumber: yup\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n  otp: yup\r\n    .string()\r\n    .required(\"Обязательное поле\")\r\n    .matches(/^[0-9]+$/, \"Введите корректный СМС-код\")\r\n    .min(4, \"Введите корректный СМС-код\")\r\n    .max(4, \"Введите корректный СМС-код\"),\r\n});\r\n\r\nexport const customerSchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  location: yup\r\n    .string()\r\n    .max(50, \"Максимальная длина 50 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  contactName: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  phoneNumber: yup\r\n    .number()\r\n    .typeError(\"Введите корректный номер телефона\")\r\n    .min(11, \"Введите корректный номер телефона\")\r\n    .required(\"Обязательное поле\"),\r\n});\r\n\r\nexport const categorySchema = yup.object().shape({\r\n  name: yup\r\n    .string()\r\n    .max(150, \"Максимальная длина 150 символов\")\r\n    .required(\"Обязательное поле\"),\r\n  parentId: yup\r\n    .number()\r\n    .typeError(\"Введите корректный идентификатор\")\r\n    .required(\"Обязательное поле\"),\r\n});\r\n","import { createSelector } from \"reselect\";\r\nimport { AppStateType } from \"./../store\";\r\n\r\nconst getCategoriesState = (state: AppStateType) => state.categories;\r\n\r\nconst getAllCategoriesState = (state: AppStateType) =>\r\n  getCategoriesState(state).categories;\r\n\r\nexport const getCategoriesErrorMessageState = (state: AppStateType) =>\r\n  getCategoriesState(state).errorMessage;\r\n\r\nexport const getCategoriesLoadingState = (state: AppStateType) =>\r\n  getCategoriesState(state).isLoadingCategories;\r\n\r\nexport const getMainCategoriesState = createSelector(\r\n  [getAllCategoriesState],\r\n  (categories) => {\r\n    return categories?.filter(\r\n      (category) => category.parentId === 0 && !category.isDeleted\r\n    );\r\n  }\r\n);\r\n\r\nexport const getSubCategoriesState = createSelector(\r\n  [getAllCategoriesState],\r\n  (categories) => {\r\n    return categories?.filter(\r\n      (category) => category.parentId !== 0 && !category.isDeleted\r\n    );\r\n  }\r\n);\r\n\r\nexport const getDeletedCategoriesState = (state: AppStateType) =>\r\n  getAllCategoriesState(state)?.filter((category) => category.isDeleted);\r\n\r\nexport const getCurrentCategoryState = (state: AppStateType) =>\r\n  getCategoriesState(state).currentCategory;\r\n\r\nexport const getCategoryInProcessEditState = (state: AppStateType) =>\r\n  getCategoriesState(state).categoryInProcessEdit;\r\n\r\nexport const getCategoriesActionStatusState = (state: AppStateType) =>\r\n  getCategoriesState(state).categoriesActionStatus;\r\n\r\nexport const getCategoriesTreeDataState = createSelector(\r\n  [getMainCategoriesState, getSubCategoriesState],\r\n  (mainCategories, subCategories) => {\r\n    if (mainCategories && subCategories) {\r\n      const tree = mainCategories.map((mainCat) => {\r\n        const subCats = subCategories\r\n          .filter((subCat) => subCat.parentId === mainCat.id)\r\n          .map((subCat) => {\r\n            return {\r\n              title: subCat.name,\r\n              value: subCat.id,\r\n              key: subCat.id,\r\n            };\r\n          });\r\n        return {\r\n          title: mainCat.name,\r\n          value: mainCat.id,\r\n          key: mainCat.id,\r\n          children: subCats,\r\n        };\r\n      });\r\n      return tree;\r\n    }\r\n\r\n    return [];\r\n  }\r\n);\r\n","import { axios } from \"../api/axios\";\r\nimport { AddCategoryFormData, CategoryType } from \"../models/Categories\";\r\n\r\nexport const categoriesApi = {\r\n  //categories\r\n  getAllCategories: async (): Promise<CategoryType[]> => {\r\n    const { data } = await axios.get<CategoryType[]>(\"categories\");\r\n    return data;\r\n  },\r\n  deleteAllCategories: async (): Promise<Boolean> => {\r\n    const { data } = await axios.delete<Boolean>(\"categories\");\r\n    return data;\r\n  },\r\n  addCategory: async (\r\n    formData: AddCategoryFormData\r\n  ): Promise<CategoryType[]> => {\r\n    const { data } = await axios.post<CategoryType[]>(\"categories\", formData);\r\n    return data;\r\n  },\r\n\r\n  //categories/${id}\r\n\r\n  getCategoryById: async (id: number): Promise<CategoryType[]> => {\r\n    const { data } = await axios.get<CategoryType[]>(`categories/${id}`);\r\n    return data;\r\n  },\r\n  deleteCategoryById: async (id: number): Promise<Boolean> => {\r\n    const { data } = await axios.delete<Boolean>(`categories/${id}`);\r\n    return data;\r\n  },\r\n  updateCategoryById: async (category: CategoryType): Promise<Boolean> => {\r\n    const { data } = await axios.patch<Boolean>(\r\n      `categories/${category.id}`,\r\n      category\r\n    );\r\n    return data;\r\n  },\r\n};\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { AppStateType } from \"../store\";\r\nimport { categoriesApi } from \"../../services/categoriesApi\";\r\nimport { Dispatch } from \"redux\";\r\nimport { AddCategoryFormData, CategoryType } from \"../../models/Categories\";\r\n\r\nexport const categoriesActions = {\r\n  setAllCategories: (categories: CategoryType[]) => {\r\n    return {\r\n      type: \"SET_CATEGORIES\",\r\n      payload: { categories },\r\n    } as const;\r\n  },\r\n  setIsLoadingCategories: (isLoadingCategories: boolean) => {\r\n    return {\r\n      type: \"SET_IS_LOADING_CATEGORIES\",\r\n      payload: {\r\n        isLoadingCategories,\r\n      },\r\n    } as const;\r\n  },\r\n  setCategoriesErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_CATEGORIES_ERROR_MESSAGE\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setCategoriesActionStatus: (categoriesActionStatus: ActionStatusEnum) => {\r\n    return {\r\n      type: \"SET_CATEGORIES_ACTION_STATUS\",\r\n      payload: { categoriesActionStatus },\r\n    } as const;\r\n  },\r\n  setCurrentCategory: (currentCategory: CategoryType) => {\r\n    return {\r\n      type: \"SET_CURRENT_CATEGORY\",\r\n      payload: { currentCategory },\r\n    } as const;\r\n  },\r\n  setCategoryInEditProcess: (categoryInProcessEdit: number | null) => {\r\n    return {\r\n      type: \"SET_CATEGORY_IN_EDIT_PROCESS\",\r\n      payload: { categoryInProcessEdit },\r\n    } as const;\r\n  },\r\n  replaceCategory: (category: CategoryType) => {\r\n    return {\r\n      type: \"REPLACE_CATEGORY\",\r\n      payload: { category },\r\n    } as const;\r\n  },\r\n  removeCategory: (id: number) => {\r\n    return {\r\n      type: \"REMOVE_CATEGORY\",\r\n      payload: { id },\r\n    } as const;\r\n  },\r\n  clearCategories: () => {\r\n    return {\r\n      type: \"CLEAR_CATEGORIES\",\r\n    } as const;\r\n  },\r\n  addNewCategory: (category: CategoryType) => {\r\n    return {\r\n      type: \"ADD_NEW_CATEGORY\",\r\n      payload: { category },\r\n    } as const;\r\n  },\r\n};\r\n\r\nexport type CategoriesActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof categoriesActions>\r\n>;\r\n\r\nconst showError = (text: string, dispatch: Dispatch) => {\r\n  dispatch(categoriesActions.setCategoriesActionStatus(ActionStatusEnum.ERROR));\r\n  dispatch(categoriesActions.setCategoriesErrorMessage(text));\r\n};\r\n\r\nexport const getAllCategories = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(categoriesActions.setIsLoadingCategories(true));\r\n    const categories = await categoriesApi.getAllCategories();\r\n    dispatch(categoriesActions.setAllCategories(categories));\r\n  } catch (error) {\r\n    console.log(\"getAllCategories...\", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(categoriesActions.setIsLoadingCategories(false));\r\n  }\r\n};\r\n\r\n// TODO: опасный метод\r\nexport const deleteAllCategories = (): ThunkAcionType => async (dispatch) => {\r\n  try {\r\n    dispatch(categoriesActions.setIsLoadingCategories(true));\r\n    const response = await categoriesApi.deleteAllCategories();\r\n    if (response) {\r\n      dispatch(\r\n        categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n      );\r\n      dispatch(categoriesActions.clearCategories());\r\n    } else {\r\n      showError(\r\n        \"Не удалось удалить все категории, попробуйте еще раз\",\r\n        dispatch\r\n      );\r\n    }\r\n  } catch (error) {\r\n    console.log(\"deleteAllCategories...\", error);\r\n    showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n  } finally {\r\n    dispatch(categoriesActions.setIsLoadingCategories(false));\r\n  }\r\n};\r\n\r\nexport const createCategory =\r\n  (formData: AddCategoryFormData): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const createdCategory = await categoriesApi.addCategory({\r\n        name: formData.name,\r\n        parentId: Number(formData.parentId),\r\n        isDeleted: false,\r\n      });\r\n\r\n      if (createdCategory.length > 0) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.addNewCategory(createdCategory[0]));\r\n      } else {\r\n        showError(\r\n          \"Не получилось добавить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"addCategory...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n//TODO: Нужно????\r\nexport const getCategoryById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const categoryList = await categoriesApi.getCategoryById(id);\r\n\r\n      if (categoryList.length === 0) {\r\n        showError(\"Категория не найдена\", dispatch);\r\n      } else {\r\n        dispatch(categoriesActions.setCurrentCategory(categoryList[0]));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n\r\nexport const deleteCategoryById =\r\n  (id: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setIsLoadingCategories(true));\r\n      const response = await categoriesApi.deleteCategoryById(id);\r\n      if (response) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.removeCategory(id));\r\n      } else {\r\n        showError(\r\n          \"Не получилось удалить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"deleteCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setIsLoadingCategories(false));\r\n    }\r\n  };\r\n\r\nexport const updateCategoryById =\r\n  (category: CategoryType): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(categoriesActions.setCategoryInEditProcess(category.id));\r\n      const response = await categoriesApi.updateCategoryById(category);\r\n      if (response) {\r\n        dispatch(\r\n          categoriesActions.setCategoriesActionStatus(ActionStatusEnum.SUCCESS)\r\n        );\r\n        dispatch(categoriesActions.replaceCategory(category));\r\n      } else {\r\n        showError(\r\n          \"Не получилось обновить категорию, попробуйте еще раз\",\r\n          dispatch\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"updateCategoryById...\", error);\r\n      showError(\"Ошибка сети, попробуйте еще раз\", dispatch);\r\n    } finally {\r\n      dispatch(categoriesActions.setCategoryInEditProcess(null));\r\n    }\r\n  };\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  CategoriesActionTypes\r\n>;\r\n","const getBase64 = (file: File): Promise<string | null> => {\r\n  return new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result as string);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n};\r\n\r\nexport default getBase64;\r\n","import { Form, Input, InputNumber, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, Controller, FieldError } from \"react-hook-form\";\r\nimport { DescriptionOrderFormData } from \"../../../models/Orders\";\r\n\r\nconst { Text } = Typography;\r\n\r\ntype OrderCreateFormPropsType = {\r\n  control: Control<DescriptionOrderFormData, object>;\r\n  errors: {\r\n    title?: FieldError;\r\n    description?: FieldError;\r\n    comment?: FieldError;\r\n    totalSum?: FieldError;\r\n  };\r\n};\r\n\r\nconst OrderCreateForm: React.FC<OrderCreateFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={errors.title ? \"error\" : \"success\"}\r\n            help={errors.title?.message}\r\n            className=\"input order__title-input\"\r\n            required\r\n          >\r\n            <Text className=\"subtitle\">Заголовок</Text>\r\n            <Input\r\n              placeholder=\"Заголовок заявки\"\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n        )}\r\n        name=\"title\"\r\n        defaultValue=\"\"\r\n      />\r\n      <div className=\"order__numeric-fields\">\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.comment ? \"error\" : \"success\"}\r\n              help={errors.comment?.message}\r\n              className=\"order__comment-input input\"\r\n              required\r\n            >\r\n              <Text className=\"subtitle\">Сроки</Text>\r\n              <Input placeholder=\"Сроки\" value={value} onChange={onChange} />\r\n            </Form.Item>\r\n          )}\r\n          name=\"comment\"\r\n          defaultValue=\"\"\r\n        />\r\n\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.totalSum ? \"error\" : \"success\"}\r\n              help={errors.totalSum?.message}\r\n              className=\"input order__totalsum-input\"\r\n              required\r\n            >\r\n              <div className=\"order__totalsum-field\">\r\n                <Text className=\"subtitle\">Цена (тг)</Text>\r\n                <InputNumber value={value} onChange={onChange} />\r\n              </div>\r\n            </Form.Item>\r\n          )}\r\n          name=\"totalSum\"\r\n          defaultValue={0}\r\n        />\r\n      </div>\r\n\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: false,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={errors.description ? \"error\" : \"success\"}\r\n            help={errors.description?.message}\r\n            className=\"input order__descr-input\"\r\n            required\r\n          >\r\n            <Text className=\"subtitle\">Описание</Text>\r\n            <Input.TextArea\r\n              placeholder=\"Описание\"\r\n              value={value}\r\n              onChange={onChange}\r\n            />\r\n          </Form.Item>\r\n        )}\r\n        name=\"description\"\r\n        defaultValue=\"\"\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderCreateForm);\r\n","import React from \"react\";\r\nimport { Button, Card, Layout, Typography, TreeSelect, message } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  AppAlert,\r\n  AppPreloader,\r\n  ImagesList,\r\n  UploadFileForm,\r\n} from \"../../components\";\r\nimport {\r\n  addOrderImage,\r\n  createOrder,\r\n  ordersActions,\r\n  removeNewOrderImage,\r\n} from \"../../store/actions/orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  getCurrentOrderState,\r\n  getOrderActionStatusState,\r\n  getOrderImagesLoadingState,\r\n  getOrderImagesState,\r\n  getOrdersErrorMessageState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport { orderSchema } from \"../../utils/validatorsSchemes\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesTreeDataState,\r\n} from \"../../store/selectors/categories\";\r\nimport { categoriesActions } from \"../../store/actions/categories\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport { OrderCreateForm } from \"./components\";\r\nimport {\r\n  AddOrderFormData,\r\n  DescriptionOrderFormData,\r\n} from \"../../models/Orders\";\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst OrderCreatePage = () => {\r\n  const {\r\n    control,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DescriptionOrderFormData>({\r\n    resolver: yupResolver(orderSchema),\r\n  });\r\n\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n  const orderError = useSelector(getOrdersErrorMessageState);\r\n  const orderLoadingState = useSelector(getOrdersLoadingState);\r\n  const currentOrder = useSelector(getCurrentOrderState);\r\n  const orderImages = useSelector(getOrderImagesState);\r\n  const orderUploading = useSelector(getOrderImagesLoadingState);\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearOrderState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setOrdersErrorMessage(null));\r\n    dispatch(ordersActions.clearOrderImages());\r\n  }, [dispatch]);\r\n\r\n  const clearCategoriesState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearOrderState();\r\n      clearCategoriesState();\r\n    };\r\n  }, [clearCategoriesState, clearOrderState]);\r\n\r\n  React.useEffect(() => {\r\n    if (currentOrder && orderActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(`/orders/${currentOrder.id}`);\r\n    }\r\n  }, [currentOrder, history, orderActionStatus]);\r\n\r\n  const handleSelectCategories = (value: number[]) => {\r\n    setSelectedCategories(value);\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    dispatch(removeNewOrderImage(imageId));\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addOrderImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    const categories = selectedCategories.map((categoryId) => ({\r\n      categoryId,\r\n    }));\r\n\r\n    const newOrder: AddOrderFormData = {\r\n      title: formData.title,\r\n      description: formData.description,\r\n      comment: formData.comment,\r\n      totalSum: formData.totalSum,\r\n      contractors: [],\r\n      attachments: orderImages.map((image) => ({\r\n        attachmentId: image.id,\r\n      })),\r\n      customerId: 1,\r\n      categories,\r\n    };\r\n\r\n    dispatch(createOrder(newOrder));\r\n    reset();\r\n  });\r\n\r\n  if (orderLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearOrderState}\r\n        errorMessage={orderError}\r\n        successMessage={\"Заявка сохранена\"}\r\n        status={orderActionStatus}\r\n      />\r\n      <AppAlert\r\n        onClose={clearCategoriesState}\r\n        errorMessage={categoriesError}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание заявки\r\n        </Title>\r\n        <OrderCreateForm control={control} errors={errors} />\r\n        <TreeSelect\r\n          treeData={categoriesTree}\r\n          value={selectedCategories}\r\n          onChange={handleSelectCategories}\r\n          treeCheckable={true}\r\n          showCheckedStrategy={SHOW_ALL}\r\n          placeholder={\"Выберите категории заявки\"}\r\n          style={{ width: \"100%\", marginBottom: 10 }}\r\n          maxTagCount={5}\r\n        />\r\n        <ImagesList\r\n          removeImage={handleRemoveImage}\r\n          images={orderImages}\r\n          editMode={true}\r\n        />\r\n        <UploadFileForm\r\n          onChange={handleUploadImage}\r\n          isUploading={orderUploading}\r\n        />\r\n        <Button\r\n          className=\"order__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={\r\n            Object.keys(errors).length > 0 || selectedCategories.length === 0\r\n          }\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrderCreatePage;\r\n","import { Form, Input, InputNumber, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  DescriptionOrderFormData,\r\n  OrderFieldsNameType,\r\n} from \"../../../models/Orders\";\r\nimport { EditableFieldPropsType } from \"../../../models/types\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst OrderEditableField: React.FC<\r\n  EditableFieldPropsType<DescriptionOrderFormData, OrderFieldsNameType>\r\n> = ({\r\n  placeholder,\r\n  editMode,\r\n  fieldName,\r\n  control,\r\n  error,\r\n  defaultValue,\r\n  isTextArea = false,\r\n  isNumberInput = false,\r\n}) => {\r\n  if (editMode) {\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={error ? \"error\" : \"success\"}\r\n            help={error?.message}\r\n            className=\"input\"\r\n          >\r\n            {isTextArea ? (\r\n              <Input.TextArea\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : isNumberInput ? (\r\n              <InputNumber\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        )}\r\n        name={fieldName}\r\n        defaultValue={defaultValue}\r\n      />\r\n    );\r\n  }\r\n  return <Text>{defaultValue}</Text>;\r\n};\r\n\r\nexport default OrderEditableField;\r\n","import { Card, Divider, TreeSelect } from \"antd\";\r\nimport { DataNode } from \"antd/lib/tree\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\n\r\nimport { ImagesList, UploadFileForm } from \"../../../components\";\r\nimport { AttachmentOutType } from \"../../../models/Attachments\";\r\nimport { DescriptionOrderFormData } from \"../../../models/Orders\";\r\nimport OrderEditableField from \"./OrderEditableField\";\r\n\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\ntype OrderInfoBodyPropsType = {\r\n  handleRemoveImage: (imageId: number) => void;\r\n  handleSelectCategories: (value: number[]) => void;\r\n  handleAddImage: (e: Event) => void;\r\n  selectedCategories: number[];\r\n  editMode: boolean;\r\n  imageUploading: boolean;\r\n  images: AttachmentOutType[];\r\n  control: Control<DescriptionOrderFormData, object>;\r\n  categoriesTree?: DataNode[];\r\n  defaultValue?: string;\r\n  error?: FieldError;\r\n};\r\n\r\nconst OrderInfoBody: React.FC<OrderInfoBodyPropsType> = ({\r\n  categoriesTree,\r\n  selectedCategories,\r\n  handleSelectCategories,\r\n  handleRemoveImage,\r\n  handleAddImage,\r\n  editMode,\r\n  defaultValue,\r\n  error,\r\n  images,\r\n  control,\r\n  imageUploading,\r\n}) => {\r\n  return (\r\n    <div className=\"order__body\">\r\n      <Card>\r\n        <Divider>Описание</Divider>\r\n        <OrderEditableField\r\n          defaultValue={defaultValue}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={error}\r\n          fieldName=\"description\"\r\n          placeholder=\"Описание\"\r\n          isTextArea\r\n        />\r\n        <Divider>Категории</Divider>\r\n        {categoriesTree && (\r\n          <TreeSelect\r\n            treeData={categoriesTree}\r\n            value={selectedCategories}\r\n            onChange={handleSelectCategories}\r\n            treeCheckable={true}\r\n            showCheckedStrategy={SHOW_ALL}\r\n            placeholder={editMode ? \"Выберите категории заявки\" : \"Категории\"}\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            disabled={!editMode}\r\n          />\r\n        )}\r\n        <Divider>Фото</Divider>\r\n        <div className=\"order__images\">\r\n          <ImagesList\r\n            removeImage={handleRemoveImage}\r\n            images={images}\r\n            editMode={editMode}\r\n          />\r\n          {editMode && (\r\n            <UploadFileForm\r\n              onChange={handleAddImage}\r\n              isUploading={imageUploading}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(OrderInfoBody);\r\n","import { Descriptions } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { DescriptionOrderFormData, OrderType } from \"../../../models/Orders\";\r\nimport { formatDate } from \"../../../utils/formatter\";\r\nimport OrderEditableField from \"./OrderEditableField\";\r\n\r\ntype OrderDescriptionPropsType = {\r\n  order: OrderType;\r\n  editMode: boolean;\r\n  errors: {\r\n    title?: FieldError;\r\n    totalSum?: FieldError;\r\n  };\r\n  control: Control<DescriptionOrderFormData, object>;\r\n};\r\n\r\nconst OrderDescription: React.FC<OrderDescriptionPropsType> = ({\r\n  order,\r\n  editMode,\r\n  errors,\r\n  control,\r\n}) => {\r\n  return (\r\n    <Descriptions size=\"small\" column={3}>\r\n      <Descriptions.Item label=\"Создана\">\r\n        {formatDate(order.creationDate)}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Автор\">\r\n        <NavLink to={`/contractors/${order.customerId}`}>Заказчик</NavLink>\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Сроки\">\r\n        <OrderEditableField\r\n          defaultValue={order.comment}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={errors.title}\r\n          fieldName=\"comment\"\r\n          placeholder=\"Сроки\"\r\n        />\r\n      </Descriptions.Item>\r\n\r\n      <Descriptions.Item label=\"Закроется\">\r\n        {formatDate(order.actualDate)}\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Чаты\">\r\n        <NavLink to={`/orders/${order.id}/chats`}>Чаты</NavLink>\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Цена\">\r\n        <OrderEditableField\r\n          isNumberInput\r\n          defaultValue={order.totalSum}\r\n          editMode={editMode}\r\n          control={control}\r\n          error={errors.totalSum}\r\n          fieldName=\"totalSum\"\r\n          placeholder=\"Цена\"\r\n        />\r\n      </Descriptions.Item>\r\n      <Descriptions.Item label=\"Номер заявки\">{order.id}</Descriptions.Item>\r\n    </Descriptions>\r\n  );\r\n};\r\n\r\nexport default OrderDescription;\r\n","import React from \"react\";\r\nimport { Layout, PageHeader, Button, message } from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport { orderSchema } from \"../../utils/validatorsSchemes\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  getCurrentOrderState,\r\n  getOrderActionStatusState,\r\n  getOrderImagesLoadingState,\r\n  getOrderImagesState,\r\n  getOrdersErrorMessageState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\nimport {\r\n  addOrderImage,\r\n  deleteOrder,\r\n  getOrderById,\r\n  ordersActions,\r\n  removeOrderImage,\r\n  updateOrder,\r\n} from \"../../store/actions/orders\";\r\nimport { AppAlert, AppPreloader } from \"../../components\";\r\n\r\nimport {\r\n  OrderDescription,\r\n  OrderEditableField,\r\n  OrderInfoBody,\r\n} from \"./components\";\r\nimport { getCategoriesTreeDataState } from \"../../store/selectors/categories\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport {\r\n  AddOrderFormData,\r\n  DescriptionOrderFormData,\r\n} from \"../../models/Orders\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst OrderPage = () => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DescriptionOrderFormData>({\r\n    resolver: yupResolver(orderSchema),\r\n  });\r\n\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n\r\n  const order = useSelector(getCurrentOrderState);\r\n  const orderActionStatus = useSelector(getOrderActionStatusState);\r\n  const orderError = useSelector(getOrdersErrorMessageState);\r\n  const orderLoadingState = useSelector(getOrdersLoadingState);\r\n\r\n  const orderImages = useSelector(getOrderImagesState);\r\n  const orderImageUploading = useSelector(getOrderImagesLoadingState);\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n\r\n  const { orderId }: { orderId?: string } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n    dispatch(ordersActions.setCurrentOrder(null));\r\n    dispatch(ordersActions.clearOrderImages());\r\n  }, [dispatch]);\r\n\r\n  const toggleEditMode = () => {\r\n    setEditMode((prev) => {\r\n      dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER));\r\n      return !prev;\r\n    });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrderById(Number(orderId)));\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [clearState, dispatch, orderId]);\r\n\r\n  React.useEffect(() => {\r\n    if (order) {\r\n      setSelectedCategories(\r\n        order.categories?.map((category) => category.categoryId)\r\n      );\r\n      dispatch(ordersActions.setOrderImages(order.attachments));\r\n    }\r\n  }, [order, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    // ВО ВРЕМЯ УДАЛЕНИЯ\r\n    if (!order && orderActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(\"/orders\");\r\n    }\r\n  }, [history, order, orderActionStatus]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    if (order) {\r\n      const categories = selectedCategories.map((categoryId) => ({\r\n        categoryId,\r\n      }));\r\n      const updatedOrder: AddOrderFormData = {\r\n        ...order,\r\n        title: formData.title,\r\n        description: formData.description,\r\n        totalSum: formData.totalSum,\r\n        comment: formData.comment,\r\n        contractors: order.contractors,\r\n        attachments: orderImages.map((image) => ({ attachmentId: image.id })),\r\n        customerId: 1,\r\n        categories,\r\n      };\r\n      setEditMode(false);\r\n      dispatch(updateOrder(updatedOrder, order.id));\r\n    }\r\n  });\r\n\r\n  const goBack = () => window.history.back();\r\n\r\n  const handleSelectCategories = React.useCallback((value: number[]) => {\r\n    setSelectedCategories(value);\r\n  }, []);\r\n\r\n  const handleDeleteOrder = () => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить заявку?\");\r\n    if (answer && order) {\r\n      dispatch(deleteOrder(order.id));\r\n    }\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    toggleEditMode();\r\n    if (order) {\r\n      setSelectedCategories(\r\n        order.categories?.map((category) => category.categoryId)\r\n      );\r\n      dispatch(ordersActions.clearOrderImages());\r\n      dispatch(ordersActions.setOrderImages(order.attachments));\r\n    }\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addOrderImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    if (order) {\r\n      dispatch(removeOrderImage(order.id, imageId));\r\n    }\r\n  };\r\n\r\n  const editActionsButtons = [\r\n    <Button\r\n      key=\"1\"\r\n      onClick={onSubmit}\r\n      disabled={\r\n        Object.keys(errors).length !== 0 || selectedCategories.length === 0\r\n      }\r\n    >\r\n      Сохранить\r\n    </Button>,\r\n    <Button key=\"2\" onClick={handleCancelEdit} danger>\r\n      Отменить\r\n    </Button>,\r\n  ];\r\n\r\n  const actionsButtons = [\r\n    <Button key=\"3\" onClick={toggleEditMode}>\r\n      Редактировать\r\n    </Button>,\r\n\r\n    (order?.orderStatus === \"ARCHIVED\" || order?.orderStatus === \"DELETED\") && (\r\n      <Button\r\n        key=\"4\"\r\n        onClick={() => {\r\n          alert(\"В разработке\");\r\n        }}\r\n      >\r\n        Восстановить\r\n      </Button>\r\n    ),\r\n    <Button key=\"5\" onClick={handleDeleteOrder} danger>\r\n      Удалить\r\n    </Button>,\r\n  ];\r\n\r\n  if (orderLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={() =>\r\n          dispatch(ordersActions.setOrderActionStatus(ActionStatusEnum.NEVER))\r\n        }\r\n        errorMessage={orderError}\r\n        status={orderActionStatus}\r\n        successMessage=\"Изменения успешно сохранены\"\r\n      />\r\n      {order && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <PageHeader\r\n              ghost={false}\r\n              onBack={goBack}\r\n              title={\r\n                <OrderEditableField\r\n                  defaultValue={order.title}\r\n                  editMode={editMode}\r\n                  control={control}\r\n                  error={errors.title}\r\n                  fieldName=\"title\"\r\n                  placeholder=\"Заголовок\"\r\n                />\r\n              }\r\n              extra={editMode ? editActionsButtons : actionsButtons}\r\n            >\r\n              <OrderDescription\r\n                order={order}\r\n                editMode={editMode}\r\n                errors={errors}\r\n                control={control}\r\n              />\r\n            </PageHeader>\r\n          </div>\r\n          <OrderInfoBody\r\n            categoriesTree={categoriesTree}\r\n            selectedCategories={selectedCategories}\r\n            handleSelectCategories={handleSelectCategories}\r\n            handleRemoveImage={handleRemoveImage}\r\n            handleAddImage={handleUploadImage}\r\n            editMode={editMode}\r\n            defaultValue={order.description}\r\n            error={errors.description}\r\n            images={orderImages}\r\n            control={control}\r\n            imageUploading={orderImageUploading}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrderPage;\r\n","import React, { ChangeEvent } from \"react\";\r\n\r\nimport { Layout, Table, Tag, Button, Space } from \"antd\";\r\nimport { AppAlert, AppPreloader, AppSearchField } from \"../../components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getFilteredContractorsListState,\r\n  getContractorsLoadingState,\r\n} from \"../../store/selectors/contractors\";\r\nimport { NavLink, useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n  contractorActions,\r\n  deleteContractor,\r\n  getContractors,\r\n} from \"../../store/actions/contractors\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport {\r\n  ContractorNumberSortFieldsType,\r\n  ContractorsQueryFilterType,\r\n  ContractorStringSortFieldsType,\r\n  ContractorType,\r\n  ContractorTypesEnum,\r\n} from \"../../models/Contractors\";\r\n\r\nconst { Content } = Layout;\r\nconst { Column } = Table;\r\n\r\nconst getNumberSorter = (fieldName: ContractorNumberSortFieldsType) => ({\r\n  compare: (a: ContractorType, b: ContractorType) =>\r\n    a[fieldName] - b[fieldName],\r\n});\r\n\r\nconst getStringSorter = (fieldName: ContractorStringSortFieldsType) => ({\r\n  compare: (a: ContractorType, b: ContractorType) =>\r\n    a[fieldName].localeCompare(b[fieldName]),\r\n});\r\n\r\nconst ContractorsPage = () => {\r\n  const [searchText, setSearchText] = React.useState<string>(\"\");\r\n\r\n  const useQuery = () => {\r\n    return new URLSearchParams(useLocation().search);\r\n  };\r\n  const query = useQuery();\r\n\r\n  const contractorsError = useSelector(getContractorsErrorMessage);\r\n  const contractorsActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorsLoading = useSelector(getContractorsLoadingState);\r\n  const contractors = useSelector(\r\n    getFilteredContractorsListState(\r\n      searchText,\r\n      query.get(\"filter\") as ContractorsQueryFilterType,\r\n      query.get(\"category\")\r\n    )\r\n  );\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setContractorsErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const handleDeleteContractor = (id: number) => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить контрагента?\");\r\n    if (answer) {\r\n      dispatch(deleteContractor(id));\r\n    }\r\n  };\r\n\r\n  const handleViewContractor = (contractor: ContractorType) => {\r\n    history.push(`contractors/${contractor.id}`);\r\n  };\r\n\r\n  const handleChangeSearchText = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.currentTarget.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractors());\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [dispatch, clearState]);\r\n\r\n  const addCategory = (categoryId: number) => {\r\n    history.replace(`?category=${categoryId}`);\r\n  };\r\n\r\n  if (contractorsLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={contractorsError}\r\n        successMessage=\"Контрагент успешно удален\"\r\n        status={contractorsActionStatus}\r\n      />\r\n      <AppSearchField\r\n        value={searchText}\r\n        onChange={handleChangeSearchText}\r\n        placeholder=\"Найти по названию организации\"\r\n      />\r\n      <Table\r\n        showSorterTooltip={false}\r\n        dataSource={contractors}\r\n        rowKey={\"id\"}\r\n        expandable={{\r\n          expandedRowRender: (order) => (\r\n            <div className=\"contractor__expanded\">\r\n              <p className=\"contractor__tab-descr\">{order.description}</p>\r\n              <div className=\"contractor__expanded-action\">\r\n                <Button\r\n                  className=\"contractor__expanded-btn\"\r\n                  onClick={() => handleViewContractor(order)}\r\n                >\r\n                  Посмотреть\r\n                </Button>\r\n                <Button\r\n                  className=\"contractor__expanded-btn\"\r\n                  onClick={() => handleDeleteContractor(order.id)}\r\n                  danger\r\n                >\r\n                  Удалить\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          ),\r\n        }}\r\n      >\r\n        <Column<ContractorType>\r\n          title=\"Тип контрагента\"\r\n          dataIndex=\"contractorType\"\r\n          key=\"contractorType\"\r\n          render={(_, contractor) => {\r\n            const colors = {\r\n              [ContractorTypesEnum.CUSTOMER]: \"green\",\r\n              [ContractorTypesEnum.SUPPLIER]: \"geekblue\",\r\n              [ContractorTypesEnum.UNKNOWN]: \"gray\",\r\n            };\r\n\r\n            return (\r\n              <Tag\r\n                color={colors[contractor.contractorType]}\r\n                key={contractor.contractorType}\r\n              >\r\n                {contractor.contractorType === ContractorTypesEnum.CUSTOMER\r\n                  ? \"Заказчик\"\r\n                  : \"Поставщик\"}\r\n              </Tag>\r\n            );\r\n          }}\r\n          sorter={getStringSorter(\"contractorType\")}\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Название организации\"\r\n          key=\"name\"\r\n          render={(_, contractor) => (\r\n            <Space size=\"middle\">\r\n              <NavLink to={`contractors/${contractor.id}`}>\r\n                {contractor.name}\r\n              </NavLink>\r\n            </Space>\r\n          )}\r\n          sorter={getStringSorter(\"name\")}\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Номер телефона\"\r\n          dataIndex=\"phoneNumber\"\r\n          key=\"phoneNumber\"\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Город\"\r\n          dataIndex=\"location\"\r\n          key=\"location\"\r\n          sorter={getStringSorter(\"location\")}\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Категории\"\r\n          dataIndex=\"categories\"\r\n          key=\"categories\"\r\n          render={(_, data) => {\r\n            return (\r\n              <>\r\n                {data.categories\r\n                  .filter((category) => category.parentId === 0)\r\n                  .map((category) => (\r\n                    <Button\r\n                      onClick={() => addCategory(category.categoryId)}\r\n                      type=\"link\"\r\n                    >\r\n                      <Tag\r\n                        color=\"blue\"\r\n                        key={category.categoryId}\r\n                        className=\"order__tag\"\r\n                      >\r\n                        {category.categoryName}\r\n                      </Tag>\r\n                    </Button>\r\n                  ))}\r\n              </>\r\n            );\r\n          }}\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Контактное лицо\"\r\n          dataIndex=\"contactName\"\r\n          key=\"contactName\"\r\n        />\r\n        <Column<ContractorType>\r\n          title=\"Рейтинг\"\r\n          dataIndex=\"rating\"\r\n          key=\"rating\"\r\n          sorter={getNumberSorter(\"rating\")}\r\n        />\r\n      </Table>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorsPage;\r\n","import { Form, Input, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  CustomerFieldsNameType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport { EditableFieldPropsType } from \"../../../models/types\";\r\nimport { truncateString } from \"../../../utils/formatter\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ContractorEditableField: React.FC<\r\n  EditableFieldPropsType<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    SupplierFieldsNameType | CustomerFieldsNameType\r\n  >\r\n> = ({\r\n  placeholder,\r\n  editMode,\r\n  fieldName,\r\n  control,\r\n  error,\r\n  defaultValue,\r\n  isTextArea = false,\r\n  maxLength,\r\n}) => {\r\n  if (editMode) {\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        rules={{\r\n          required: true,\r\n        }}\r\n        render={({ field: { onChange, value } }) => (\r\n          <Form.Item\r\n            validateStatus={error ? \"error\" : \"success\"}\r\n            help={error?.message}\r\n            className=\"input\"\r\n          >\r\n            {isTextArea ? (\r\n              <Input.TextArea\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            ) : (\r\n              <Input\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                maxLength={maxLength}\r\n              />\r\n            )}\r\n          </Form.Item>\r\n        )}\r\n        name={fieldName}\r\n        defaultValue={defaultValue as string}\r\n      />\r\n    );\r\n  }\r\n  if (fieldName === \"eMail\") {\r\n    return <a href={`mailto:${defaultValue}`}>{defaultValue}</a>;\r\n  }\r\n  if (fieldName === \"webSite\" && defaultValue) {\r\n    return (\r\n      <a href={defaultValue as string} target=\"_blank\" rel=\"noreferrer\">\r\n        {truncateString(defaultValue as string, 25)}\r\n      </a>\r\n    );\r\n  }\r\n  return <Text>{defaultValue}</Text>;\r\n};\r\n\r\nexport default React.memo(ContractorEditableField);\r\n","import { Card, Divider, TreeSelect } from \"antd\";\r\nimport { DataNode } from \"antd/lib/tree\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { ImagesList, UploadFileForm } from \"../../../components\";\r\nimport { AttachmentOutType } from \"../../../models/Attachments\";\r\nimport {\r\n  ContractorTypesEnum,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../../models/Contractors\";\r\n\r\nimport ContractorEditableField from \"./ContractorEditableField\";\r\n\r\ntype ContractorInfoBodyPropsType = {\r\n  defaultValue: string;\r\n  editMode: boolean;\r\n  control: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  error?: FieldError;\r\n  categoriesTree: DataNode[];\r\n  selectedCategories: number[];\r\n  handleSelectCategories: (value: number[]) => void;\r\n  handleRemoveImage: (imageId: number) => void;\r\n  handleAddImage: (e: Event) => void;\r\n  imageUploading: boolean;\r\n  images: AttachmentOutType[];\r\n  registeringType: ContractorTypesEnum;\r\n};\r\n\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst ContractorInfoBody: React.FC<ContractorInfoBodyPropsType> = ({\r\n  defaultValue,\r\n  editMode,\r\n  control,\r\n  error,\r\n  categoriesTree,\r\n  selectedCategories,\r\n  handleSelectCategories,\r\n  handleRemoveImage,\r\n  handleAddImage,\r\n  imageUploading,\r\n  images,\r\n  registeringType,\r\n}) => {\r\n  return (\r\n    <div className=\"contractor__body\">\r\n      <Card>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <>\r\n            <Divider>Описание</Divider>\r\n            <ContractorEditableField\r\n              defaultValue={defaultValue}\r\n              editMode={editMode}\r\n              control={control}\r\n              error={error}\r\n              fieldName=\"description\"\r\n              placeholder=\"Описание\"\r\n              isTextArea\r\n            />\r\n            <Divider>Категории</Divider>\r\n            {categoriesTree && (\r\n              <TreeSelect\r\n                treeData={categoriesTree}\r\n                value={selectedCategories}\r\n                onChange={handleSelectCategories}\r\n                treeCheckable={true}\r\n                showCheckedStrategy={SHOW_ALL}\r\n                placeholder={\r\n                  editMode ? \"Выберите категории контрагента\" : \"Категории\"\r\n                }\r\n                style={{ width: \"100%\", marginBottom: 10 }}\r\n                // maxTagCount={5}\r\n                disabled={!editMode}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n        <Divider>Фото</Divider>\r\n        <div className=\"contractor__images\">\r\n          <ImagesList\r\n            removeImage={handleRemoveImage}\r\n            images={images}\r\n            editMode={editMode}\r\n          />\r\n          {editMode && (\r\n            <UploadFileForm\r\n              onChange={handleAddImage}\r\n              isUploading={imageUploading}\r\n            />\r\n          )}\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ContractorInfoBody);\r\n","import { Button, Descriptions, Radio, RadioChangeEvent } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  ContractorType,\r\n  ContractorTypesEnum,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorEditableField from \"./ContractorEditableField\";\r\n\r\ntype ContractorDescriptionPropsType = {\r\n  editMode: boolean;\r\n  handleSelectRegType: (e: RadioChangeEvent) => void;\r\n  toggleShowMap: () => void;\r\n  registeringType: ContractorTypesEnum;\r\n  contractor: ContractorType;\r\n  control: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  errors:\r\n    | {\r\n        name?: FieldError;\r\n        phoneNumber?: FieldError;\r\n        contactName?: FieldError;\r\n        location?: FieldError;\r\n        webSite?: FieldError;\r\n        eMail?: FieldError;\r\n        address?: FieldError;\r\n        description?: FieldError;\r\n      }\r\n    | {\r\n        name?: FieldError;\r\n        phoneNumber?: FieldError;\r\n        contactName?: FieldError;\r\n        location?: FieldError;\r\n      };\r\n};\r\n//TODO: сделать фильтр для заявок конкретного контрагента\r\n\r\nconst ContractorDescription: React.FC<ContractorDescriptionPropsType> = ({\r\n  editMode,\r\n  handleSelectRegType,\r\n  registeringType,\r\n  contractor,\r\n  control,\r\n  errors,\r\n  toggleShowMap,\r\n}) => {\r\n  return (\r\n    <>\r\n      <Descriptions size=\"small\" column={4}>\r\n        <Descriptions.Item label=\"Тип контрагента\">\r\n          {editMode ? (\r\n            <Radio.Group onChange={handleSelectRegType} value={registeringType}>\r\n              <Radio value={ContractorTypesEnum.SUPPLIER}>Поставщик</Radio>\r\n              <Radio value={ContractorTypesEnum.CUSTOMER}>Заказчик</Radio>\r\n            </Radio.Group>\r\n          ) : contractor.contractorType === ContractorTypesEnum.CUSTOMER ? (\r\n            \"Заказчик\"\r\n          ) : (\r\n            \"Поставщик\"\r\n          )}\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Заявки контрагента\">\r\n          <NavLink to=\"/orders\">Посмотреть</NavLink>\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Контактное лицо\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contactName}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.contactName}\r\n            fieldName=\"contactName\"\r\n            placeholder=\"Контактное лицо\"\r\n          />\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Город\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.location}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.location}\r\n            fieldName=\"location\"\r\n            placeholder=\"Город\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Координаты\">\r\n          <Button size=\"small\" type=\"link\" onClick={toggleShowMap}>\r\n            Посмотреть на карте\r\n          </Button>\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Сайт\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.webSite}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.webSite}\r\n            fieldName=\"webSite\"\r\n            placeholder=\"Сайт\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Почта\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.eMail}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.eMail}\r\n            fieldName=\"eMail\"\r\n            placeholder=\"Почта\"\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Адрес\">\r\n          <ContractorEditableField\r\n            defaultValue={contractor.contacts.address}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.address}\r\n            fieldName=\"address\"\r\n            placeholder=\"Адрес\"\r\n          />\r\n        </Descriptions.Item>\r\n\r\n        <Descriptions.Item label=\"Телефон\">\r\n          <ContractorEditableField\r\n            defaultValue={`+${contractor.phoneNumber}`}\r\n            editMode={editMode}\r\n            control={control}\r\n            error={errors.phoneNumber}\r\n            fieldName=\"phoneNumber\"\r\n            placeholder=\"Телефон\"\r\n            maxLength={12}\r\n          />\r\n        </Descriptions.Item>\r\n        <Descriptions.Item label=\"Идентификатор контрагента\">\r\n          {contractor.id}\r\n        </Descriptions.Item>\r\n      </Descriptions>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(ContractorDescription);\r\n","import React from \"react\";\r\nimport {\r\n  Layout,\r\n  PageHeader,\r\n  Button,\r\n  Card,\r\n  RadioChangeEvent,\r\n  message,\r\n} from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { customerSchema, supplierSchema } from \"../../utils/validatorsSchemes\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { AppAlert, AppMap, AppPreloader } from \"../../components\";\r\n\r\nimport { getCategoriesTreeDataState } from \"../../store/selectors/categories\";\r\nimport {\r\n  getContractorImagesState,\r\n  getContractorImageUploadingState,\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getContractorsLoadingState,\r\n  getCurrentContractorState,\r\n} from \"../../store/selectors/contractors\";\r\nimport {\r\n  addContractorImage,\r\n  contractorActions,\r\n  deleteContractor,\r\n  getContractorById,\r\n  removeContractorImage,\r\n  updateContractor,\r\n} from \"../../store/actions/contractors\";\r\nimport {\r\n  ContractorDescription,\r\n  ContractorEditableField,\r\n  ContractorInfoBody,\r\n} from \"./components\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorTypesEnum,\r\n  CoordinatesType,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../models/Contractors\";\r\n\r\nconst { Content } = Layout;\r\n\r\nconst ContractorPage = () => {\r\n  const [editMode, setEditMode] = React.useState(false);\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n  const [latLng, setLatLng] = React.useState<CoordinatesType | null>(null);\r\n  const [registeringType, setRegisteringType] =\r\n    React.useState<ContractorTypesEnum>(ContractorTypesEnum.SUPPLIER);\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<SupplierDescrFormDataType | CustomerDescrFormDataType>({\r\n    resolver: yupResolver(\r\n      registeringType === ContractorTypesEnum.SUPPLIER\r\n        ? supplierSchema\r\n        : customerSchema\r\n    ),\r\n  });\r\n\r\n  const contractor = useSelector(getCurrentContractorState);\r\n  const contractorActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorError = useSelector(getContractorsErrorMessage);\r\n  const contractorLoadingState = useSelector(getContractorsLoadingState);\r\n\r\n  const contractorImages = useSelector(getContractorImagesState);\r\n  const contractorImageUploading = useSelector(\r\n    getContractorImageUploadingState\r\n  );\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n\r\n  const { contractorId }: { contractorId?: string } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setCurrentContractor(null));\r\n    dispatch(contractorActions.clearContractorImages());\r\n  }, [dispatch]);\r\n\r\n  const toggleEditMode = React.useCallback(() => {\r\n    setEditMode((prev) => {\r\n      dispatch(\r\n        contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n      );\r\n      return !prev;\r\n    });\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getContractorById(Number(contractorId)));\r\n    return () => {\r\n      clearState();\r\n    };\r\n  }, [clearState, dispatch, contractorId]);\r\n\r\n  React.useEffect(() => {\r\n    if (contractor) {\r\n      setSelectedCategories(\r\n        contractor.categories?.map((category) => category.categoryId)\r\n      );\r\n      setRegisteringType(contractor.contractorType);\r\n      setLatLng({\r\n        coordinatesLatitude: contractor.coordinates.coordinatesLatitude,\r\n        coordinatesLongitude: contractor.coordinates.coordinatesLongitude,\r\n      });\r\n      dispatch(contractorActions.setContractorImages(contractor.attachments));\r\n    }\r\n  }, [contractor, dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    // ВО ВРЕМЯ УДАЛЕНИЯ\r\n    if (!contractor && contractorActionStatus === ActionStatusEnum.SUCCESS) {\r\n      history.push(\"/contractors\");\r\n    }\r\n  }, [history, contractor, contractorActionStatus]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    if (contractor) {\r\n      const categories = selectedCategories.map((categoryId) => ({\r\n        categoryId,\r\n      }));\r\n\r\n      const newContractor: AddContractorFormDataType = {\r\n        name: formData.name,\r\n        contactName: formData.contactName,\r\n        phoneNumber: `7${String(formData.phoneNumber).slice(-10)}`,\r\n        //@ts-ignore\r\n        description: formData.description ? formData.description : \"\",\r\n        location: formData.location,\r\n        coordinates: latLng\r\n          ? latLng\r\n          : {\r\n              coordinatesLatitude: \"\",\r\n              coordinatesLongitude: \"\",\r\n            },\r\n        contacts: {\r\n          //@ts-ignore\r\n          address: formData.address ? formData.address : \"\",\r\n          //@ts-ignore\r\n          webSite: formData.webSite ? formData.webSite : \"\",\r\n          //@ts-ignore\r\n          eMail: formData.eMail ? formData.eMail : \"\",\r\n        },\r\n        contractorType: registeringType,\r\n        categories,\r\n        attachments: contractorImages.map((image) => ({\r\n          attachmentId: image.id,\r\n        })),\r\n      };\r\n      setEditMode(false);\r\n      dispatch(updateContractor(newContractor, contractor.id));\r\n    }\r\n  });\r\n\r\n  const goBack = () => window.history.back();\r\n\r\n  const handleSelectCategories = React.useCallback((value: number[]) => {\r\n    setSelectedCategories(value);\r\n  }, []);\r\n\r\n  const handleDeleteContractor = React.useCallback(() => {\r\n    const answer = window.confirm(\"Вы уверены что хотите удалить контрагента?\");\r\n    if (answer && contractor) {\r\n      dispatch(deleteContractor(contractor.id));\r\n    }\r\n  }, [contractor, dispatch]);\r\n\r\n  const handleSelectRegType = React.useCallback((e: RadioChangeEvent) => {\r\n    setRegisteringType(e.target.value);\r\n  }, []);\r\n\r\n  const handleCancelEdit = React.useCallback(() => {\r\n    toggleEditMode();\r\n    if (contractor) {\r\n      setSelectedCategories(\r\n        contractor.categories?.map((category) => category.categoryId)\r\n      );\r\n      dispatch(contractorActions.clearContractorImages());\r\n      dispatch(contractorActions.setContractorImages(contractor.attachments));\r\n    }\r\n  }, [contractor, dispatch, toggleEditMode]);\r\n\r\n  const toggleShowMap = React.useCallback(() => {\r\n    setShowMap(!showMap);\r\n  }, [showMap]);\r\n\r\n  const handleSelectCoords = React.useCallback(\r\n    (latLng: google.maps.LatLng | null) => {\r\n      if (editMode) {\r\n        setLatLng({\r\n          coordinatesLatitude: String(latLng?.lat()),\r\n          coordinatesLongitude: String(latLng?.lng()),\r\n        });\r\n      }\r\n    },\r\n    [editMode]\r\n  );\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addContractorImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    if (contractor) {\r\n      dispatch(removeContractorImage(contractor.id, imageId));\r\n    }\r\n  };\r\n\r\n  const checkDisabledBtn = React.useCallback(() => {\r\n    if (registeringType === ContractorTypesEnum.SUPPLIER) {\r\n      return (\r\n        Object.keys(errors).length !== 0 || selectedCategories.length === 0\r\n      );\r\n    }\r\n    return Object.keys(errors).length !== 0;\r\n  }, [errors, registeringType, selectedCategories.length]);\r\n\r\n  const getEditActionsButtons = () => {\r\n    return [\r\n      <Button key=\"1\" onClick={onSubmit} disabled={checkDisabledBtn()}>\r\n        Сохранить\r\n      </Button>,\r\n      <Button key=\"2\" onClick={handleCancelEdit} danger>\r\n        Отменить\r\n      </Button>,\r\n    ];\r\n  };\r\n\r\n  const getActionsButtons = () => {\r\n    return [\r\n      <Button key=\"3\" onClick={toggleEditMode}>\r\n        Редактировать\r\n      </Button>,\r\n      <Button key=\"5\" onClick={handleDeleteContractor} danger>\r\n        Удалить\r\n      </Button>,\r\n    ];\r\n  };\r\n\r\n  const editActionsButtons = React.useMemo(getEditActionsButtons, [\r\n    checkDisabledBtn,\r\n    handleCancelEdit,\r\n    onSubmit,\r\n  ]);\r\n  const actionButtons = React.useMemo(getActionsButtons, [\r\n    handleDeleteContractor,\r\n    toggleEditMode,\r\n  ]);\r\n\r\n  if (showMap) {\r\n    return (\r\n      <Content className=\"content\">\r\n        <div className=\"map__header\">\r\n          <Button className=\"map-btn\" type=\"default\" onClick={toggleShowMap}>\r\n            Назад\r\n          </Button>\r\n          {latLng && editMode && (\r\n            <Button onClick={toggleShowMap}>Сохранить</Button>\r\n          )}\r\n        </div>\r\n\r\n        <AppMap\r\n          containerElement={<Card className=\"map\" />}\r\n          mapElement={<div className=\"map-element\" />}\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCxdk4gpLGO1qZLBP8yN54kfA5wm35HWXQ&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<AppPreloader />}\r\n          handleSelectCoords={handleSelectCoords}\r\n          marker={latLng}\r\n        />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  if (contractorLoadingState) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={() =>\r\n          dispatch(\r\n            contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n          )\r\n        }\r\n        errorMessage={contractorError}\r\n        status={contractorActionStatus}\r\n        successMessage=\"Изменения успешно сохранены\"\r\n      />\r\n      {contractor && (\r\n        <>\r\n          <div className=\"page-header\">\r\n            <PageHeader\r\n              ghost={false}\r\n              onBack={goBack}\r\n              title={\r\n                <ContractorEditableField\r\n                  defaultValue={contractor.name}\r\n                  editMode={editMode}\r\n                  control={control}\r\n                  error={errors.name}\r\n                  fieldName=\"name\"\r\n                  placeholder=\"Название\"\r\n                />\r\n              }\r\n              extra={editMode ? editActionsButtons : actionButtons}\r\n            >\r\n              <ContractorDescription\r\n                editMode={editMode}\r\n                handleSelectRegType={handleSelectRegType}\r\n                registeringType={registeringType}\r\n                contractor={contractor}\r\n                control={control}\r\n                errors={errors}\r\n                toggleShowMap={toggleShowMap}\r\n              />\r\n            </PageHeader>\r\n          </div>\r\n          <ContractorInfoBody\r\n            defaultValue={contractor.description}\r\n            editMode={editMode}\r\n            control={control}\r\n            //@ts-ignore\r\n            error={errors.description}\r\n            categoriesTree={categoriesTree}\r\n            selectedCategories={selectedCategories}\r\n            handleSelectCategories={handleSelectCategories}\r\n            images={contractorImages}\r\n            registeringType={registeringType}\r\n            handleRemoveImage={handleRemoveImage}\r\n            handleAddImage={handleUploadImage}\r\n            imageUploading={contractorImageUploading}\r\n          />\r\n        </>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorPage;\r\n","import { Form, Typography, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport { Control, Controller, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\n\r\ntype ContractorFieldPropsType = {\r\n  subtitle: string;\r\n  fieldName: SupplierFieldsNameType;\r\n  required: boolean;\r\n  maxLength?: number;\r\n  control?: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  error?: FieldError;\r\n  textArea?: boolean;\r\n  defaultValue?: string;\r\n};\r\n\r\nconst { Text } = Typography;\r\n\r\nconst ContractorField: React.FC<ContractorFieldPropsType> = ({\r\n  control,\r\n  error,\r\n  subtitle,\r\n  fieldName,\r\n  required = true,\r\n  maxLength,\r\n  textArea,\r\n  defaultValue,\r\n}) => {\r\n  const InputField = textArea ? Input.TextArea : Input;\r\n\r\n  return (\r\n    <Controller\r\n      control={control}\r\n      rules={{ required }}\r\n      render={({ field: { onChange, value } }) => (\r\n        <Form.Item\r\n          validateStatus={error ? \"error\" : \"success\"}\r\n          help={error?.message}\r\n          className=\"input form__input\"\r\n          required={required}\r\n        >\r\n          <Text className=\"subtitle\">{subtitle}</Text>\r\n          <InputField\r\n            placeholder={subtitle}\r\n            value={value}\r\n            onChange={onChange}\r\n            maxLength={maxLength}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n      name={fieldName}\r\n      defaultValue={defaultValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ContractorField;\r\n","import React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n  SupplierFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorField from \"./ContractorField\";\r\n\r\nconst fields = [\r\n  {\r\n    id: \"1\",\r\n    fieldName: \"name\",\r\n    subtitle: \"Название организации\",\r\n    required: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    fieldName: \"contactName\",\r\n    subtitle: \"Контактное лицо\",\r\n    required: true,\r\n  },\r\n  { id: \"3\", fieldName: \"location\", subtitle: \"Город\", required: true },\r\n  { id: \"4\", fieldName: \"address\", subtitle: \"Адрес\", required: true },\r\n  { id: \"5\", fieldName: \"eMail\", subtitle: \"Почта\", required: false },\r\n  { id: \"6\", fieldName: \"webSite\", subtitle: \"Сайт компании\", required: false },\r\n  {\r\n    id: \"7\",\r\n    fieldName: \"phoneNumber\",\r\n    subtitle: \"Номер телефона\",\r\n    maxLength: 12,\r\n    required: true,\r\n    defaultValue: \"+7\",\r\n  },\r\n  {\r\n    id: \"8\",\r\n    fieldName: \"description\",\r\n    subtitle: \"Описание\",\r\n    required: false,\r\n    textArea: true,\r\n  },\r\n];\r\n\r\ntype SupplierDescrFormPropsType = {\r\n  control?: Control<\r\n    SupplierDescrFormDataType | CustomerDescrFormDataType,\r\n    object\r\n  >;\r\n  errors: {\r\n    name?: FieldError;\r\n    phoneNumber?: FieldError;\r\n    contactName?: FieldError;\r\n    location?: FieldError;\r\n    webSite?: FieldError;\r\n    eMail?: FieldError;\r\n    address?: FieldError;\r\n    description?: FieldError;\r\n  };\r\n};\r\n\r\nconst SupplierDescrForm: React.FC<SupplierDescrFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      {fields.map((field) => {\r\n        return (\r\n          <ContractorField\r\n            key={field.id}\r\n            control={control}\r\n            error={errors[field.fieldName as SupplierFieldsNameType]}\r\n            subtitle={field.subtitle}\r\n            fieldName={field.fieldName as SupplierFieldsNameType}\r\n            required={field.required}\r\n            maxLength={field.maxLength}\r\n            textArea={field.textArea}\r\n            defaultValue={field.defaultValue}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SupplierDescrForm;\r\n","import React from \"react\";\r\nimport { Control, FieldError } from \"react-hook-form\";\r\nimport {\r\n  CustomerDescrFormDataType,\r\n  CustomerFieldsNameType,\r\n} from \"../../../models/Contractors\";\r\nimport ContractorField from \"./ContractorField\";\r\n\r\nconst fields = [\r\n  {\r\n    id: \"1\",\r\n    fieldName: \"name\",\r\n    subtitle: \"Название организации\",\r\n    required: true,\r\n  },\r\n  {\r\n    id: \"2\",\r\n    fieldName: \"contactName\",\r\n    subtitle: \"Контактное лицо\",\r\n    required: true,\r\n  },\r\n  { id: \"3\", fieldName: \"location\", subtitle: \"Город\", required: true },\r\n  {\r\n    id: \"7\",\r\n    fieldName: \"phoneNumber\",\r\n    subtitle: \"Номер телефона\",\r\n    maxLength: 12,\r\n    required: true,\r\n    defaultValue: \"+7\",\r\n  },\r\n];\r\n\r\ntype CustomerDescrFormPropsType = {\r\n  control?: Control<CustomerDescrFormDataType, object>;\r\n  errors: {\r\n    name?: FieldError;\r\n    phoneNumber?: FieldError;\r\n    contactName?: FieldError;\r\n    location?: FieldError;\r\n  };\r\n};\r\n\r\nconst CustomerDescrForm: React.FC<CustomerDescrFormPropsType> = ({\r\n  control,\r\n  errors,\r\n}) => {\r\n  return (\r\n    <>\r\n      {fields.map((field) => {\r\n        return (\r\n          <ContractorField\r\n            key={field.id}\r\n            control={control}\r\n            error={errors[field.fieldName as CustomerFieldsNameType]}\r\n            subtitle={field.subtitle}\r\n            fieldName={field.fieldName as CustomerFieldsNameType}\r\n            required={field.required}\r\n            maxLength={field.maxLength}\r\n            defaultValue={field.defaultValue}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerDescrForm;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Radio,\r\n  Layout,\r\n  Typography,\r\n  TreeSelect,\r\n  RadioChangeEvent,\r\n  message,\r\n} from \"antd\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  AppAlert,\r\n  AppMap,\r\n  AppPreloader,\r\n  ImagesList,\r\n  UploadFileForm,\r\n} from \"../../components\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { customerSchema, supplierSchema } from \"../../utils/validatorsSchemes\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesTreeDataState,\r\n} from \"../../store/selectors/categories\";\r\nimport { categoriesActions } from \"../../store/actions/categories\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  addContractorImage,\r\n  contractorActions,\r\n  createContractorProfile,\r\n  removeNewContractorImage,\r\n} from \"../../store/actions/contractors\";\r\nimport {\r\n  getContractorImagesState,\r\n  getContractorImageUploadingState,\r\n  getContractorsActionStatusState,\r\n  getContractorsErrorMessage,\r\n  getContractorsLoadingState,\r\n  getCurrentContractorState,\r\n} from \"../../store/selectors/contractors\";\r\nimport { SupplierDescrForm } from \"./components\";\r\nimport CustomerDescrForm from \"./components/CustomerDescrForm\";\r\nimport getBase64 from \"../../utils/getBase64\";\r\nimport { AttachmentType } from \"../../models/Attachments\";\r\nimport {\r\n  AddContractorFormDataType,\r\n  ContractorTypesEnum,\r\n  CoordinatesType,\r\n  CustomerDescrFormDataType,\r\n  SupplierDescrFormDataType,\r\n} from \"../../models/Contractors\";\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\nconst { SHOW_ALL } = TreeSelect;\r\n\r\nconst ContractorCreatePage = () => {\r\n  const [selectedCategories, setSelectedCategories] = React.useState<number[]>(\r\n    []\r\n  );\r\n  const [registeringType, setRegisteringType] =\r\n    React.useState<ContractorTypesEnum>(ContractorTypesEnum.SUPPLIER);\r\n\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<SupplierDescrFormDataType | CustomerDescrFormDataType>({\r\n    resolver: yupResolver(\r\n      registeringType === ContractorTypesEnum.SUPPLIER\r\n        ? supplierSchema\r\n        : customerSchema\r\n    ),\r\n  });\r\n\r\n  const [showMap, setShowMap] = React.useState(false);\r\n  const [latLng, setLatLng] = React.useState<CoordinatesType | null>(null);\r\n\r\n  const contractorActionStatus = useSelector(getContractorsActionStatusState);\r\n  const contractorError = useSelector(getContractorsErrorMessage);\r\n  const contractorLoading = useSelector(getContractorsLoadingState);\r\n  const currentContractor = useSelector(getCurrentContractorState);\r\n\r\n  const contractorImages = useSelector(getContractorImagesState);\r\n  const contractorImageUploading = useSelector(\r\n    getContractorImageUploadingState\r\n  );\r\n\r\n  const categoriesTree = useSelector(getCategoriesTreeDataState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const clearContractorsState = React.useCallback(() => {\r\n    dispatch(\r\n      contractorActions.setContractorsActionstatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(contractorActions.setContractorsErrorMessage(null));\r\n    dispatch(contractorActions.clearContractorImages());\r\n  }, [dispatch]);\r\n\r\n  const clearCategoriesState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => {\r\n      clearContractorsState();\r\n      clearCategoriesState();\r\n    };\r\n  }, [clearCategoriesState, clearContractorsState]);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      currentContractor &&\r\n      contractorActionStatus === ActionStatusEnum.SUCCESS\r\n    ) {\r\n      history.push(`/contractors/${currentContractor.id}`);\r\n    }\r\n  }, [currentContractor, history, contractorActionStatus]);\r\n\r\n  const handleSelectCategories = (value: number[]) => {\r\n    setSelectedCategories(value);\r\n  };\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    const categories = selectedCategories.map((categoryId) => ({\r\n      categoryId,\r\n    }));\r\n\r\n    const newContractor: AddContractorFormDataType = {\r\n      name: formData.name,\r\n      contactName: formData.contactName,\r\n      phoneNumber: `7${String(formData.phoneNumber).slice(-10)}`,\r\n      //@ts-ignore\r\n      description: formData.description ? formData.description : \"\",\r\n      location: formData.location,\r\n      coordinates: latLng\r\n        ? latLng\r\n        : {\r\n            coordinatesLatitude: \"\",\r\n            coordinatesLongitude: \"\",\r\n          },\r\n      contacts: {\r\n        //@ts-ignore\r\n        address: formData.address ? formData.address : \"\",\r\n        //@ts-ignore\r\n        webSite: formData.webSite ? formData.webSite : \"\",\r\n        //@ts-ignore\r\n        eMail: formData.eMail ? formData.eMail : \"\",\r\n      },\r\n      contractorType: registeringType,\r\n      categories,\r\n      attachments: contractorImages.map((image) => ({\r\n        attachmentId: image.id,\r\n      })),\r\n    };\r\n    dispatch(createContractorProfile(newContractor));\r\n  });\r\n\r\n  const handleSelectRegType = (e: RadioChangeEvent) => {\r\n    reset();\r\n    setRegisteringType(e.target.value);\r\n  };\r\n\r\n  const toggleShowMap = () => {\r\n    setShowMap(!showMap);\r\n  };\r\n\r\n  const handleSelectCoords = (latLng: google.maps.LatLng | null) => {\r\n    setLatLng({\r\n      coordinatesLatitude: String(latLng?.lat()),\r\n      coordinatesLongitude: String(latLng?.lng()),\r\n    });\r\n  };\r\n\r\n  const handleRemoveImage = (imageId: number) => {\r\n    dispatch(removeNewContractorImage(imageId));\r\n  };\r\n\r\n  const handleUploadImage = async (e: Event) => {\r\n    const target = e.currentTarget as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n\r\n    if (file) {\r\n      if (\r\n        file.type !== \"image/png\" &&\r\n        file.type !== \"image/jpeg\" &&\r\n        file.type !== \"image/jpg\"\r\n      ) {\r\n        return message.error(`${file.name} не является картинкой`);\r\n      } else {\r\n        const base64 = await getBase64(file);\r\n        const ext = file.name.split(\".\").pop();\r\n        const name = file.name;\r\n\r\n        if (base64 && ext && name) {\r\n          const image: AttachmentType = {\r\n            name: name,\r\n            ext: ext,\r\n            content: base64.split(\",\")[1],\r\n          };\r\n          dispatch(addContractorImage(image));\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  if (contractorLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  if (showMap) {\r\n    return (\r\n      <Content className=\"content\">\r\n        <div className=\"map__header\">\r\n          <Button className=\"map-btn\" type=\"default\" onClick={toggleShowMap}>\r\n            Назад\r\n          </Button>\r\n          {latLng && <Button onClick={toggleShowMap}>Сохранить</Button>}\r\n        </div>\r\n\r\n        <AppMap\r\n          containerElement={<Card className=\"map\" />}\r\n          mapElement={<div className=\"map-element\" />}\r\n          googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCxdk4gpLGO1qZLBP8yN54kfA5wm35HWXQ&v=3.exp&libraries=geometry,drawing,places\"\r\n          loadingElement={<AppPreloader />}\r\n          handleSelectCoords={handleSelectCoords}\r\n          marker={latLng}\r\n        />\r\n      </Content>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearContractorsState}\r\n        errorMessage={contractorError}\r\n        successMessage={\"Контрагент сохранен\"}\r\n        status={contractorActionStatus}\r\n      />\r\n      <AppAlert\r\n        onClose={clearCategoriesState}\r\n        errorMessage={categoriesError}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание контрагента\r\n        </Title>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER ? (\r\n          <SupplierDescrForm control={control} errors={errors} />\r\n        ) : (\r\n          <CustomerDescrForm control={control} errors={errors} />\r\n        )}\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <TreeSelect\r\n            treeData={categoriesTree}\r\n            value={selectedCategories}\r\n            onChange={handleSelectCategories}\r\n            treeCheckable={true}\r\n            showCheckedStrategy={SHOW_ALL}\r\n            placeholder={\"Выберите категории контрагента\"}\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            maxTagCount={5}\r\n          />\r\n        )}\r\n\r\n        <Radio.Group\r\n          onChange={handleSelectRegType}\r\n          value={registeringType}\r\n          className=\"radio-group\"\r\n        >\r\n          <Radio value={ContractorTypesEnum.SUPPLIER}>Поставщик</Radio>\r\n          <Radio value={ContractorTypesEnum.CUSTOMER}>Заказчик</Radio>\r\n        </Radio.Group>\r\n        {registeringType === ContractorTypesEnum.SUPPLIER && (\r\n          <Button\r\n            className=\"map-btn\"\r\n            type=\"default\"\r\n            onClick={toggleShowMap}\r\n            block\r\n          >\r\n            {latLng ? \"Изменить координаты\" : \"Отметить на карте\"}\r\n          </Button>\r\n        )}\r\n        <ImagesList\r\n          removeImage={handleRemoveImage}\r\n          images={contractorImages}\r\n          editMode={true}\r\n        />\r\n        <UploadFileForm\r\n          onChange={handleUploadImage}\r\n          isUploading={contractorImageUploading}\r\n        />\r\n        <Button\r\n          className=\"order__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={\r\n            Object.keys(errors).length > 0 ||\r\n            (registeringType === ContractorTypesEnum.SUPPLIER &&\r\n              selectedCategories.length === 0)\r\n          }\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ContractorCreatePage;\r\n","import { Form, Input, Typography } from \"antd\";\r\nimport React, { ChangeEvent } from \"react\";\r\n\r\nconst { Text } = Typography;\r\n\r\ntype CategoryEditablePropsType = {\r\n  editMode: boolean;\r\n  placeholder?: string;\r\n  value: string;\r\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void;\r\n  currentValue?: string;\r\n  error?: string;\r\n};\r\n\r\nconst CategoryEditableField: React.FC<CategoryEditablePropsType> = ({\r\n  placeholder,\r\n  editMode,\r\n  value,\r\n  currentValue,\r\n  error,\r\n  onChange,\r\n}) => {\r\n  const handleInputClick = (\r\n    e: React.MouseEvent<HTMLInputElement, MouseEvent>\r\n  ) => {\r\n    e.stopPropagation();\r\n  };\r\n\r\n  if (editMode) {\r\n    return (\r\n      <Form.Item\r\n        validateStatus={error ? \"error\" : \"success\"}\r\n        help={error}\r\n        className=\"input\"\r\n        required\r\n        tooltip=\"Обязательное поле\"\r\n      >\r\n        <Input\r\n          placeholder={placeholder}\r\n          onClick={handleInputClick}\r\n          value={currentValue}\r\n          onChange={onChange}\r\n        />\r\n      </Form.Item>\r\n    );\r\n  }\r\n  return <Text>{value}</Text>;\r\n};\r\n\r\nexport default CategoryEditableField;\r\n","import { Button } from \"antd\";\r\nimport React from \"react\";\r\nimport { CategoryType } from \"../../../models/Categories\";\r\n\r\ntype CategoryActionsPropsType = {\r\n  editMode: boolean;\r\n  disabledBtn: boolean;\r\n  onSave: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\r\n  onEdit: (category: CategoryType) => void;\r\n  category: CategoryType;\r\n  onRemove: (id: number) => void;\r\n};\r\n\r\nconst CategoryActions: React.FC<CategoryActionsPropsType> = ({\r\n  editMode,\r\n  disabledBtn,\r\n  onSave,\r\n  onEdit,\r\n  category,\r\n  onRemove,\r\n}) => {\r\n  return (\r\n    <div className=\"categories__actions\">\r\n      {editMode ? (\r\n        <Button onClick={onSave} disabled={disabledBtn}>\r\n          Сохранить\r\n        </Button>\r\n      ) : (\r\n        <>\r\n          <Button\r\n            className=\"categories__btn\"\r\n            onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n              e.stopPropagation();\r\n              onEdit(category);\r\n            }}\r\n          >\r\n            Редактировать\r\n          </Button>\r\n          <Button\r\n            className=\"categories__btn\"\r\n            onClick={(e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n              e.stopPropagation();\r\n              onRemove(category.id);\r\n            }}\r\n            danger\r\n          >\r\n            Удалить\r\n          </Button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryActions;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { Layout, Typography, Empty, Collapse, Button, List } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesLoadingState,\r\n  getCategoryInProcessEditState,\r\n  getMainCategoriesState,\r\n  getSubCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport {\r\n  categoriesActions,\r\n  deleteCategoryById,\r\n  updateCategoryById,\r\n} from \"../../store/actions/categories\";\r\nimport { AppAlert, AppPreloader, SelectParentCategory } from \"../../components\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { MainCategoryActions, CategoryEditableField } from \"./components\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst { Content } = Layout;\r\nconst { Text } = Typography;\r\nconst { Panel } = Collapse;\r\n\r\nconst CategoriesPage = () => {\r\n  const [editableCategory, setEditableCategory] =\r\n    React.useState<CategoryType | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const mainCategories = useSelector(getMainCategoriesState);\r\n  const subCategories = useSelector(getSubCategoriesState);\r\n  const categoriesLoading = useSelector(getCategoriesLoadingState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoryInEditProcess = useSelector(getCategoryInProcessEditState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  React.useEffect(() => {\r\n    return () => clearState();\r\n  }, [clearState]);\r\n\r\n  const onRemove = (id: number) => {\r\n    const answer = window.confirm(\"Вы действительно хотите удалить категорию?\");\r\n    if (answer) {\r\n      dispatch(deleteCategoryById(id));\r\n    }\r\n  };\r\n\r\n  const onEdit = (category: CategoryType) => {\r\n    setEditableCategory(category);\r\n  };\r\n\r\n  const onSave = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\r\n    e.stopPropagation();\r\n    if (editableCategory) {\r\n      dispatch(updateCategoryById(editableCategory));\r\n    }\r\n    setEditableCategory(null);\r\n  };\r\n\r\n  const onCategoryNameChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEditableCategory((prev) => {\r\n      if (prev) {\r\n        return { ...prev, name: e.target.value };\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  const handleChangeParentId = (id: number) => {\r\n    setEditableCategory((prev) => {\r\n      if (prev) {\r\n        return { ...prev, parentId: id };\r\n      }\r\n      return prev;\r\n    });\r\n  };\r\n\r\n  if (categoriesLoading) {\r\n    return <AppPreloader size=\"large\" />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Изменения сохранены\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      {mainCategories && mainCategories.length > 0 ? (\r\n        <Collapse accordion>\r\n          {mainCategories.map((mainCat) => {\r\n            return (\r\n              <Panel\r\n                header={\r\n                  <div className=\"categories__header\">\r\n                    {categoryInEditProcess === mainCat.id ? (\r\n                      <Text>Сохранение...</Text>\r\n                    ) : (\r\n                      <CategoryEditableField\r\n                        editMode={editableCategory?.id === mainCat.id}\r\n                        value={mainCat.name}\r\n                        currentValue={editableCategory?.name}\r\n                        onChange={onCategoryNameChange}\r\n                      />\r\n                    )}\r\n                  </div>\r\n                }\r\n                key={mainCat.id}\r\n                extra={\r\n                  <MainCategoryActions\r\n                    editMode={editableCategory?.id === mainCat.id}\r\n                    disabledBtn={editableCategory?.name.length === 0}\r\n                    onSave={onSave}\r\n                    onEdit={onEdit}\r\n                    category={mainCat}\r\n                    onRemove={onRemove}\r\n                  />\r\n                }\r\n              >\r\n                {subCategories && (\r\n                  <List\r\n                    dataSource={subCategories.filter(\r\n                      (subCat) => subCat.parentId === mainCat.id\r\n                    )}\r\n                    renderItem={(item) => (\r\n                      <List.Item\r\n                        actions={\r\n                          editableCategory?.id === item.id\r\n                            ? [\r\n                                <Button\r\n                                  onClick={onSave}\r\n                                  disabled={editableCategory?.name.length === 0}\r\n                                >\r\n                                  Сохранить\r\n                                </Button>,\r\n                              ]\r\n                            : [\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={(\r\n                                    e: React.MouseEvent<HTMLElement, MouseEvent>\r\n                                  ) => {\r\n                                    e.stopPropagation();\r\n                                    onEdit(item);\r\n                                  }}\r\n                                >\r\n                                  Редактировать\r\n                                </Button>,\r\n                                <Button\r\n                                  size=\"small\"\r\n                                  onClick={(\r\n                                    e: React.MouseEvent<HTMLElement, MouseEvent>\r\n                                  ) => {\r\n                                    e.stopPropagation();\r\n                                    onRemove(item.id);\r\n                                  }}\r\n                                  danger\r\n                                >\r\n                                  Удалить\r\n                                </Button>,\r\n                              ]\r\n                        }\r\n                      >\r\n                        <List.Item.Meta\r\n                          description={\r\n                            <>\r\n                              {categoryInEditProcess === item.id ? (\r\n                                <Text>Сохранение...</Text>\r\n                              ) : (\r\n                                <>\r\n                                  <CategoryEditableField\r\n                                    editMode={editableCategory?.id === item.id}\r\n                                    value={item.name}\r\n                                    currentValue={editableCategory?.name}\r\n                                    onChange={onCategoryNameChange}\r\n                                  />\r\n                                  {editableCategory?.id === item.id && (\r\n                                    <SelectParentCategory\r\n                                      mainCategories={mainCategories}\r\n                                      handleChangeParentId={\r\n                                        handleChangeParentId\r\n                                      }\r\n                                      item={item}\r\n                                    />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                            </>\r\n                          }\r\n                        />\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                )}\r\n              </Panel>\r\n            );\r\n          })}\r\n        </Collapse>\r\n      ) : (\r\n        <Empty description=\"Данных нет\" />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoriesPage;\r\n","import React from \"react\";\r\n\r\nimport { Button, Card, Form, Input, Layout, Typography } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\n\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoriesLoadingState,\r\n  getMainCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport { AppAlert, AppPreloader, SelectParentCategory } from \"../../components\";\r\nimport {\r\n  categoriesActions,\r\n  createCategory,\r\n} from \"../../store/actions/categories\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { categorySchema } from \"../../utils/validatorsSchemes\";\r\nimport { AddCategoryFormData } from \"../../models/Categories\";\r\n\r\nconst { Content } = Layout;\r\nconst { Text, Title } = Typography;\r\n\r\nconst CategoryCreatePage = () => {\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<AddCategoryFormData>({\r\n    resolver: yupResolver(categorySchema),\r\n  });\r\n\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n  const mainCategories = useSelector(getMainCategoriesState);\r\n  const categoriesLoading = useSelector(getCategoriesLoadingState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const onSubmit = handleSubmit((formData) => {\r\n    dispatch(createCategory(formData));\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    return () => clearState();\r\n  }, [clearState]);\r\n\r\n  if (categoriesLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Категория сохранена\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      <Card className=\"form\">\r\n        <Title level={3} className=\"title\">\r\n          Создание категории\r\n        </Title>\r\n        <Controller\r\n          control={control}\r\n          rules={{\r\n            required: true,\r\n          }}\r\n          render={({ field: { onChange, value } }) => (\r\n            <Form.Item\r\n              validateStatus={errors.name ? \"error\" : \"success\"}\r\n              help={errors.name?.message}\r\n              className=\"input\"\r\n              required\r\n            >\r\n              <Text className=\"subtitle\">Название категории</Text>\r\n              <Input\r\n                placeholder=\"Название категории\"\r\n                value={value}\r\n                onChange={onChange}\r\n              />\r\n            </Form.Item>\r\n          )}\r\n          name=\"name\"\r\n          defaultValue=\"\"\r\n        />\r\n        {mainCategories && (\r\n          <Controller\r\n            control={control}\r\n            rules={{\r\n              required: true,\r\n            }}\r\n            render={({ field: { onChange, value } }) => (\r\n              <SelectParentCategory\r\n                mainCategories={mainCategories}\r\n                handleChangeParentId={onChange}\r\n                error={errors.parentId?.message}\r\n              />\r\n            )}\r\n            name=\"parentId\"\r\n            defaultValue={0}\r\n          />\r\n        )}\r\n        <Button\r\n          className=\"categories__save-btn\"\r\n          onClick={onSubmit}\r\n          disabled={categoriesLoading || Object.keys(errors).length > 0}\r\n        >\r\n          Сохранить\r\n        </Button>\r\n      </Card>\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default CategoryCreatePage;\r\n","import { Button, Card, Empty, List, Typography } from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppAlert } from \"../../components\";\r\nimport {\r\n  categoriesActions,\r\n  updateCategoryById,\r\n} from \"../../store/actions/categories\";\r\nimport {\r\n  getCategoriesActionStatusState,\r\n  getCategoriesErrorMessageState,\r\n  getCategoryInProcessEditState,\r\n  getDeletedCategoriesState,\r\n} from \"../../store/selectors/categories\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst { Text } = Typography;\r\n\r\nconst DeletedCategoriesPage = () => {\r\n  const deletedCategories = useSelector(getDeletedCategoriesState);\r\n  const categoriesError = useSelector(getCategoriesErrorMessageState);\r\n  const categoriesActionStatus = useSelector(getCategoriesActionStatusState);\r\n  const categoryInEditProcess = useSelector(getCategoryInProcessEditState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const clearState = React.useCallback(() => {\r\n    dispatch(\r\n      categoriesActions.setCategoriesActionStatus(ActionStatusEnum.NEVER)\r\n    );\r\n    dispatch(categoriesActions.setCategoriesErrorMessage(null));\r\n  }, [dispatch]);\r\n\r\n  const onRestore = (category: CategoryType) => {\r\n    const answer = window.confirm(\"Восстановить выбранную категорию?\");\r\n    if (answer) {\r\n      const updateCategory = { ...category, isDeleted: false };\r\n      dispatch(updateCategoryById(updateCategory));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      <AppAlert\r\n        onClose={clearState}\r\n        errorMessage={categoriesError}\r\n        successMessage={\"Изменения сохранены\"}\r\n        status={categoriesActionStatus}\r\n      />\r\n      {deletedCategories && deletedCategories.length === 0 ? (\r\n        <Empty />\r\n      ) : (\r\n        <Card>\r\n          <List\r\n            dataSource={deletedCategories}\r\n            renderItem={(item) => (\r\n              <List.Item\r\n                actions={[\r\n                  <Button onClick={() => onRestore(item)}>Восстановить</Button>,\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  description={\r\n                    categoryInEditProcess === item.id ? (\r\n                      <Text>Сохранение...</Text>\r\n                    ) : (\r\n                      <Text>{item.name}</Text>\r\n                    )\r\n                  }\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </Card>\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default DeletedCategoriesPage;\r\n","import { Empty, Card } from \"antd\";\r\nimport { Content } from \"antd/lib/layout/layout\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { AppPreloader } from \"../../components\";\r\nimport { getOrderChats } from \"../../store/actions/orders\";\r\nimport {\r\n  getOrderChatsState,\r\n  getOrdersLoadingState,\r\n} from \"../../store/selectors/orders\";\r\n\r\nconst OrderChatsPage = () => {\r\n  const { orderId }: { orderId?: string } = useParams();\r\n\r\n  const orderChats = useSelector(getOrderChatsState);\r\n  const chatsLoading = useSelector(getOrdersLoadingState);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getOrderChats(Number(orderId)));\r\n  }, [dispatch, orderId]);\r\n\r\n  if (chatsLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      {orderChats ? (\r\n        orderChats.length === 0 ? (\r\n          <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\r\n        ) : (\r\n          <>\r\n            {orderChats.map((chat) => (\r\n              <Card\r\n                title={`Чат №${chat.id}`}\r\n                bodyStyle={{ display: \"flex\" }}\r\n                key={chat.id}\r\n              >\r\n                <Card.Grid>\r\n                  Поставщик:{\" \"}\r\n                  {\r\n                    <NavLink to={`/contractors/${chat.supplierId}`}>\r\n                      {chat.supplierName}\r\n                    </NavLink>\r\n                  }\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                  Заказчик:{\" \"}\r\n                  {\r\n                    <NavLink to={`/contractors/${chat.customerId}`}>\r\n                      {chat.customerName}\r\n                    </NavLink>\r\n                  }\r\n                </Card.Grid>\r\n                <Card.Grid>\r\n                  {\r\n                    <NavLink to={`/orders/${chat.orderId}/chats/${chat.id}`}>\r\n                      Сообщения\r\n                    </NavLink>\r\n                  }\r\n                </Card.Grid>\r\n              </Card>\r\n            ))}\r\n          </>\r\n        )\r\n      ) : null}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default OrderChatsPage;\r\n","import { Dispatch } from \"redux\";\r\nimport { ThunkAction } from \"redux-thunk\";\r\nimport {\r\n  ChatInType,\r\n  ChatMessageInType,\r\n  ChatMessageOutType,\r\n} from \"../../models/Chats\";\r\nimport { ActionsCreatorsTypes } from \"../../models/types\";\r\nimport { chatsApi } from \"../../services/chatsApi\";\r\nimport { ordersApi } from \"../../services/ordersApi\";\r\nimport { AppStateType } from \"../store\";\r\n\r\nexport const chatsActions = {\r\n  setErrorMessage: (errorMessage: string | null) => {\r\n    return {\r\n      type: \"SET_CHATS_ERROR_MESSAGE\",\r\n      payload: { errorMessage },\r\n    } as const;\r\n  },\r\n  setChatsLoading: (chatsLoading: boolean) => {\r\n    return {\r\n      type: \"SET_CHATS_LOADING\",\r\n      payload: { chatsLoading },\r\n    } as const;\r\n  },\r\n  setMessages: (messages: ChatMessageOutType[]) => {\r\n    return {\r\n      type: \"SET_NEW_MESSAGES\",\r\n      payload: { messages },\r\n    } as const;\r\n  },\r\n};\r\n\r\n// chats/{orderId}/{chatId}\r\n\r\nexport const getChatMessages =\r\n  (orderId: number, chatId: number): ThunkAcionType =>\r\n  async (dispatch) => {\r\n    try {\r\n      dispatch(chatsActions.setChatsLoading(true));\r\n      const messages = await chatsApi.getAllChatMessage(orderId, chatId);\r\n\r\n      if (messages) {\r\n        dispatch(chatsActions.setMessages(messages));\r\n      } else {\r\n        dispatch(\r\n          chatsActions.setErrorMessage(\r\n            \"Не удалось загрузить сообщения, попробуйте еще раз\"\r\n          )\r\n        );\r\n      }\r\n    } catch (error) {\r\n      console.log(\"getChatMessages ---- \", error);\r\n      dispatch(chatsActions.setErrorMessage(\"Ошибка сети, попробуйте еще раз\"));\r\n    } finally {\r\n      dispatch(chatsActions.setChatsLoading(false));\r\n    }\r\n  };\r\nexport type ChatsActionTypes = ReturnType<\r\n  ActionsCreatorsTypes<typeof chatsActions>\r\n>;\r\n\r\ntype ThunkAcionType = ThunkAction<\r\n  Promise<void>,\r\n  AppStateType,\r\n  unknown,\r\n  ChatsActionTypes\r\n>;\r\n","import { AppStateType } from \"./../store\";\r\n\r\nconst getChatsState = (state: AppStateType) => state.chats;\r\n\r\nexport const getChatErrorMessageState = (state: AppStateType) =>\r\n  getChatsState(state).errorMessage;\r\nexport const getChatLoadinState = (state: AppStateType) =>\r\n  getChatsState(state).chatsLoading;\r\nexport const getChatMessagesState = (state: AppStateType) =>\r\n  getChatsState(state).messages;\r\n","import { Content } from \"antd/lib/layout/layout\";\r\nimport { List, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { AppPreloader } from \"../../components\";\r\nimport { getChatMessages } from \"../../store/actions/chats\";\r\nimport {\r\n  getChatLoadinState,\r\n  getChatMessagesState,\r\n} from \"../../store/selectors/chats\";\r\nimport { formatDateWithTime } from \"../../utils/formatter\";\r\n\r\nconst ChatPage = () => {\r\n  const { orderId, chatId }: { orderId: string; chatId: string } = useParams();\r\n\r\n  const messages = useSelector(getChatMessagesState);\r\n  const messagesLoading = useSelector(getChatLoadinState);\r\n\r\n  const dispatch = useDispatch();\r\n  React.useEffect(() => {\r\n    dispatch(getChatMessages(Number(orderId), Number(chatId)));\r\n  }, [chatId, dispatch, orderId]);\r\n\r\n  if (messagesLoading) {\r\n    return <AppPreloader />;\r\n  }\r\n\r\n  return (\r\n    <Content className=\"content\">\r\n      {messages && (\r\n        <List\r\n          bordered\r\n          dataSource={messages}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Typography.Text mark>\r\n                {formatDateWithTime(item.timeStamp)}\r\n              </Typography.Text>\r\n              <Typography.Text mark>[{item.senderName}]</Typography.Text>{\" \"}\r\n              {item.text}\r\n            </List.Item>\r\n          )}\r\n        />\r\n      )}\r\n    </Content>\r\n  );\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { AppHeader, AppSideBar } from \"../components\";\r\nimport {\r\n  CategoriesPage,\r\n  ContractorCreatePage,\r\n  ContractorsPage,\r\n  HomePage,\r\n  OrderCreatePage,\r\n  OrdersPage,\r\n  OrderPage,\r\n  CategoryCreatePage,\r\n  DeletedCategoriesPage,\r\n  ContractorPage,\r\n  OrderChatsPage,\r\n  ChatPage,\r\n} from \"../pages\";\r\n\r\nconst MainLayout = () => {\r\n  return (\r\n    <Layout className=\"wrapper\">\r\n      <AppHeader />\r\n      <Layout>\r\n        <AppSideBar />\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <Redirect to=\"/home\" />} />\r\n            <Route exact path=\"/home\">\r\n              <HomePage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/orders\">\r\n              <OrdersPage />\r\n            </Route>\r\n            <Route exact path=\"/orders/create\">\r\n              <OrderCreatePage />\r\n            </Route>\r\n            <Route exact path=\"/orders/:orderId\">\r\n              <OrderPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/orders/:orderId/chats\">\r\n              <OrderChatsPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/orders/:orderId/chats/:chatId\">\r\n              <ChatPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/contractors\">\r\n              <ContractorsPage />\r\n            </Route>\r\n            <Route exact path=\"/contractors/create\">\r\n              <ContractorCreatePage />\r\n            </Route>\r\n            <Route path=\"/contractors/:contractorId\">\r\n              <ContractorPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories\">\r\n              <CategoriesPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories/deleted\">\r\n              <DeletedCategoriesPage />\r\n            </Route>\r\n\r\n            <Route exact path=\"/categories/create\">\r\n              <CategoryCreatePage />\r\n            </Route>\r\n\r\n            <Route exact path=\"*\" render={() => <Redirect to=\"/home\" />}>\r\n              <HomePage />\r\n            </Route>\r\n          </Switch>\r\n        </Layout>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { MainLayout } from \"./layouts\";\nimport { getAllCategories } from \"./store/actions/categories\";\n\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(getAllCategories());\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n      <MainLayout />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AuthActionTypes } from \"../actions/auth\";\r\n\r\nconst initialState = {};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst authReducer = (\r\n  state = initialState,\r\n  action: AuthActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","import { ActionStatusEnum } from \"../../models/types\";\r\nimport { CategoriesActionTypes } from \"../actions/categories\";\r\nimport { CategoryType } from \"../../models/Categories\";\r\n\r\nconst initialState = {\r\n  categories: null as CategoryType[] | null | undefined,\r\n  isLoadingCategories: false,\r\n  errorMessage: null as string | null,\r\n  categoriesActionStatus: ActionStatusEnum.NEVER,\r\n  currentCategory: null as CategoryType | null,\r\n  categoryInProcessEdit: null as number | null,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst categoriesReducer = (\r\n  state = initialState,\r\n  action: CategoriesActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_CATEGORIES\":\r\n    case \"SET_IS_LOADING_CATEGORIES\":\r\n    case \"SET_CATEGORIES_ERROR_MESSAGE\":\r\n    case \"SET_CATEGORIES_ACTION_STATUS\":\r\n    case \"SET_CURRENT_CATEGORY\":\r\n    case \"SET_CATEGORY_IN_EDIT_PROCESS\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case \"REPLACE_CATEGORY\": {\r\n      const newCategoriesList = state.categories?.map((category) => {\r\n        if (category.id === action.payload.category.id) {\r\n          return action.payload.category;\r\n        }\r\n        return category;\r\n      });\r\n      return {\r\n        ...state,\r\n        categories: newCategoriesList,\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CATEGORY\": {\r\n      const newCategoriesList = state.categories?.filter(\r\n        (category) => category.id !== action.payload.id\r\n      );\r\n      return {\r\n        ...state,\r\n        categories: newCategoriesList,\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_CATEGORIES\": {\r\n      return {\r\n        ...state,\r\n        categories: null,\r\n      } as const;\r\n    }\r\n\r\n    case \"ADD_NEW_CATEGORY\": {\r\n      return {\r\n        ...state,\r\n        categories: state.categories\r\n          ? [...state.categories, action.payload.category]\r\n          : [action.payload.category],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default categoriesReducer;\r\n","import { AttachmentOutType } from \"./../../models/Attachments\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { ContractorsActionTypes } from \"../actions/contractors\";\r\nimport { ContractorType } from \"../../models/Contractors\";\r\n\r\nconst initialState = {\r\n  contractors: null as ContractorType[] | null | undefined,\r\n  currentContractor: null as ContractorType | null,\r\n  contractorsLoading: false,\r\n  contractorsActionStatus: ActionStatusEnum.NEVER,\r\n  errorMessage: null as string | null,\r\n  contractorImages: [] as AttachmentOutType[],\r\n  contractorImageUploading: false,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst contractorsReducer = (\r\n  state = initialState,\r\n  action: ContractorsActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_CONTRACTOR\":\r\n    case \"SET_CONTRACTORS_LOADING\":\r\n    case \"SET_CONTRACTORS_ACTION_STATUS\":\r\n    case \"SET_CONTRACTORS_ERROR_MESSAGE\":\r\n    case \"SET_CONTRACTORS\":\r\n    case \"SET_CONTRACTOR_IMAGE_UPLOADING\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CONTRACTOR\": {\r\n      return {\r\n        ...state,\r\n        contractors: state.contractors?.filter(\r\n          (contractor) => contractor.id !== action.payload.contractorId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"SET_CONTRACTOR_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: action.payload.images,\r\n      };\r\n    }\r\n\r\n    case \"ADD_CONTRACTOR_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: [...state.contractorImages, ...action.payload.images],\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_CONTRACTOR_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: state.contractorImages.filter(\r\n          (image) => image.id !== action.payload.imageId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_CONTRACTOR_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        contractorImages: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default contractorsReducer;\r\n","import { AttachmentOutType } from \"../../models/Attachments\";\r\nimport { ChatType } from \"../../models/Chats\";\r\nimport { OrderType } from \"../../models/Orders\";\r\nimport { ActionStatusEnum } from \"../../models/types\";\r\nimport { OrdersActionTypes } from \"../actions/orders\";\r\n\r\nconst initialState = {\r\n  orders: null as OrderType[] | null | undefined,\r\n  ordersLoading: false,\r\n  errorMessage: null as string | null,\r\n  orderActionStatus: ActionStatusEnum.NEVER,\r\n  currentOrder: null as OrderType | null,\r\n  orderImages: [] as AttachmentOutType[],\r\n  orderImageUploading: false,\r\n  orderChats: null as ChatType[] | null,\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst ordersReducer = (\r\n  state = initialState,\r\n  action: OrdersActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_ORDERS\":\r\n    case \"SET_ORDERS_LOADING\":\r\n    case \"SET_ORDERS_ERROR\":\r\n    case \"SET_ORDER_ACTION_STATUS\":\r\n    case \"SET_CURRENT_ORDER\":\r\n    case \"SET_ORDER_IMAGE_UPLOADING\":\r\n    case \"SET_ORDER_CHATS\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n\r\n    case \"ADD_NEW_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders\r\n          ? [...state.orders, action.payload.order]\r\n          : [action.payload.order],\r\n      };\r\n    }\r\n    case \"UPDATE_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders?.map((order) => {\r\n          if (order.id === action.payload.order.id) {\r\n            return action.payload.order;\r\n          }\r\n          return order;\r\n        }),\r\n      };\r\n    }\r\n    case \"REMOVE_ORDER\": {\r\n      return {\r\n        ...state,\r\n        orders: state.orders?.filter((order) => order.id !== action.payload.id),\r\n      };\r\n    }\r\n    case \"SET_ORDER_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        orderImages: action.payload.images,\r\n      };\r\n    }\r\n\r\n    case \"ADD_ORDER_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        orderImages: [...state.orderImages, ...action.payload.images],\r\n      };\r\n    }\r\n\r\n    case \"REMOVE_ORDER_IMAGE\": {\r\n      return {\r\n        ...state,\r\n        orderImages: state.orderImages.filter(\r\n          (image) => image.id !== action.payload.imageId\r\n        ),\r\n      };\r\n    }\r\n\r\n    case \"CLEAR_ORDER_IMAGES\": {\r\n      return {\r\n        ...state,\r\n        orderImages: [],\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ordersReducer;\r\n","import { ChatMessageOutType } from \"../../models/Chats\";\r\nimport { ChatsActionTypes } from \"../actions/chats\";\r\n\r\nconst initialState = {\r\n  errorMessage: null as null | string,\r\n  chatsLoading: false,\r\n  messages: [] as ChatMessageOutType[],\r\n};\r\n\r\ntype initStateType = typeof initialState;\r\n\r\nconst chatsReducer = (\r\n  state = initialState,\r\n  action: ChatsActionTypes\r\n): initStateType => {\r\n  switch (action.type) {\r\n    case \"SET_CHATS_ERROR_MESSAGE\":\r\n    case \"SET_CHATS_LOADING\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case \"SET_NEW_MESSAGES\": {\r\n      return {\r\n        ...state,\r\n        messages: action.payload.messages,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default chatsReducer;\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {\r\n  categoriesReducer,\r\n  contractorsReducer,\r\n  authReducer,\r\n  ordersReducer,\r\n  chatsReducer,\r\n} from \"./reducers\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  categories: categoriesReducer,\r\n  contractors: contractorsReducer,\r\n  orders: ordersReducer,\r\n  chats: chatsReducer,\r\n});\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./style.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}